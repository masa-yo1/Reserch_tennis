{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1ZXTQQQIUpW4sMRqxsA0zKAdBuEgmx79b","timestamp":1680244974810},{"file_id":"1hIojudw6qTm_OyMK3DQucLa0F3cXSGyf","timestamp":1679919114338}],"authorship_tag":"ABX9TyORO6c7MJ746GNUINRKpm/V"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","gpuClass":"premium"},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"3i88sonlSskC","executionInfo":{"status":"ok","timestamp":1680246694528,"user_tz":-540,"elapsed":5,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"iVcqz9hYTD8z","executionInfo":{"status":"ok","timestamp":1680246697640,"user_tz":-540,"elapsed":3116,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"59dcc506-680f-4bda-b4aa-8b67351df568"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["cd /content/drive/MyDrive/tennis_data/match_2023_01_10"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wORIyYqBUTVd","executionInfo":{"status":"ok","timestamp":1680246697641,"user_tz":-540,"elapsed":25,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"8e6d419b-ab42-4e35-83e9-d0349a1d597b"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/tennis_data/match_2023_01_10\n"]}]},{"cell_type":"code","source":["df=pd.read_csv('vs_kubo_1.csv')\n","condition = df['Stroke'] == 'Feed'\n","subset = df[condition]\n","df = df.drop(subset.index)\n","len(df)"],"metadata":{"id":"tvdaEkfATPSZ","executionInfo":{"status":"ok","timestamp":1680246697642,"user_tz":-540,"elapsed":21,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"c169562c-7da2-48e9-bf27-427a3f6803e1"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["733"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["def in_to_1_outnet_to_0(val):\n","    if val == 'In':\n","        return 1\n","    else:\n","        return 0"],"metadata":{"id":"BR8WikQtaQxR","executionInfo":{"status":"ok","timestamp":1680246697643,"user_tz":-540,"elapsed":19,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["df['Result'] = df['Result'].apply(in_to_1_outnet_to_0)"],"metadata":{"id":"4lDJhWnjaojp","executionInfo":{"status":"ok","timestamp":1680246697643,"user_tz":-540,"elapsed":19,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["#df.head(10)"],"metadata":{"id":"8mLEpk-t_h8f","executionInfo":{"status":"ok","timestamp":1680246697644,"user_tz":-540,"elapsed":19,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["#pd.set_option('display.max_columns', 200)\n","#pd.set_option('display.max_rows', 200)"],"metadata":{"id":"2_kLOHHYahNL","executionInfo":{"status":"ok","timestamp":1680246697644,"user_tz":-540,"elapsed":19,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["df['Bounce (y)'] = abs(df['Bounce (y)'] -11.885)   #深さをネットからの距離に\n","df['Hit (y)'] = abs(df['Hit (y)'] -11.885)"],"metadata":{"id":"pxyXhtkOB6bc","executionInfo":{"status":"ok","timestamp":1680246697645,"user_tz":-540,"elapsed":20,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":404},"id":"vGe5RLF6CJMm","executionInfo":{"status":"ok","timestamp":1680246697646,"user_tz":-540,"elapsed":20,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"d867e386-da92-47ec-977e-7ffef83194da"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                Player  Shot             Type    Stroke     Spin  \\\n","0                龍哉 久保     1      first_serve     Serve     Flat   \n","1  Yoshizawa Masatsugu     2           return  Backhand  Topspin   \n","2                龍哉 久保     3   serve_plus_one  Forehand  Topspin   \n","3  Yoshizawa Masatsugu     4  return_plus_one  Backhand  Topspin   \n","4                龍哉 久保     5          in_play  Forehand  Topspin   \n","\n","   Speed (KM/H)  Point  Game  Set  Bounce Depth  ... Hit Zone Hit Side  \\\n","0     98.436745      1     0    0   service_box  ...    deuce      far   \n","1     67.991951      1     0    0  no_mans_land  ...    deuce     near   \n","2     91.792122      1     0    0  no_mans_land  ...       ad      far   \n","3     74.643082      1     0    0  no_mans_land  ...       ad     near   \n","4     88.915466      1     0    0  no_mans_land  ...       ad      far   \n","\n","    Hit (x)    Hit (y)   Hit (z)    Direction Result  Favorited  Start Time  \\\n","0 -0.784507  11.792910  2.704495   down the T      1      False    11:46:11   \n","1  2.866704  12.576038  1.140431    inside in      1      False    11:46:12   \n","2  0.378104  14.079935  1.302506   inside out      1      False    11:46:14   \n","3 -2.544409  12.938649  0.938888  cross court      1      False    11:46:15   \n","4  1.816429  14.363003  1.121761   inside out      1      False    11:46:17   \n","\n","   Video Time  \n","0       10.20  \n","1       11.40  \n","2       13.13  \n","3       14.51  \n","4       16.15  \n","\n","[5 rows x 25 columns]"],"text/html":["\n","  <div id=\"df-cf1d8c71-87a5-41c4-b7b5-5f1b94cbbc23\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Player</th>\n","      <th>Shot</th>\n","      <th>Type</th>\n","      <th>Stroke</th>\n","      <th>Spin</th>\n","      <th>Speed (KM/H)</th>\n","      <th>Point</th>\n","      <th>Game</th>\n","      <th>Set</th>\n","      <th>Bounce Depth</th>\n","      <th>...</th>\n","      <th>Hit Zone</th>\n","      <th>Hit Side</th>\n","      <th>Hit (x)</th>\n","      <th>Hit (y)</th>\n","      <th>Hit (z)</th>\n","      <th>Direction</th>\n","      <th>Result</th>\n","      <th>Favorited</th>\n","      <th>Start Time</th>\n","      <th>Video Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>龍哉 久保</td>\n","      <td>1</td>\n","      <td>first_serve</td>\n","      <td>Serve</td>\n","      <td>Flat</td>\n","      <td>98.436745</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>service_box</td>\n","      <td>...</td>\n","      <td>deuce</td>\n","      <td>far</td>\n","      <td>-0.784507</td>\n","      <td>11.792910</td>\n","      <td>2.704495</td>\n","      <td>down the T</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>11:46:11</td>\n","      <td>10.20</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Yoshizawa Masatsugu</td>\n","      <td>2</td>\n","      <td>return</td>\n","      <td>Backhand</td>\n","      <td>Topspin</td>\n","      <td>67.991951</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>no_mans_land</td>\n","      <td>...</td>\n","      <td>deuce</td>\n","      <td>near</td>\n","      <td>2.866704</td>\n","      <td>12.576038</td>\n","      <td>1.140431</td>\n","      <td>inside in</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>11:46:12</td>\n","      <td>11.40</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>龍哉 久保</td>\n","      <td>3</td>\n","      <td>serve_plus_one</td>\n","      <td>Forehand</td>\n","      <td>Topspin</td>\n","      <td>91.792122</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>no_mans_land</td>\n","      <td>...</td>\n","      <td>ad</td>\n","      <td>far</td>\n","      <td>0.378104</td>\n","      <td>14.079935</td>\n","      <td>1.302506</td>\n","      <td>inside out</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>11:46:14</td>\n","      <td>13.13</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Yoshizawa Masatsugu</td>\n","      <td>4</td>\n","      <td>return_plus_one</td>\n","      <td>Backhand</td>\n","      <td>Topspin</td>\n","      <td>74.643082</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>no_mans_land</td>\n","      <td>...</td>\n","      <td>ad</td>\n","      <td>near</td>\n","      <td>-2.544409</td>\n","      <td>12.938649</td>\n","      <td>0.938888</td>\n","      <td>cross court</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>11:46:15</td>\n","      <td>14.51</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>龍哉 久保</td>\n","      <td>5</td>\n","      <td>in_play</td>\n","      <td>Forehand</td>\n","      <td>Topspin</td>\n","      <td>88.915466</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>no_mans_land</td>\n","      <td>...</td>\n","      <td>ad</td>\n","      <td>far</td>\n","      <td>1.816429</td>\n","      <td>14.363003</td>\n","      <td>1.121761</td>\n","      <td>inside out</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>11:46:17</td>\n","      <td>16.15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 25 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf1d8c71-87a5-41c4-b7b5-5f1b94cbbc23')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cf1d8c71-87a5-41c4-b7b5-5f1b94cbbc23 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cf1d8c71-87a5-41c4-b7b5-5f1b94cbbc23');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["#'Bounce (x)' 列と 'Bounce (y)' 一つずらしたdfを作成\n","df['Bounce (x)'] = df['Bounce (x)'].shift()\n","df['Bounce (y)'] = df['Bounce (y)'].shift()\n","df = df[df[\"Stroke\"] != \"Serve\"]\n","df_kubo = df[df['Player'] =='龍哉 久保']\n","df_yoshizawa = df[df['Player'] == 'Yoshizawa Masatsugu']"],"metadata":{"id":"8N-30xVUE3SV","executionInfo":{"status":"ok","timestamp":1680246697647,"user_tz":-540,"elapsed":20,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["df_yoshizawa = df_yoshizawa.drop(['Player','Point','Game', 'Set', 'Hit Depth', 'Favorited', 'Start Time', 'Video Time','Bounce Depth', 'Bounce Zone', 'Bounce Side', 'Hit Zone', 'Hit Side' ], axis=1)\n","df_kubo = df_kubo.drop(['Player','Point','Game', 'Set', 'Hit Depth', 'Favorited', 'Start Time', 'Video Time','Bounce Depth', 'Bounce Zone', 'Bounce Side', 'Hit Zone', 'Hit Side' ], axis=1)"],"metadata":{"id":"gfifaG4imf0k","executionInfo":{"status":"ok","timestamp":1680246697647,"user_tz":-540,"elapsed":19,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["import warnings\n","# 警告文を非表示\n","warnings.simplefilter('ignore')\n","\n","from sklearn.preprocessing import LabelEncoder\n","\n","# ラベルエンコーディングを行うために、LabelEncoderクラスをインスタンス化（利用するためのおまじないだとお考えください）\n","enc = LabelEncoder() # encはencoderの省略名称である変数です。\n","# fit()によりTypeカラムに対してラベルエンコーディングを行います。\n","label_encoder = enc.fit(df_yoshizawa[[\"Type\"]])\n","\n","# カラムの要素を取得\n","# transform()で数値へ変換\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","#print('Integer classes:',integer_classes)\n","\n","df_yoshizawa[\"Type\"] = label_encoder.transform(df_yoshizawa[[\"Type\"]])\n","\n","#print(df_yoshizawa[[\"Type\"]]) #'first_serve' 'in_play' 'none' 'return' 'return_plus_one' 'second_serve''serve' 'serve_plus_one'] [0 1 2 3 4 5 6 7] に\n","\n","#Stroke\n","\n","label_encoder = enc.fit(df_yoshizawa[[\"Stroke\"]])\n","\n","# カラムの要素を取得\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","\n","df_yoshizawa[\"Stroke\"] = label_encoder.transform(df_yoshizawa[[\"Stroke\"]])\n","\n","#Spin Categorical classes: ['Flat' 'Kick' 'Slice' 'Topspin'] Integer classes: [0 1 2 3]\n","\n","label_encoder = enc.fit(df_yoshizawa[[\"Spin\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_yoshizawa[\"Spin\"] = label_encoder.transform(df_yoshizawa[[\"Spin\"]])\n","\n","#Direction Categorical classes: ['---' 'cross court' 'down the T' 'down the line' 'inside in' 'inside out''out wide']Integer classes: [0 1 2 3 4 5 6]\n","label_encoder = enc.fit(df_yoshizawa[[\"Direction\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_yoshizawa[\"Direction\"] = label_encoder.transform(df_yoshizawa[[\"Direction\"]])"],"metadata":{"id":"9nlkHbewoC4H","executionInfo":{"status":"ok","timestamp":1680246698848,"user_tz":-540,"elapsed":1220,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["import warnings\n","# 警告文を非表示\n","warnings.simplefilter('ignore')\n","\n","from sklearn.preprocessing import LabelEncoder\n","\n","# ラベルエンコーディングを行うために、LabelEncoderクラスをインスタンス化（利用するためのおまじないだとお考えください）\n","enc = LabelEncoder() # encはencoderの省略名称である変数です。\n","# fit()によりTypeカラムに対してラベルエンコーディングを行います。\n","label_encoder = enc.fit(df_kubo[[\"Type\"]])\n","\n","# カラムの要素を取得\n","# transform()で数値へ変換\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","#print('Integer classes:',integer_classes)\n","\n","df_kubo[\"Type\"] = label_encoder.transform(df_kubo[[\"Type\"]])\n","\n","#print(df_kubo[[\"Type\"]]) #'first_serve' 'in_play' 'none' 'return' 'return_plus_one' 'second_serve''serve' 'serve_plus_one'] [0 1 2 3 4 5 6 7] に\n","\n","#Stroke\n","\n","label_encoder = enc.fit(df_kubo[[\"Stroke\"]])\n","\n","# カラムの要素を取得\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","\n","df_kubo[\"Stroke\"] = label_encoder.transform(df_kubo[[\"Stroke\"]])\n","\n","#Spin Categorical classes: ['Flat' 'Kick' 'Slice' 'Topspin'] Integer classes: [0 1 2 3]\n","\n","label_encoder = enc.fit(df_kubo[[\"Spin\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_kubo[\"Spin\"] = label_encoder.transform(df_kubo[[\"Spin\"]])\n","\n","#Direction Categorical classes: ['---' 'cross court' 'down the T' 'down the line' 'inside in' 'inside out''out wide']Integer classes: [0 1 2 3 4 5 6]\n","label_encoder = enc.fit(df_kubo[[\"Direction\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_kubo[\"Direction\"] = label_encoder.transform(df_kubo[[\"Direction\"]])"],"metadata":{"id":"zIWvOJjUegOm","executionInfo":{"status":"ok","timestamp":1680246698849,"user_tz":-540,"elapsed":70,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["# 必要なライブラリをインポートする\n","from sklearn.model_selection import train_test_split\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import accuracy_score\n","import pandas as pd\n","\n","data = df_yoshizawa\n","\n","# 特徴量と目的変数を分ける\n","X = data.drop('Result', axis=1)\n","y = data['Result']\n","\n","# 訓練用データとテスト用データに分割する\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\n","\n","# ランダムフォレスト分類器を作成する\n","rfc = RandomForestClassifier()\n","\n","# モデルを訓練する\n","rfc.fit(X_train, y_train)\n","\n","\n","# 各特徴量の重要度を取得する\n","importances = rfc.feature_importances_\n","\n","# 特徴量の重要度を降順にソートする\n","indices = np.argsort(importances)[::-1]\n","\n","# 特徴量の名前を取得する\n","feature_names = X_train.columns.values\n","\n","# 特徴量の寄与率を出力する\n","for i in range(len(feature_names)):\n","    print(f\"{feature_names[indices[i]]}: {importances[indices[i]]}\")\n","\n","\n","# テスト用データを用いてモデルの精度を評価する\n","y_pred = rfc.predict(X_test)\n","accuracy = accuracy_score(y_test, y_pred)\n","\n","# モデルの精度を出力する\n","print(\"Accuracy:\", accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3lvuNwHPlRj5","executionInfo":{"status":"ok","timestamp":1680246698849,"user_tz":-540,"elapsed":68,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"a07b9c23-4b04-42e8-d50d-276f6f8018f5"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Speed (KM/H): 0.19407101402580143\n","Hit (z): 0.13137025281411743\n","Bounce (y): 0.1302988568089612\n","Hit (y): 0.12220939898564141\n","Hit (x): 0.11417437724271555\n","Bounce (x): 0.11000196174394264\n","Shot: 0.05806728619838606\n","Spin: 0.04432680691163424\n","Type: 0.03514594613915802\n","Direction: 0.034832891554718776\n","Stroke: 0.025501207574923218\n","Accuracy: 0.8392857142857143\n"]}]},{"cell_type":"code","source":["# テスト用データのクラスの確率を予測する\n","y_proba = rfc.predict_proba(X)\n","\n","# テスト用データの各サンプルに対する予測確率を出力する\n","for i in range(len(y)):\n","    print(f\"Sample {i}: Class 0: {y_proba[i][0]}, Class 1: {y_proba[i][1]}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BX5jDVwBZv1m","executionInfo":{"status":"ok","timestamp":1680246698850,"user_tz":-540,"elapsed":66,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"f56d3e8e-e41b-4290-f49c-3c2dd502749a"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Sample 0: Class 0: 0.03, Class 1: 0.97\n","Sample 1: Class 0: 0.03, Class 1: 0.97\n","Sample 2: Class 0: 0.1, Class 1: 0.9\n","Sample 3: Class 0: 0.15, Class 1: 0.85\n","Sample 4: Class 0: 0.05, Class 1: 0.95\n","Sample 5: Class 0: 0.09, Class 1: 0.91\n","Sample 6: Class 0: 0.71, Class 1: 0.29\n","Sample 7: Class 0: 0.73, Class 1: 0.27\n","Sample 8: Class 0: 0.16, Class 1: 0.84\n","Sample 9: Class 0: 0.01, Class 1: 0.99\n","Sample 10: Class 0: 0.05, Class 1: 0.95\n","Sample 11: Class 0: 0.68, Class 1: 0.32\n","Sample 12: Class 0: 0.14, Class 1: 0.86\n","Sample 13: Class 0: 0.02, Class 1: 0.98\n","Sample 14: Class 0: 0.05, Class 1: 0.95\n","Sample 15: Class 0: 0.73, Class 1: 0.27\n","Sample 16: Class 0: 0.05, Class 1: 0.95\n","Sample 17: Class 0: 0.17, Class 1: 0.83\n","Sample 18: Class 0: 0.05, Class 1: 0.95\n","Sample 19: Class 0: 0.06, Class 1: 0.94\n","Sample 20: Class 0: 0.62, Class 1: 0.38\n","Sample 21: Class 0: 0.67, Class 1: 0.33\n","Sample 22: Class 0: 0.02, Class 1: 0.98\n","Sample 23: Class 0: 0.05, Class 1: 0.95\n","Sample 24: Class 0: 0.1, Class 1: 0.9\n","Sample 25: Class 0: 0.02, Class 1: 0.98\n","Sample 26: Class 0: 0.06, Class 1: 0.94\n","Sample 27: Class 0: 0.01, Class 1: 0.99\n","Sample 28: Class 0: 0.0, Class 1: 1.0\n","Sample 29: Class 0: 0.08, Class 1: 0.92\n","Sample 30: Class 0: 0.05, Class 1: 0.95\n","Sample 31: Class 0: 0.06, Class 1: 0.94\n","Sample 32: Class 0: 0.08, Class 1: 0.92\n","Sample 33: Class 0: 0.05, Class 1: 0.95\n","Sample 34: Class 0: 0.2, Class 1: 0.8\n","Sample 35: Class 0: 0.06, Class 1: 0.94\n","Sample 36: Class 0: 0.0, Class 1: 1.0\n","Sample 37: Class 0: 0.03, Class 1: 0.97\n","Sample 38: Class 0: 0.14, Class 1: 0.86\n","Sample 39: Class 0: 0.7, Class 1: 0.3\n","Sample 40: Class 0: 0.76, Class 1: 0.24\n","Sample 41: Class 0: 0.76, Class 1: 0.24\n","Sample 42: Class 0: 0.04, Class 1: 0.96\n","Sample 43: Class 0: 0.28, Class 1: 0.72\n","Sample 44: Class 0: 0.72, Class 1: 0.28\n","Sample 45: Class 0: 0.07, Class 1: 0.93\n","Sample 46: Class 0: 0.03, Class 1: 0.97\n","Sample 47: Class 0: 0.07, Class 1: 0.93\n","Sample 48: Class 0: 0.77, Class 1: 0.23\n","Sample 49: Class 0: 0.87, Class 1: 0.13\n","Sample 50: Class 0: 0.28, Class 1: 0.72\n","Sample 51: Class 0: 0.65, Class 1: 0.35\n","Sample 52: Class 0: 0.07, Class 1: 0.93\n","Sample 53: Class 0: 0.8, Class 1: 0.2\n","Sample 54: Class 0: 0.09, Class 1: 0.91\n","Sample 55: Class 0: 0.02, Class 1: 0.98\n","Sample 56: Class 0: 0.68, Class 1: 0.32\n","Sample 57: Class 0: 0.16, Class 1: 0.84\n","Sample 58: Class 0: 0.09, Class 1: 0.91\n","Sample 59: Class 0: 0.0, Class 1: 1.0\n","Sample 60: Class 0: 0.26, Class 1: 0.74\n","Sample 61: Class 0: 0.74, Class 1: 0.26\n","Sample 62: Class 0: 0.2, Class 1: 0.8\n","Sample 63: Class 0: 0.19, Class 1: 0.81\n","Sample 64: Class 0: 0.79, Class 1: 0.21\n","Sample 65: Class 0: 0.11, Class 1: 0.89\n","Sample 66: Class 0: 0.06, Class 1: 0.94\n","Sample 67: Class 0: 0.65, Class 1: 0.35\n","Sample 68: Class 0: 0.01, Class 1: 0.99\n","Sample 69: Class 0: 0.02, Class 1: 0.98\n","Sample 70: Class 0: 0.08, Class 1: 0.92\n","Sample 71: Class 0: 0.01, Class 1: 0.99\n","Sample 72: Class 0: 0.14, Class 1: 0.86\n","Sample 73: Class 0: 0.73, Class 1: 0.27\n","Sample 74: Class 0: 0.16, Class 1: 0.84\n","Sample 75: Class 0: 0.01, Class 1: 0.99\n","Sample 76: Class 0: 0.09, Class 1: 0.91\n","Sample 77: Class 0: 0.05, Class 1: 0.95\n","Sample 78: Class 0: 0.01, Class 1: 0.99\n","Sample 79: Class 0: 0.09, Class 1: 0.91\n","Sample 80: Class 0: 0.66, Class 1: 0.34\n","Sample 81: Class 0: 0.01, Class 1: 0.99\n","Sample 82: Class 0: 0.07, Class 1: 0.93\n","Sample 83: Class 0: 0.04, Class 1: 0.96\n","Sample 84: Class 0: 0.01, Class 1: 0.99\n","Sample 85: Class 0: 0.09, Class 1: 0.91\n","Sample 86: Class 0: 0.61, Class 1: 0.39\n","Sample 87: Class 0: 0.41, Class 1: 0.59\n","Sample 88: Class 0: 0.29, Class 1: 0.71\n","Sample 89: Class 0: 0.06, Class 1: 0.94\n","Sample 90: Class 0: 0.59, Class 1: 0.41\n","Sample 91: Class 0: 0.07, Class 1: 0.93\n","Sample 92: Class 0: 0.43, Class 1: 0.57\n","Sample 93: Class 0: 0.0, Class 1: 1.0\n","Sample 94: Class 0: 0.65, Class 1: 0.35\n","Sample 95: Class 0: 0.1, Class 1: 0.9\n","Sample 96: Class 0: 0.19, Class 1: 0.81\n","Sample 97: Class 0: 0.33, Class 1: 0.67\n","Sample 98: Class 0: 0.03, Class 1: 0.97\n","Sample 99: Class 0: 0.1, Class 1: 0.9\n","Sample 100: Class 0: 0.19, Class 1: 0.81\n","Sample 101: Class 0: 0.05, Class 1: 0.95\n","Sample 102: Class 0: 0.03, Class 1: 0.97\n","Sample 103: Class 0: 0.09, Class 1: 0.91\n","Sample 104: Class 0: 0.01, Class 1: 0.99\n","Sample 105: Class 0: 0.04, Class 1: 0.96\n","Sample 106: Class 0: 0.08, Class 1: 0.92\n","Sample 107: Class 0: 0.15, Class 1: 0.85\n","Sample 108: Class 0: 0.12, Class 1: 0.88\n","Sample 109: Class 0: 0.08, Class 1: 0.92\n","Sample 110: Class 0: 0.91, Class 1: 0.09\n","Sample 111: Class 0: 0.08, Class 1: 0.92\n","Sample 112: Class 0: 0.1, Class 1: 0.9\n","Sample 113: Class 0: 0.34, Class 1: 0.66\n","Sample 114: Class 0: 0.02, Class 1: 0.98\n","Sample 115: Class 0: 0.1, Class 1: 0.9\n","Sample 116: Class 0: 0.05, Class 1: 0.95\n","Sample 117: Class 0: 0.14, Class 1: 0.86\n","Sample 118: Class 0: 0.11, Class 1: 0.89\n","Sample 119: Class 0: 0.02, Class 1: 0.98\n","Sample 120: Class 0: 0.04, Class 1: 0.96\n","Sample 121: Class 0: 0.21, Class 1: 0.79\n","Sample 122: Class 0: 0.0, Class 1: 1.0\n","Sample 123: Class 0: 0.02, Class 1: 0.98\n","Sample 124: Class 0: 0.01, Class 1: 0.99\n","Sample 125: Class 0: 0.06, Class 1: 0.94\n","Sample 126: Class 0: 0.07, Class 1: 0.93\n","Sample 127: Class 0: 0.05, Class 1: 0.95\n","Sample 128: Class 0: 0.1, Class 1: 0.9\n","Sample 129: Class 0: 0.02, Class 1: 0.98\n","Sample 130: Class 0: 0.19, Class 1: 0.81\n","Sample 131: Class 0: 0.02, Class 1: 0.98\n","Sample 132: Class 0: 0.08, Class 1: 0.92\n","Sample 133: Class 0: 0.12, Class 1: 0.88\n","Sample 134: Class 0: 0.04, Class 1: 0.96\n","Sample 135: Class 0: 0.09, Class 1: 0.91\n","Sample 136: Class 0: 0.05, Class 1: 0.95\n","Sample 137: Class 0: 0.12, Class 1: 0.88\n","Sample 138: Class 0: 0.03, Class 1: 0.97\n","Sample 139: Class 0: 0.66, Class 1: 0.34\n","Sample 140: Class 0: 0.08, Class 1: 0.92\n","Sample 141: Class 0: 0.36, Class 1: 0.64\n","Sample 142: Class 0: 0.24, Class 1: 0.76\n","Sample 143: Class 0: 0.06, Class 1: 0.94\n","Sample 144: Class 0: 0.03, Class 1: 0.97\n","Sample 145: Class 0: 0.04, Class 1: 0.96\n","Sample 146: Class 0: 0.01, Class 1: 0.99\n","Sample 147: Class 0: 0.08, Class 1: 0.92\n","Sample 148: Class 0: 0.04, Class 1: 0.96\n","Sample 149: Class 0: 0.07, Class 1: 0.93\n","Sample 150: Class 0: 0.14, Class 1: 0.86\n","Sample 151: Class 0: 0.04, Class 1: 0.96\n","Sample 152: Class 0: 0.06, Class 1: 0.94\n","Sample 153: Class 0: 0.76, Class 1: 0.24\n","Sample 154: Class 0: 0.74, Class 1: 0.26\n","Sample 155: Class 0: 0.0, Class 1: 1.0\n","Sample 156: Class 0: 0.05, Class 1: 0.95\n","Sample 157: Class 0: 0.02, Class 1: 0.98\n","Sample 158: Class 0: 0.05, Class 1: 0.95\n","Sample 159: Class 0: 0.08, Class 1: 0.92\n","Sample 160: Class 0: 0.06, Class 1: 0.94\n","Sample 161: Class 0: 0.1, Class 1: 0.9\n","Sample 162: Class 0: 0.13, Class 1: 0.87\n","Sample 163: Class 0: 0.03, Class 1: 0.97\n","Sample 164: Class 0: 0.11, Class 1: 0.89\n","Sample 165: Class 0: 0.68, Class 1: 0.32\n","Sample 166: Class 0: 0.27, Class 1: 0.73\n","Sample 167: Class 0: 0.05, Class 1: 0.95\n","Sample 168: Class 0: 0.08, Class 1: 0.92\n","Sample 169: Class 0: 0.22, Class 1: 0.78\n","Sample 170: Class 0: 0.16, Class 1: 0.84\n","Sample 171: Class 0: 0.02, Class 1: 0.98\n","Sample 172: Class 0: 0.12, Class 1: 0.88\n","Sample 173: Class 0: 0.35, Class 1: 0.65\n","Sample 174: Class 0: 0.08, Class 1: 0.92\n","Sample 175: Class 0: 0.06, Class 1: 0.94\n","Sample 176: Class 0: 0.14, Class 1: 0.86\n","Sample 177: Class 0: 0.09, Class 1: 0.91\n","Sample 178: Class 0: 0.16, Class 1: 0.84\n","Sample 179: Class 0: 0.11, Class 1: 0.89\n","Sample 180: Class 0: 0.74, Class 1: 0.26\n","Sample 181: Class 0: 0.04, Class 1: 0.96\n","Sample 182: Class 0: 0.11, Class 1: 0.89\n","Sample 183: Class 0: 0.2, Class 1: 0.8\n","Sample 184: Class 0: 0.02, Class 1: 0.98\n","Sample 185: Class 0: 0.0, Class 1: 1.0\n","Sample 186: Class 0: 0.11, Class 1: 0.89\n","Sample 187: Class 0: 0.1, Class 1: 0.9\n","Sample 188: Class 0: 0.69, Class 1: 0.31\n","Sample 189: Class 0: 0.05, Class 1: 0.95\n","Sample 190: Class 0: 0.03, Class 1: 0.97\n","Sample 191: Class 0: 0.13, Class 1: 0.87\n","Sample 192: Class 0: 0.17, Class 1: 0.83\n","Sample 193: Class 0: 0.01, Class 1: 0.99\n","Sample 194: Class 0: 0.11, Class 1: 0.89\n","Sample 195: Class 0: 0.11, Class 1: 0.89\n","Sample 196: Class 0: 0.05, Class 1: 0.95\n","Sample 197: Class 0: 0.15, Class 1: 0.85\n","Sample 198: Class 0: 0.05, Class 1: 0.95\n","Sample 199: Class 0: 0.76, Class 1: 0.24\n","Sample 200: Class 0: 0.11, Class 1: 0.89\n","Sample 201: Class 0: 0.06, Class 1: 0.94\n","Sample 202: Class 0: 0.06, Class 1: 0.94\n","Sample 203: Class 0: 0.22, Class 1: 0.78\n","Sample 204: Class 0: 0.91, Class 1: 0.09\n","Sample 205: Class 0: 0.05, Class 1: 0.95\n","Sample 206: Class 0: 0.1, Class 1: 0.9\n","Sample 207: Class 0: 0.38, Class 1: 0.62\n","Sample 208: Class 0: 0.04, Class 1: 0.96\n","Sample 209: Class 0: 0.71, Class 1: 0.29\n","Sample 210: Class 0: 0.0, Class 1: 1.0\n","Sample 211: Class 0: 0.04, Class 1: 0.96\n","Sample 212: Class 0: 0.74, Class 1: 0.26\n","Sample 213: Class 0: 0.07, Class 1: 0.93\n","Sample 214: Class 0: 0.06, Class 1: 0.94\n","Sample 215: Class 0: 0.04, Class 1: 0.96\n","Sample 216: Class 0: 0.07, Class 1: 0.93\n","Sample 217: Class 0: 0.04, Class 1: 0.96\n","Sample 218: Class 0: 0.02, Class 1: 0.98\n","Sample 219: Class 0: 0.05, Class 1: 0.95\n","Sample 220: Class 0: 0.03, Class 1: 0.97\n","Sample 221: Class 0: 0.15, Class 1: 0.85\n","Sample 222: Class 0: 0.68, Class 1: 0.32\n","Sample 223: Class 0: 0.02, Class 1: 0.98\n","Sample 224: Class 0: 0.02, Class 1: 0.98\n","Sample 225: Class 0: 0.04, Class 1: 0.96\n","Sample 226: Class 0: 0.04, Class 1: 0.96\n","Sample 227: Class 0: 0.01, Class 1: 0.99\n","Sample 228: Class 0: 0.2, Class 1: 0.8\n","Sample 229: Class 0: 0.04, Class 1: 0.96\n","Sample 230: Class 0: 0.05, Class 1: 0.95\n","Sample 231: Class 0: 0.02, Class 1: 0.98\n","Sample 232: Class 0: 0.09, Class 1: 0.91\n","Sample 233: Class 0: 0.03, Class 1: 0.97\n","Sample 234: Class 0: 0.08, Class 1: 0.92\n","Sample 235: Class 0: 0.09, Class 1: 0.91\n","Sample 236: Class 0: 0.07, Class 1: 0.93\n","Sample 237: Class 0: 0.11, Class 1: 0.89\n","Sample 238: Class 0: 0.04, Class 1: 0.96\n","Sample 239: Class 0: 0.09, Class 1: 0.91\n","Sample 240: Class 0: 0.07, Class 1: 0.93\n","Sample 241: Class 0: 0.08, Class 1: 0.92\n","Sample 242: Class 0: 0.79, Class 1: 0.21\n","Sample 243: Class 0: 0.13, Class 1: 0.87\n","Sample 244: Class 0: 0.05, Class 1: 0.95\n","Sample 245: Class 0: 0.11, Class 1: 0.89\n","Sample 246: Class 0: 0.06, Class 1: 0.94\n","Sample 247: Class 0: 0.71, Class 1: 0.29\n","Sample 248: Class 0: 0.01, Class 1: 0.99\n","Sample 249: Class 0: 0.74, Class 1: 0.26\n","Sample 250: Class 0: 0.32, Class 1: 0.68\n","Sample 251: Class 0: 0.06, Class 1: 0.94\n","Sample 252: Class 0: 0.04, Class 1: 0.96\n","Sample 253: Class 0: 0.03, Class 1: 0.97\n","Sample 254: Class 0: 0.13, Class 1: 0.87\n","Sample 255: Class 0: 0.66, Class 1: 0.34\n","Sample 256: Class 0: 0.04, Class 1: 0.96\n","Sample 257: Class 0: 0.8, Class 1: 0.2\n","Sample 258: Class 0: 0.17, Class 1: 0.83\n","Sample 259: Class 0: 0.08, Class 1: 0.92\n","Sample 260: Class 0: 0.06, Class 1: 0.94\n","Sample 261: Class 0: 0.84, Class 1: 0.16\n","Sample 262: Class 0: 0.03, Class 1: 0.97\n","Sample 263: Class 0: 0.6, Class 1: 0.4\n","Sample 264: Class 0: 0.04, Class 1: 0.96\n","Sample 265: Class 0: 0.16, Class 1: 0.84\n","Sample 266: Class 0: 0.04, Class 1: 0.96\n","Sample 267: Class 0: 0.05, Class 1: 0.95\n","Sample 268: Class 0: 0.11, Class 1: 0.89\n","Sample 269: Class 0: 0.07, Class 1: 0.93\n","Sample 270: Class 0: 0.08, Class 1: 0.92\n","Sample 271: Class 0: 0.41, Class 1: 0.59\n","Sample 272: Class 0: 0.06, Class 1: 0.94\n","Sample 273: Class 0: 0.11, Class 1: 0.89\n","Sample 274: Class 0: 0.06, Class 1: 0.94\n","Sample 275: Class 0: 0.1, Class 1: 0.9\n","Sample 276: Class 0: 0.02, Class 1: 0.98\n","Sample 277: Class 0: 0.02, Class 1: 0.98\n"]}]},{"cell_type":"code","source":["df_yoshizawa_classifier_confidence = df_yoshizawa.copy()\n","new_col_name = \"Classifier Confidence\"\n","# テスト用データのクラスの確率を予測する\n","y_proba = rfc.predict_proba(X)\n","# 新しい列をデータフレームに追加する\n","df_yoshizawa_classifier_confidence[new_col_name] = y_proba[:, 1]\n","df_yoshizawa_classifier_confidence.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":288},"id":"2zWhl0fscrsN","executionInfo":{"status":"ok","timestamp":1680246698850,"user_tz":-540,"elapsed":61,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"2a80eab7-7941-4073-edd0-6ada598eaf74"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Shot  Type  Stroke  Spin  Speed (KM/H)  Bounce (x)  Bounce (y)   Hit (x)  \\\n","1      2     2       1     2     67.991951    1.540818    4.327014  2.866704   \n","3      4     3       1     2     74.643082   -1.712300    7.789904 -2.544409   \n","5      6     0       1     2     72.283096   -0.719358    7.536090 -1.248331   \n","7      9     0       1     2     78.857880    1.486005    6.165491  1.727386   \n","11     2     2       3     2     69.152916   -1.410573    4.388790 -1.772645   \n","\n","      Hit (y)   Hit (z)  Direction  Result  Classifier Confidence  \n","1   12.576038  1.140431          3       1                   0.97  \n","3   12.938649  0.938888          1       1                   0.97  \n","5   13.851430  1.185831          1       1                   0.90  \n","7    8.694775  1.127259          3       1                   0.85  \n","11  10.835678  1.343061          4       1                   0.95  "],"text/html":["\n","  <div id=\"df-7441d4e0-f1bc-4278-ab59-c1a341c1d782\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Shot</th>\n","      <th>Type</th>\n","      <th>Stroke</th>\n","      <th>Spin</th>\n","      <th>Speed (KM/H)</th>\n","      <th>Bounce (x)</th>\n","      <th>Bounce (y)</th>\n","      <th>Hit (x)</th>\n","      <th>Hit (y)</th>\n","      <th>Hit (z)</th>\n","      <th>Direction</th>\n","      <th>Result</th>\n","      <th>Classifier Confidence</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>67.991951</td>\n","      <td>1.540818</td>\n","      <td>4.327014</td>\n","      <td>2.866704</td>\n","      <td>12.576038</td>\n","      <td>1.140431</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.97</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>74.643082</td>\n","      <td>-1.712300</td>\n","      <td>7.789904</td>\n","      <td>-2.544409</td>\n","      <td>12.938649</td>\n","      <td>0.938888</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.97</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>72.283096</td>\n","      <td>-0.719358</td>\n","      <td>7.536090</td>\n","      <td>-1.248331</td>\n","      <td>13.851430</td>\n","      <td>1.185831</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.90</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>78.857880</td>\n","      <td>1.486005</td>\n","      <td>6.165491</td>\n","      <td>1.727386</td>\n","      <td>8.694775</td>\n","      <td>1.127259</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.85</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>69.152916</td>\n","      <td>-1.410573</td>\n","      <td>4.388790</td>\n","      <td>-1.772645</td>\n","      <td>10.835678</td>\n","      <td>1.343061</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0.95</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7441d4e0-f1bc-4278-ab59-c1a341c1d782')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7441d4e0-f1bc-4278-ab59-c1a341c1d782 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7441d4e0-f1bc-4278-ab59-c1a341c1d782');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# グラフのサイズを設定する\n","plt.figure(figsize=(8, 4))\n","\n","# 棒グラフを作成する\n","plt.bar(range(len(importances)), importances, align='center')\n","plt.xticks(range(len(feature_names)), feature_names, rotation=90)\n","\n","# グラフのラベルを設定する\n","plt.xlabel('Features')\n","plt.ylabel('Importance')\n","\n","# グラフを表示する\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":469},"id":"UUNMB5_xxTyH","executionInfo":{"status":"ok","timestamp":1680246698857,"user_tz":-540,"elapsed":66,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"94688aec-1c2b-451e-9c50-a7bbd9b729a5"},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# テストデータに対する予測結果を取得する\n","y_pred = rfc.predict(X_test)\n","\n","# 実際の結果と予測結果を比較する\n","correct = y_pred == y_test\n","\n","# 正解率を計算する\n","accuracy = correct.sum() / len(correct)\n","\n","# 正解率をグラフ化する\n","plt.bar(['Correct', 'Incorrect'], [accuracy, 1-accuracy])\n","plt.title('Accuracy')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"nl1nno6glh7Z","executionInfo":{"status":"ok","timestamp":1680246698861,"user_tz":-540,"elapsed":68,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"4532cfed-e0b1-45be-da1c-3e12a9761b26"},"execution_count":19,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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eyy5ubl6/PHHtWTJEr333nvavn271q5dqzvvvFOSNH36dF1wwQWaM2eONm/erI8++kj//d//rdLSUklfXbl/6NAheb1eNTQ06PDhwz36eAD9ybGeb7feequ8Xq+WLl2qnTt36rHHHtOKFSt02223BX1b48aN0zXXXKPMzEytW7dOH330kcrLy5Wfn68NGzZIknJycvTGG2/ohhtu0DvvvKMPPvhAK1euVENDg6Svnv+vv/669uzZo4aGhsAZHny3ECMI2pgxY1RZWakLL7xQt956qyZOnKiLLrpIXq9XK1eulMPh0PPPP69hw4bpggsuUFpamsaMGaOSkpJu3V56erpeeOEFbdq0SVOmTNG5556rf/u3f9Po0aMDc5599llNmTJFc+fOVXx8vH7zm98E/t/Q1KlT9ctf/lIZGRkaMWKEfve73/XI4wD0V0d7vk2ePFn/9V//pbVr12rixInKzc3V3XffrXnz5nXrtlavXq3MzEzdeuutGj9+vGbPnq033nhD3/ve9yR9FSybNm3S22+/reTkZKWmpur555/XgAFfXYVw2223KTQ0VPHx8RoxYoSqqqp65DFAz3KYrlyRCAAAcIJwZgQAAFhFjAAAAKuIEQAAYBUxAgAArCJGAACAVcQIAACwihgBAABWESMAAMAqYgQAAFhFjAAAAKuIEQAAYNX/A/Fn+hvtFL9tAAAAAElFTkSuQmCC\n"},"metadata":{}}]},{"cell_type":"code","source":["# テストデータと予測結果を取得する\n","y_pred = rfc.predict(X_test)\n","df_test = X_test.copy()\n","df_test['Result'] = y_test\n","df_test['Predicted Result'] = y_pred\n"],"metadata":{"id":"_CUDxyuWLJ9J","executionInfo":{"status":"ok","timestamp":1680246698861,"user_tz":-540,"elapsed":66,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["print(len(df_test))\n","import matplotlib.pyplot as plt\n","\n","# Resultが1または2の行のインデックスを取得する\n","result_indices = df_test[(df_test['Result'] == 0)].index\n","print(len(result_indices))\n","\n","# Bounce(x)とBounce(y)の値を取得する\n","bounce_x = df_test.loc[result_indices, 'Bounce (x)']\n","bounce_y = df_test.loc[result_indices, 'Bounce (y)']\n","\n","# 散布図を作成する\n","plt.scatter(bounce_x, bounce_y)\n","\n","# 軸ラベルを設定する\n","plt.xlabel('Bounce (x)')\n","plt.ylabel('Bounce (y)')\n","\n","# グラフを表示する\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":485},"id":"XSG1ry6D0yBX","executionInfo":{"status":"ok","timestamp":1680246699424,"user_tz":-540,"elapsed":629,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"039fc857-07c8-4b4d-8e4f-4a25dbf9187c"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["56\n","8\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.decomposition import PCA\n","import matplotlib.pyplot as plt\n","\n","# テストデータを用いて予測を行う\n","y_pred = rfc.predict(X_test)\n","\n","# PCAで特徴量を2次元に変換する\n","pca = PCA(n_components=2)\n","X_test_pca = pca.fit_transform(X_test)\n","\n","# 特徴の寄与率を出力する\n","print(\"Explained variance ratio:\", pca.explained_variance_ratio_)\n","\n","# 予測結果をプロットする\n","plt.scatter(X_test_pca[y_pred==0, 0], X_test_pca[y_pred==0, 1], c='red', label='In')\n","plt.scatter(X_test_pca[y_pred==1, 0], X_test_pca[y_pred==1, 1], c='blue', label='Net')\n","plt.scatter(X_test_pca[y_pred==2, 0], X_test_pca[y_pred==2, 1], c='green', label='Out')\n","plt.xlabel('PC1')\n","plt.ylabel('PC2')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"GOYcWFIvtFX0","executionInfo":{"status":"ok","timestamp":1680246699428,"user_tz":-540,"elapsed":51,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"eaddd68d-f38f-4431-e5fd-842df1a91fd4"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Explained variance ratio: [0.827549   0.06274436]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#久保\n","data = df_kubo\n","# 特徴量と目的変数を分ける\n","X = data.drop('Result', axis=1)\n","y = data['Result']\n","\n","# 訓練用データとテスト用データに分割する\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\n","\n","# ランダムフォレスト分類器を作成する\n","rfc = RandomForestClassifier()\n","\n","# モデルを訓練する\n","rfc.fit(X_train, y_train)\n","\n","\n","# 各特徴量の重要度を取得する\n","importances = rfc.feature_importances_\n","\n","# 特徴量の重要度を降順にソートする\n","indices = np.argsort(importances)[::-1]\n","\n","# 特徴量の名前を取得する\n","feature_names = X_train.columns.values\n","\n","# 特徴量の寄与率を出力する\n","for i in range(len(feature_names)):\n","    print(f\"{feature_names[indices[i]]}: {importances[indices[i]]}\")\n","\n","\n","# テスト用データを用いてモデルの精度を評価する\n","y_pred = rfc.predict(X_test)\n","accuracy = accuracy_score(y_test, y_pred)\n","\n","# モデルの精度を出力する\n","print(\"Accuracy:\", accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aQjYlhmwb_o8","executionInfo":{"status":"ok","timestamp":1680246699442,"user_tz":-540,"elapsed":60,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"c6fdc1bd-ff3b-47fc-c3e6-502f5027efbd"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Bounce (x): 0.1552894091222084\n","Bounce (y): 0.1342971991545813\n","Speed (KM/H): 0.13080460226167717\n","Hit (y): 0.12365771174628377\n","Hit (x): 0.12077165091165325\n","Hit (z): 0.11634649027752691\n","Shot: 0.0840881108651727\n","Stroke: 0.039788600778532586\n","Type: 0.03686842807950211\n","Direction: 0.03229804709635347\n","Spin: 0.0257897497065084\n","Accuracy: 0.7142857142857143\n"]}]},{"cell_type":"code","source":["# テスト用データのクラスの確率を予測する\n","y_proba = rfc.predict_proba(X)\n","\n","# テスト用データの各サンプルに対する予測確率を出力する\n","for i in range(len(y)):\n","    print(f\"Sample {i}: Class 0: {y_proba[i][0]}, Class 1: {y_proba[i][1]}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xws2sQWdfPuG","executionInfo":{"status":"ok","timestamp":1680246699932,"user_tz":-540,"elapsed":546,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"6eb54f2c-ce3e-4dbf-99e0-32504df6e9b3"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Sample 0: Class 0: 0.0, Class 1: 1.0\n","Sample 1: Class 0: 0.05, Class 1: 0.95\n","Sample 2: Class 0: 0.1, Class 1: 0.9\n","Sample 3: Class 0: 0.67, Class 1: 0.33\n","Sample 4: Class 0: 0.23, Class 1: 0.77\n","Sample 5: Class 0: 0.04, Class 1: 0.96\n","Sample 6: Class 0: 0.08, Class 1: 0.92\n","Sample 7: Class 0: 0.08, Class 1: 0.92\n","Sample 8: Class 0: 0.11, Class 1: 0.89\n","Sample 9: Class 0: 0.01, Class 1: 0.99\n","Sample 10: Class 0: 0.05, Class 1: 0.95\n","Sample 11: Class 0: 0.04, Class 1: 0.96\n","Sample 12: Class 0: 0.7, Class 1: 0.3\n","Sample 13: Class 0: 0.04, Class 1: 0.96\n","Sample 14: Class 0: 0.22, Class 1: 0.78\n","Sample 15: Class 0: 0.04, Class 1: 0.96\n","Sample 16: Class 0: 0.04, Class 1: 0.96\n","Sample 17: Class 0: 0.08, Class 1: 0.92\n","Sample 18: Class 0: 0.55, Class 1: 0.45\n","Sample 19: Class 0: 0.84, Class 1: 0.16\n","Sample 20: Class 0: 0.0, Class 1: 1.0\n","Sample 21: Class 0: 0.23, Class 1: 0.77\n","Sample 22: Class 0: 0.04, Class 1: 0.96\n","Sample 23: Class 0: 0.08, Class 1: 0.92\n","Sample 24: Class 0: 0.03, Class 1: 0.97\n","Sample 25: Class 0: 0.03, Class 1: 0.97\n","Sample 26: Class 0: 0.1, Class 1: 0.9\n","Sample 27: Class 0: 0.04, Class 1: 0.96\n","Sample 28: Class 0: 0.03, Class 1: 0.97\n","Sample 29: Class 0: 0.03, Class 1: 0.97\n","Sample 30: Class 0: 0.22, Class 1: 0.78\n","Sample 31: Class 0: 0.13, Class 1: 0.87\n","Sample 32: Class 0: 0.33, Class 1: 0.67\n","Sample 33: Class 0: 0.05, Class 1: 0.95\n","Sample 34: Class 0: 0.58, Class 1: 0.42\n","Sample 35: Class 0: 0.0, Class 1: 1.0\n","Sample 36: Class 0: 0.2, Class 1: 0.8\n","Sample 37: Class 0: 0.08, Class 1: 0.92\n","Sample 38: Class 0: 0.21, Class 1: 0.79\n","Sample 39: Class 0: 0.13, Class 1: 0.87\n","Sample 40: Class 0: 0.02, Class 1: 0.98\n","Sample 41: Class 0: 0.05, Class 1: 0.95\n","Sample 42: Class 0: 0.76, Class 1: 0.24\n","Sample 43: Class 0: 0.04, Class 1: 0.96\n","Sample 44: Class 0: 0.01, Class 1: 0.99\n","Sample 45: Class 0: 0.64, Class 1: 0.36\n","Sample 46: Class 0: 0.02, Class 1: 0.98\n","Sample 47: Class 0: 0.04, Class 1: 0.96\n","Sample 48: Class 0: 0.0, Class 1: 1.0\n","Sample 49: Class 0: 0.03, Class 1: 0.97\n","Sample 50: Class 0: 0.2, Class 1: 0.8\n","Sample 51: Class 0: 0.02, Class 1: 0.98\n","Sample 52: Class 0: 0.15, Class 1: 0.85\n","Sample 53: Class 0: 0.0, Class 1: 1.0\n","Sample 54: Class 0: 0.09, Class 1: 0.91\n","Sample 55: Class 0: 0.17, Class 1: 0.83\n","Sample 56: Class 0: 0.82, Class 1: 0.18\n","Sample 57: Class 0: 0.18, Class 1: 0.82\n","Sample 58: Class 0: 0.04, Class 1: 0.96\n","Sample 59: Class 0: 0.02, Class 1: 0.98\n","Sample 60: Class 0: 0.13, Class 1: 0.87\n","Sample 61: Class 0: 0.02, Class 1: 0.98\n","Sample 62: Class 0: 0.0, Class 1: 1.0\n","Sample 63: Class 0: 0.74, Class 1: 0.26\n","Sample 64: Class 0: 0.0, Class 1: 1.0\n","Sample 65: Class 0: 0.06, Class 1: 0.94\n","Sample 66: Class 0: 0.1, Class 1: 0.9\n","Sample 67: Class 0: 0.03, Class 1: 0.97\n","Sample 68: Class 0: 0.76, Class 1: 0.24\n","Sample 69: Class 0: 0.03, Class 1: 0.97\n","Sample 70: Class 0: 0.01, Class 1: 0.99\n","Sample 71: Class 0: 0.11, Class 1: 0.89\n","Sample 72: Class 0: 0.06, Class 1: 0.94\n","Sample 73: Class 0: 0.03, Class 1: 0.97\n","Sample 74: Class 0: 0.05, Class 1: 0.95\n","Sample 75: Class 0: 0.18, Class 1: 0.82\n","Sample 76: Class 0: 0.7, Class 1: 0.3\n","Sample 77: Class 0: 0.02, Class 1: 0.98\n","Sample 78: Class 0: 0.11, Class 1: 0.89\n","Sample 79: Class 0: 0.0, Class 1: 1.0\n","Sample 80: Class 0: 0.04, Class 1: 0.96\n","Sample 81: Class 0: 0.09, Class 1: 0.91\n","Sample 82: Class 0: 0.02, Class 1: 0.98\n","Sample 83: Class 0: 0.07, Class 1: 0.93\n","Sample 84: Class 0: 0.77, Class 1: 0.23\n","Sample 85: Class 0: 0.06, Class 1: 0.94\n","Sample 86: Class 0: 0.01, Class 1: 0.99\n","Sample 87: Class 0: 0.24, Class 1: 0.76\n","Sample 88: Class 0: 0.16, Class 1: 0.84\n","Sample 89: Class 0: 0.78, Class 1: 0.22\n","Sample 90: Class 0: 0.02, Class 1: 0.98\n","Sample 91: Class 0: 0.1, Class 1: 0.9\n","Sample 92: Class 0: 0.0, Class 1: 1.0\n","Sample 93: Class 0: 0.19, Class 1: 0.81\n","Sample 94: Class 0: 0.68, Class 1: 0.32\n","Sample 95: Class 0: 0.15, Class 1: 0.85\n","Sample 96: Class 0: 0.67, Class 1: 0.33\n","Sample 97: Class 0: 0.73, Class 1: 0.27\n","Sample 98: Class 0: 0.0, Class 1: 1.0\n","Sample 99: Class 0: 0.67, Class 1: 0.33\n","Sample 100: Class 0: 0.21, Class 1: 0.79\n","Sample 101: Class 0: 0.06, Class 1: 0.94\n","Sample 102: Class 0: 0.05, Class 1: 0.95\n","Sample 103: Class 0: 0.07, Class 1: 0.93\n","Sample 104: Class 0: 0.11, Class 1: 0.89\n","Sample 105: Class 0: 0.09, Class 1: 0.91\n","Sample 106: Class 0: 0.19, Class 1: 0.81\n","Sample 107: Class 0: 0.0, Class 1: 1.0\n","Sample 108: Class 0: 0.03, Class 1: 0.97\n","Sample 109: Class 0: 0.05, Class 1: 0.95\n","Sample 110: Class 0: 0.67, Class 1: 0.33\n","Sample 111: Class 0: 0.03, Class 1: 0.97\n","Sample 112: Class 0: 0.0, Class 1: 1.0\n","Sample 113: Class 0: 0.1, Class 1: 0.9\n","Sample 114: Class 0: 0.14, Class 1: 0.86\n","Sample 115: Class 0: 0.02, Class 1: 0.98\n","Sample 116: Class 0: 0.02, Class 1: 0.98\n","Sample 117: Class 0: 0.07, Class 1: 0.93\n","Sample 118: Class 0: 0.21, Class 1: 0.79\n","Sample 119: Class 0: 0.3, Class 1: 0.7\n","Sample 120: Class 0: 0.03, Class 1: 0.97\n","Sample 121: Class 0: 0.06, Class 1: 0.94\n","Sample 122: Class 0: 0.67, Class 1: 0.33\n","Sample 123: Class 0: 0.01, Class 1: 0.99\n","Sample 124: Class 0: 0.0, Class 1: 1.0\n","Sample 125: Class 0: 0.09, Class 1: 0.91\n","Sample 126: Class 0: 0.05, Class 1: 0.95\n","Sample 127: Class 0: 0.13, Class 1: 0.87\n","Sample 128: Class 0: 0.8, Class 1: 0.2\n","Sample 129: Class 0: 0.49, Class 1: 0.51\n","Sample 130: Class 0: 0.01, Class 1: 0.99\n","Sample 131: Class 0: 0.01, Class 1: 0.99\n","Sample 132: Class 0: 0.0, Class 1: 1.0\n","Sample 133: Class 0: 0.03, Class 1: 0.97\n","Sample 134: Class 0: 0.06, Class 1: 0.94\n","Sample 135: Class 0: 0.0, Class 1: 1.0\n","Sample 136: Class 0: 0.01, Class 1: 0.99\n","Sample 137: Class 0: 0.74, Class 1: 0.26\n","Sample 138: Class 0: 0.11, Class 1: 0.89\n","Sample 139: Class 0: 0.05, Class 1: 0.95\n","Sample 140: Class 0: 0.0, Class 1: 1.0\n","Sample 141: Class 0: 0.01, Class 1: 0.99\n","Sample 142: Class 0: 0.18, Class 1: 0.82\n","Sample 143: Class 0: 0.03, Class 1: 0.97\n","Sample 144: Class 0: 0.17, Class 1: 0.83\n","Sample 145: Class 0: 0.35, Class 1: 0.65\n","Sample 146: Class 0: 0.12, Class 1: 0.88\n","Sample 147: Class 0: 0.05, Class 1: 0.95\n","Sample 148: Class 0: 0.22, Class 1: 0.78\n","Sample 149: Class 0: 0.66, Class 1: 0.34\n","Sample 150: Class 0: 0.04, Class 1: 0.96\n","Sample 151: Class 0: 0.72, Class 1: 0.28\n","Sample 152: Class 0: 0.09, Class 1: 0.91\n","Sample 153: Class 0: 0.0, Class 1: 1.0\n","Sample 154: Class 0: 0.15, Class 1: 0.85\n","Sample 155: Class 0: 0.1, Class 1: 0.9\n","Sample 156: Class 0: 0.07, Class 1: 0.93\n","Sample 157: Class 0: 0.0, Class 1: 1.0\n","Sample 158: Class 0: 0.02, Class 1: 0.98\n","Sample 159: Class 0: 0.06, Class 1: 0.94\n","Sample 160: Class 0: 0.05, Class 1: 0.95\n","Sample 161: Class 0: 0.33, Class 1: 0.67\n","Sample 162: Class 0: 0.66, Class 1: 0.34\n","Sample 163: Class 0: 0.0, Class 1: 1.0\n","Sample 164: Class 0: 0.04, Class 1: 0.96\n","Sample 165: Class 0: 0.75, Class 1: 0.25\n","Sample 166: Class 0: 0.01, Class 1: 0.99\n","Sample 167: Class 0: 0.02, Class 1: 0.98\n","Sample 168: Class 0: 0.05, Class 1: 0.95\n","Sample 169: Class 0: 0.08, Class 1: 0.92\n","Sample 170: Class 0: 0.63, Class 1: 0.37\n","Sample 171: Class 0: 0.0, Class 1: 1.0\n","Sample 172: Class 0: 0.11, Class 1: 0.89\n","Sample 173: Class 0: 0.12, Class 1: 0.88\n","Sample 174: Class 0: 0.3, Class 1: 0.7\n","Sample 175: Class 0: 0.08, Class 1: 0.92\n","Sample 176: Class 0: 0.33, Class 1: 0.67\n","Sample 177: Class 0: 0.03, Class 1: 0.97\n","Sample 178: Class 0: 0.13, Class 1: 0.87\n","Sample 179: Class 0: 0.25, Class 1: 0.75\n","Sample 180: Class 0: 0.05, Class 1: 0.95\n","Sample 181: Class 0: 0.0, Class 1: 1.0\n","Sample 182: Class 0: 0.37, Class 1: 0.63\n","Sample 183: Class 0: 0.08, Class 1: 0.92\n","Sample 184: Class 0: 0.03, Class 1: 0.97\n","Sample 185: Class 0: 0.78, Class 1: 0.22\n","Sample 186: Class 0: 0.35, Class 1: 0.65\n","Sample 187: Class 0: 0.02, Class 1: 0.98\n","Sample 188: Class 0: 0.73, Class 1: 0.27\n","Sample 189: Class 0: 0.0, Class 1: 1.0\n","Sample 190: Class 0: 0.16, Class 1: 0.84\n","Sample 191: Class 0: 0.0, Class 1: 1.0\n","Sample 192: Class 0: 0.54, Class 1: 0.46\n","Sample 193: Class 0: 0.64, Class 1: 0.36\n","Sample 194: Class 0: 0.04, Class 1: 0.96\n","Sample 195: Class 0: 0.1, Class 1: 0.9\n","Sample 196: Class 0: 0.05, Class 1: 0.95\n","Sample 197: Class 0: 0.02, Class 1: 0.98\n","Sample 198: Class 0: 0.01, Class 1: 0.99\n","Sample 199: Class 0: 0.81, Class 1: 0.19\n","Sample 200: Class 0: 0.1, Class 1: 0.9\n","Sample 201: Class 0: 0.04, Class 1: 0.96\n","Sample 202: Class 0: 0.24, Class 1: 0.76\n","Sample 203: Class 0: 0.0, Class 1: 1.0\n","Sample 204: Class 0: 0.43, Class 1: 0.57\n","Sample 205: Class 0: 0.12, Class 1: 0.88\n","Sample 206: Class 0: 0.04, Class 1: 0.96\n","Sample 207: Class 0: 0.29, Class 1: 0.71\n","Sample 208: Class 0: 0.15, Class 1: 0.85\n","Sample 209: Class 0: 0.2, Class 1: 0.8\n","Sample 210: Class 0: 0.02, Class 1: 0.98\n","Sample 211: Class 0: 0.23, Class 1: 0.77\n","Sample 212: Class 0: 0.23, Class 1: 0.77\n","Sample 213: Class 0: 0.05, Class 1: 0.95\n","Sample 214: Class 0: 0.11, Class 1: 0.89\n","Sample 215: Class 0: 0.08, Class 1: 0.92\n","Sample 216: Class 0: 0.12, Class 1: 0.88\n","Sample 217: Class 0: 0.73, Class 1: 0.27\n","Sample 218: Class 0: 0.01, Class 1: 0.99\n","Sample 219: Class 0: 0.03, Class 1: 0.97\n","Sample 220: Class 0: 0.04, Class 1: 0.96\n","Sample 221: Class 0: 0.02, Class 1: 0.98\n","Sample 222: Class 0: 0.0, Class 1: 1.0\n","Sample 223: Class 0: 0.22, Class 1: 0.78\n","Sample 224: Class 0: 0.0, Class 1: 1.0\n","Sample 225: Class 0: 0.12, Class 1: 0.88\n","Sample 226: Class 0: 0.02, Class 1: 0.98\n","Sample 227: Class 0: 0.17, Class 1: 0.83\n","Sample 228: Class 0: 0.01, Class 1: 0.99\n","Sample 229: Class 0: 0.15, Class 1: 0.85\n","Sample 230: Class 0: 0.01, Class 1: 0.99\n","Sample 231: Class 0: 0.05, Class 1: 0.95\n","Sample 232: Class 0: 0.09, Class 1: 0.91\n","Sample 233: Class 0: 0.42, Class 1: 0.58\n","Sample 234: Class 0: 0.06, Class 1: 0.94\n","Sample 235: Class 0: 0.17, Class 1: 0.83\n","Sample 236: Class 0: 0.63, Class 1: 0.37\n","Sample 237: Class 0: 0.02, Class 1: 0.98\n","Sample 238: Class 0: 0.0, Class 1: 1.0\n","Sample 239: Class 0: 0.05, Class 1: 0.95\n","Sample 240: Class 0: 0.05, Class 1: 0.95\n","Sample 241: Class 0: 0.79, Class 1: 0.21\n","Sample 242: Class 0: 0.09, Class 1: 0.91\n","Sample 243: Class 0: 0.04, Class 1: 0.96\n","Sample 244: Class 0: 0.03, Class 1: 0.97\n","Sample 245: Class 0: 0.2, Class 1: 0.8\n","Sample 246: Class 0: 0.03, Class 1: 0.97\n","Sample 247: Class 0: 0.19, Class 1: 0.81\n","Sample 248: Class 0: 0.01, Class 1: 0.99\n","Sample 249: Class 0: 0.04, Class 1: 0.96\n","Sample 250: Class 0: 0.56, Class 1: 0.44\n","Sample 251: Class 0: 0.06, Class 1: 0.94\n","Sample 252: Class 0: 0.0, Class 1: 1.0\n","Sample 253: Class 0: 0.07, Class 1: 0.93\n","Sample 254: Class 0: 0.0, Class 1: 1.0\n","Sample 255: Class 0: 0.05, Class 1: 0.95\n","Sample 256: Class 0: 0.0, Class 1: 1.0\n","Sample 257: Class 0: 0.12, Class 1: 0.88\n","Sample 258: Class 0: 0.47, Class 1: 0.53\n","Sample 259: Class 0: 0.0, Class 1: 1.0\n","Sample 260: Class 0: 0.03, Class 1: 0.97\n","Sample 261: Class 0: 0.03, Class 1: 0.97\n","Sample 262: Class 0: 0.07, Class 1: 0.93\n","Sample 263: Class 0: 0.0, Class 1: 1.0\n","Sample 264: Class 0: 0.07, Class 1: 0.93\n","Sample 265: Class 0: 0.04, Class 1: 0.96\n","Sample 266: Class 0: 0.02, Class 1: 0.98\n","Sample 267: Class 0: 0.07, Class 1: 0.93\n","Sample 268: Class 0: 0.04, Class 1: 0.96\n","Sample 269: Class 0: 0.17, Class 1: 0.83\n","Sample 270: Class 0: 0.05, Class 1: 0.95\n","Sample 271: Class 0: 0.67, Class 1: 0.33\n","Sample 272: Class 0: 0.01, Class 1: 0.99\n","Sample 273: Class 0: 0.2, Class 1: 0.8\n","Sample 274: Class 0: 0.68, Class 1: 0.32\n","Sample 275: Class 0: 0.0, Class 1: 1.0\n","Sample 276: Class 0: 0.01, Class 1: 0.99\n","Sample 277: Class 0: 0.68, Class 1: 0.32\n","Sample 278: Class 0: 0.67, Class 1: 0.33\n"]}]},{"cell_type":"code","source":["df_kubo_classifier_confidence = df_kubo.copy()\n","new_col_name = \"Classifier Confidence\"\n","# テスト用データのクラスの確率を予測する\n","y_proba = rfc.predict_proba(X)\n","# 新しい列をデータフレームに追加する\n","df_kubo_classifier_confidence[new_col_name] = y_proba[:, 1]\n","df_kubo_classifier_confidence.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":288},"id":"Cd3vOEutfLbe","executionInfo":{"status":"ok","timestamp":1680246699932,"user_tz":-540,"elapsed":34,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"c43a572a-bb52-45f9-a505-0ac572372a49"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Shot  Type  Stroke  Spin  Speed (KM/H)  Bounce (x)  Bounce (y)   Hit (x)  \\\n","2      3     4       3     2     91.792122    0.641170    9.733553  0.378104   \n","4      5     0       3     2     88.915466    1.157406    8.686537  1.816429   \n","6      7     0       3     2     44.372288    0.429961    4.240902  1.238550   \n","8     10     0       1     0     81.016518    1.950220    8.712015  1.939592   \n","12     3     4       1     1     63.699120    2.967690    8.343352  4.322237   \n","\n","      Hit (y)   Hit (z)  Direction  Result  Classifier Confidence  \n","2   14.079935  1.302506          4       1                   1.00  \n","4   14.363003  1.121761          4       1                   0.95  \n","6   10.230923  0.944325          3       1                   0.90  \n","8   12.365864  0.998229          2       0                   0.33  \n","12  12.893879  1.032962          2       0                   0.77  "],"text/html":["\n","  <div id=\"df-3ced452c-e35d-4571-a604-a7aabb5d4b60\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Shot</th>\n","      <th>Type</th>\n","      <th>Stroke</th>\n","      <th>Spin</th>\n","      <th>Speed (KM/H)</th>\n","      <th>Bounce (x)</th>\n","      <th>Bounce (y)</th>\n","      <th>Hit (x)</th>\n","      <th>Hit (y)</th>\n","      <th>Hit (z)</th>\n","      <th>Direction</th>\n","      <th>Result</th>\n","      <th>Classifier Confidence</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>91.792122</td>\n","      <td>0.641170</td>\n","      <td>9.733553</td>\n","      <td>0.378104</td>\n","      <td>14.079935</td>\n","      <td>1.302506</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>88.915466</td>\n","      <td>1.157406</td>\n","      <td>8.686537</td>\n","      <td>1.816429</td>\n","      <td>14.363003</td>\n","      <td>1.121761</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0.95</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>44.372288</td>\n","      <td>0.429961</td>\n","      <td>4.240902</td>\n","      <td>1.238550</td>\n","      <td>10.230923</td>\n","      <td>0.944325</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.90</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>81.016518</td>\n","      <td>1.950220</td>\n","      <td>8.712015</td>\n","      <td>1.939592</td>\n","      <td>12.365864</td>\n","      <td>0.998229</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0.33</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>63.699120</td>\n","      <td>2.967690</td>\n","      <td>8.343352</td>\n","      <td>4.322237</td>\n","      <td>12.893879</td>\n","      <td>1.032962</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0.77</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ced452c-e35d-4571-a604-a7aabb5d4b60')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3ced452c-e35d-4571-a604-a7aabb5d4b60 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3ced452c-e35d-4571-a604-a7aabb5d4b60');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["# グラフのサイズを設定する\n","plt.figure(figsize=(8, 4))\n","\n","# 棒グラフを作成する\n","plt.bar(range(len(importances)), importances, align='center')\n","plt.xticks(range(len(feature_names)), feature_names, rotation=90)\n","\n","# グラフのラベルを設定する\n","plt.xlabel('Features')\n","plt.ylabel('Importance')\n","\n","# グラフを表示する\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":469},"id":"3Rmj-qD5fi0E","executionInfo":{"status":"ok","timestamp":1680246699933,"user_tz":-540,"elapsed":33,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"b7fdfd72-a517-47ed-e98e-268cafdb295c"},"execution_count":26,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# テストデータに対する予測結果を取得する\n","y_pred = rfc.predict(X_test)\n","\n","# 実際の結果と予測結果を比較する\n","correct = y_pred == y_test\n","\n","# 正解率を計算する\n","accuracy = correct.sum() / len(correct)\n","\n","# 正解率をグラフ化する\n","plt.bar(['Correct', 'Incorrect'], [accuracy, 1-accuracy])\n","plt.title('Accuracy')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"S26Ny_SgfjKu","executionInfo":{"status":"ok","timestamp":1680246699933,"user_tz":-540,"elapsed":32,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"2ff63b0c-f232-402b-be15-af8157e3ac97"},"execution_count":27,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## 新データで予測"],"metadata":{"id":"fM96iYKWLQhN"}},{"cell_type":"code","source":["df_new = pd.read_csv('match_2023_12_23.csv')\n","condition = df_new['Stroke'] == 'Feed'\n","subset = df_new[condition]\n","df_new = df_new.drop(subset.index)\n","df_new['Bounce (y)'] = abs(df_new['Bounce (y)'] -11.885)   #深さをネットからの距離に\n","df_new['Hit (y)'] = abs(df_new['Hit (y)'] -11.885)\n","df_new['Bounce (x)'] = df_new['Bounce (x)'].shift()\n","df_new['Bounce (y)'] = df_new['Bounce (y)'].shift()\n","df_new = df_new[df_new[\"Stroke\"] != \"Serve\"]\n","df_new['Result'] = df_new['Result'].apply(in_to_1_outnet_to_0)\n","df_new_kubo = df_new[df_new['Player'] =='龍哉 久保']\n","df_new_yoshizawa = df_new[df_new['Player'] == 'Yoshizawa Masatsugu']"],"metadata":{"id":"kH3QUKm-0Trr","executionInfo":{"status":"ok","timestamp":1680246699933,"user_tz":-540,"elapsed":31,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["df_new_yoshizawa.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":404},"id":"rvU9rehM4HpF","executionInfo":{"status":"ok","timestamp":1680246700828,"user_tz":-540,"elapsed":925,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"2cc60641-3195-4a04-8935-a4e586e97f45"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Player  Shot             Type    Stroke     Spin  \\\n","2   Yoshizawa Masatsugu     2           return  Forehand  Topspin   \n","4   Yoshizawa Masatsugu     4  return_plus_one  Forehand    Slice   \n","6   Yoshizawa Masatsugu     6          in_play  Backhand  Topspin   \n","8   Yoshizawa Masatsugu     8          in_play  Backhand  Topspin   \n","11  Yoshizawa Masatsugu     2           return  Backhand  Topspin   \n","\n","    Speed (KM/H)  Point  Game  Set  Bounce Depth  ... Hit Zone Hit Side  \\\n","2      64.693878     18     0    0   service_box  ...    deuce      far   \n","4      61.960609     18     0    0  no_mans_land  ...    deuce      far   \n","6      59.128944     18     0    0   service_box  ...       ad      far   \n","8      66.406624     18     0    0  no_mans_land  ...       ad      far   \n","11     67.209190     20     0    0   service_box  ...       ad      far   \n","\n","     Hit (x)    Hit (y)   Hit (z)      Direction Result  Favorited  \\\n","2  -1.525902  12.966954  1.225178    cross court      1      False   \n","4  -2.269601  10.074612  1.133872    cross court      1      False   \n","6   2.037655  12.966954  0.892581  down the line      1      False   \n","8   1.721740  12.007624  0.892581    cross court      1      False   \n","11  2.859036  12.159912  1.331611    cross court      1      False   \n","\n","    Start Time  Video Time  \n","2     05:54:44  260.329987  \n","4     05:54:47  263.369995  \n","6     05:54:50  266.279999  \n","8     05:54:53  269.500000  \n","11    05:55:14  290.829987  \n","\n","[5 rows x 25 columns]"],"text/html":["\n","  <div id=\"df-c1972927-aa1a-4a1b-a583-5882bb3a9061\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Player</th>\n","      <th>Shot</th>\n","      <th>Type</th>\n","      <th>Stroke</th>\n","      <th>Spin</th>\n","      <th>Speed (KM/H)</th>\n","      <th>Point</th>\n","      <th>Game</th>\n","      <th>Set</th>\n","      <th>Bounce Depth</th>\n","      <th>...</th>\n","      <th>Hit Zone</th>\n","      <th>Hit Side</th>\n","      <th>Hit (x)</th>\n","      <th>Hit (y)</th>\n","      <th>Hit (z)</th>\n","      <th>Direction</th>\n","      <th>Result</th>\n","      <th>Favorited</th>\n","      <th>Start Time</th>\n","      <th>Video Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>Yoshizawa Masatsugu</td>\n","      <td>2</td>\n","      <td>return</td>\n","      <td>Forehand</td>\n","      <td>Topspin</td>\n","      <td>64.693878</td>\n","      <td>18</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>service_box</td>\n","      <td>...</td>\n","      <td>deuce</td>\n","      <td>far</td>\n","      <td>-1.525902</td>\n","      <td>12.966954</td>\n","      <td>1.225178</td>\n","      <td>cross court</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>05:54:44</td>\n","      <td>260.329987</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Yoshizawa Masatsugu</td>\n","      <td>4</td>\n","      <td>return_plus_one</td>\n","      <td>Forehand</td>\n","      <td>Slice</td>\n","      <td>61.960609</td>\n","      <td>18</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>no_mans_land</td>\n","      <td>...</td>\n","      <td>deuce</td>\n","      <td>far</td>\n","      <td>-2.269601</td>\n","      <td>10.074612</td>\n","      <td>1.133872</td>\n","      <td>cross court</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>05:54:47</td>\n","      <td>263.369995</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Yoshizawa Masatsugu</td>\n","      <td>6</td>\n","      <td>in_play</td>\n","      <td>Backhand</td>\n","      <td>Topspin</td>\n","      <td>59.128944</td>\n","      <td>18</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>service_box</td>\n","      <td>...</td>\n","      <td>ad</td>\n","      <td>far</td>\n","      <td>2.037655</td>\n","      <td>12.966954</td>\n","      <td>0.892581</td>\n","      <td>down the line</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>05:54:50</td>\n","      <td>266.279999</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Yoshizawa Masatsugu</td>\n","      <td>8</td>\n","      <td>in_play</td>\n","      <td>Backhand</td>\n","      <td>Topspin</td>\n","      <td>66.406624</td>\n","      <td>18</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>no_mans_land</td>\n","      <td>...</td>\n","      <td>ad</td>\n","      <td>far</td>\n","      <td>1.721740</td>\n","      <td>12.007624</td>\n","      <td>0.892581</td>\n","      <td>cross court</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>05:54:53</td>\n","      <td>269.500000</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Yoshizawa Masatsugu</td>\n","      <td>2</td>\n","      <td>return</td>\n","      <td>Backhand</td>\n","      <td>Topspin</td>\n","      <td>67.209190</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>service_box</td>\n","      <td>...</td>\n","      <td>ad</td>\n","      <td>far</td>\n","      <td>2.859036</td>\n","      <td>12.159912</td>\n","      <td>1.331611</td>\n","      <td>cross court</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>05:55:14</td>\n","      <td>290.829987</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 25 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c1972927-aa1a-4a1b-a583-5882bb3a9061')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c1972927-aa1a-4a1b-a583-5882bb3a9061 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c1972927-aa1a-4a1b-a583-5882bb3a9061');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["df_new_yoshizawa = df_new_yoshizawa.drop(['Player','Point','Game', 'Set', 'Hit Depth', 'Favorited', 'Start Time', 'Video Time','Bounce Depth', 'Bounce Zone', 'Bounce Side', 'Hit Zone', 'Hit Side' ], axis=1)\n","df_new_yoshizawa.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":374},"id":"OeiVWOol5Rij","executionInfo":{"status":"ok","timestamp":1680246700828,"user_tz":-540,"elapsed":184,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"76dcdd2a-21e8-490b-ce83-3144dd75cc0d"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Shot             Type    Stroke     Spin  Speed (KM/H)  Bounce (x)  \\\n","2      2           return  Forehand  Topspin     64.693878   -1.049904   \n","4      4  return_plus_one  Forehand    Slice     61.960609   -1.390404   \n","6      6          in_play  Backhand  Topspin     59.128944    1.601858   \n","8      8          in_play  Backhand  Topspin     66.406624    1.753331   \n","11     2           return  Backhand  Topspin     67.209190    2.353571   \n","\n","    Bounce (y)   Hit (x)    Hit (y)   Hit (z)      Direction  Result  \n","2     3.974868 -1.525902  12.966954  1.225178    cross court       1  \n","4     3.571020 -2.269601  10.074612  1.133872    cross court       1  \n","6    10.498333  2.037655  12.966954  0.892581  down the line       1  \n","8     6.068365  1.721740  12.007624  0.892581    cross court       1  \n","11    4.850056  2.859036  12.159912  1.331611    cross court       1  "],"text/html":["\n","  <div id=\"df-0444e94a-d030-4a55-a84e-efacc773a9a4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Shot</th>\n","      <th>Type</th>\n","      <th>Stroke</th>\n","      <th>Spin</th>\n","      <th>Speed (KM/H)</th>\n","      <th>Bounce (x)</th>\n","      <th>Bounce (y)</th>\n","      <th>Hit (x)</th>\n","      <th>Hit (y)</th>\n","      <th>Hit (z)</th>\n","      <th>Direction</th>\n","      <th>Result</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>return</td>\n","      <td>Forehand</td>\n","      <td>Topspin</td>\n","      <td>64.693878</td>\n","      <td>-1.049904</td>\n","      <td>3.974868</td>\n","      <td>-1.525902</td>\n","      <td>12.966954</td>\n","      <td>1.225178</td>\n","      <td>cross court</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>return_plus_one</td>\n","      <td>Forehand</td>\n","      <td>Slice</td>\n","      <td>61.960609</td>\n","      <td>-1.390404</td>\n","      <td>3.571020</td>\n","      <td>-2.269601</td>\n","      <td>10.074612</td>\n","      <td>1.133872</td>\n","      <td>cross court</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>in_play</td>\n","      <td>Backhand</td>\n","      <td>Topspin</td>\n","      <td>59.128944</td>\n","      <td>1.601858</td>\n","      <td>10.498333</td>\n","      <td>2.037655</td>\n","      <td>12.966954</td>\n","      <td>0.892581</td>\n","      <td>down the line</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>in_play</td>\n","      <td>Backhand</td>\n","      <td>Topspin</td>\n","      <td>66.406624</td>\n","      <td>1.753331</td>\n","      <td>6.068365</td>\n","      <td>1.721740</td>\n","      <td>12.007624</td>\n","      <td>0.892581</td>\n","      <td>cross court</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>2</td>\n","      <td>return</td>\n","      <td>Backhand</td>\n","      <td>Topspin</td>\n","      <td>67.209190</td>\n","      <td>2.353571</td>\n","      <td>4.850056</td>\n","      <td>2.859036</td>\n","      <td>12.159912</td>\n","      <td>1.331611</td>\n","      <td>cross court</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0444e94a-d030-4a55-a84e-efacc773a9a4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0444e94a-d030-4a55-a84e-efacc773a9a4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0444e94a-d030-4a55-a84e-efacc773a9a4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["import warnings\n","# 警告文を非表示\n","warnings.simplefilter('ignore')\n","\n","from sklearn.preprocessing import LabelEncoder\n","\n","# ラベルエンコーディングを行うために、LabelEncoderクラスをインスタンス化（利用するためのおまじないだとお考えください）\n","enc = LabelEncoder() # encはencoderの省略名称である変数です。\n","# fit()によりTypeカラムに対してラベルエンコーディングを行います。\n","label_encoder = enc.fit(df_new_yoshizawa[[\"Type\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_new_yoshizawa[\"Type\"] = label_encoder.transform(df_new_yoshizawa[[\"Type\"]])\n","\n","#Stroke\n","\n","label_encoder = enc.fit(df_new_yoshizawa[[\"Stroke\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_new_yoshizawa[\"Stroke\"] = label_encoder.transform(df_new_yoshizawa[[\"Stroke\"]])\n","\n","#Spin Categorical classes: ['Flat' 'Kick' 'Slice' 'Topspin'] Integer classes: [0 1 2 3]\n","label_encoder = enc.fit(df_new_yoshizawa[[\"Spin\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_new_yoshizawa[\"Spin\"] = label_encoder.transform(df_new_yoshizawa[[\"Spin\"]])\n","\n","#Direction Categorical classes: ['---' 'cross court' 'down the T' 'down the line' 'inside in' 'inside out''out wide']Integer classes: [0 1 2 3 4 5 6]\n","label_encoder = enc.fit(df_new_yoshizawa[[\"Direction\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_new_yoshizawa[\"Direction\"] = label_encoder.transform(df_new_yoshizawa[[\"Direction\"]])\n","\n","#Result  Categorical classes: ['In' 'Net' 'Out'] Integer classes: [0 1 2]\n","label_encoder = enc.fit(df_new_yoshizawa[[\"Result\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_new_yoshizawa[\"Result\"] = label_encoder.transform(df_new_yoshizawa[[\"Result\"]])"],"metadata":{"id":"9piABe0w4-FL","executionInfo":{"status":"ok","timestamp":1680246700829,"user_tz":-540,"elapsed":183,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["df_new_yoshizawa_1 = df_new_yoshizawa.drop(['Result'], axis =1)\n","df_new_yoshizawa_1.head()\n","len(df_new_yoshizawa_1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mLdkUVMy6d5U","executionInfo":{"status":"ok","timestamp":1680246700829,"user_tz":-540,"elapsed":182,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"f1043c8b-599a-440d-ebda-65db66bb7da0"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["94"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["# 未知のデータに対して予測を実行する\n","y_pred = rfc.predict(df_new_yoshizawa_1)\n","\n","# 予測結果を出力する\n","print(y_pred)\n","print(len(y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_seOzOVk6pGJ","executionInfo":{"status":"ok","timestamp":1680246700829,"user_tz":-540,"elapsed":177,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"2f31b3ce-5df3-4908-8e8e-0a437a39e36c"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n"," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n"," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n","94\n"]}]},{"cell_type":"code","source":["df_new_yoshizawa['Predicted'] = y_pred\n","df_new_yoshizawa"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":505},"id":"xLVzKPSW61qg","executionInfo":{"status":"ok","timestamp":1680246700829,"user_tz":-540,"elapsed":174,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"1ddad7f9-abdd-4399-f798-9210858c7704"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Shot  Type  Stroke  Spin  Speed (KM/H)  Bounce (x)  Bounce (y)   Hit (x)  \\\n","2       2     1       3     2     64.693878   -1.049904    3.974868 -1.525902   \n","4       4     2       3     1     61.960609   -1.390404    3.571020 -2.269601   \n","6       6     0       1     2     59.128944    1.601858   10.498333  2.037655   \n","8       8     0       1     2     66.406624    1.753331    6.068365  1.721740   \n","11      2     1       1     2     67.209190    2.353571    4.850056  2.859036   \n","..    ...   ...     ...   ...           ...         ...         ...       ...   \n","246    12     0       1     1     58.657207    1.787732    8.555748  2.179976   \n","248    14     0       3     0     58.070332   -1.682127   11.398470 -1.108846   \n","251     2     1       1     1     60.927593    3.115330    5.002344  4.292065   \n","254     2     1       1     2     83.150276   -0.594756    5.338618 -0.749193   \n","256     4     2       3     2     76.685638   -0.445047    9.830477 -0.113148   \n","\n","       Hit (y)   Hit (z)  Direction  Result  Predicted  \n","2    12.966954  1.225178          0       1          1  \n","4    10.074612  1.133872          0       1          1  \n","6    12.966954  0.892581          1       1          1  \n","8    12.007624  0.892581          0       1          1  \n","11   12.159912  1.331611          0       1          1  \n","..         ...       ...        ...     ...        ...  \n","246  12.566015  1.554697          0       1          1  \n","248  12.718304  0.795333          0       1          1  \n","251  12.515253  1.523592          1       1          1  \n","254  11.643923  1.562685          3       1          1  \n","256  12.667542  1.574123          1       1          1  \n","\n","[94 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-e3cfcf72-15b1-4047-834f-3e9a7c7ed07c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Shot</th>\n","      <th>Type</th>\n","      <th>Stroke</th>\n","      <th>Spin</th>\n","      <th>Speed (KM/H)</th>\n","      <th>Bounce (x)</th>\n","      <th>Bounce (y)</th>\n","      <th>Hit (x)</th>\n","      <th>Hit (y)</th>\n","      <th>Hit (z)</th>\n","      <th>Direction</th>\n","      <th>Result</th>\n","      <th>Predicted</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>64.693878</td>\n","      <td>-1.049904</td>\n","      <td>3.974868</td>\n","      <td>-1.525902</td>\n","      <td>12.966954</td>\n","      <td>1.225178</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>61.960609</td>\n","      <td>-1.390404</td>\n","      <td>3.571020</td>\n","      <td>-2.269601</td>\n","      <td>10.074612</td>\n","      <td>1.133872</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>59.128944</td>\n","      <td>1.601858</td>\n","      <td>10.498333</td>\n","      <td>2.037655</td>\n","      <td>12.966954</td>\n","      <td>0.892581</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>66.406624</td>\n","      <td>1.753331</td>\n","      <td>6.068365</td>\n","      <td>1.721740</td>\n","      <td>12.007624</td>\n","      <td>0.892581</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>67.209190</td>\n","      <td>2.353571</td>\n","      <td>4.850056</td>\n","      <td>2.859036</td>\n","      <td>12.159912</td>\n","      <td>1.331611</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>246</th>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>58.657207</td>\n","      <td>1.787732</td>\n","      <td>8.555748</td>\n","      <td>2.179976</td>\n","      <td>12.566015</td>\n","      <td>1.554697</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>248</th>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>58.070332</td>\n","      <td>-1.682127</td>\n","      <td>11.398470</td>\n","      <td>-1.108846</td>\n","      <td>12.718304</td>\n","      <td>0.795333</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>251</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>60.927593</td>\n","      <td>3.115330</td>\n","      <td>5.002344</td>\n","      <td>4.292065</td>\n","      <td>12.515253</td>\n","      <td>1.523592</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>254</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>83.150276</td>\n","      <td>-0.594756</td>\n","      <td>5.338618</td>\n","      <td>-0.749193</td>\n","      <td>11.643923</td>\n","      <td>1.562685</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>256</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>76.685638</td>\n","      <td>-0.445047</td>\n","      <td>9.830477</td>\n","      <td>-0.113148</td>\n","      <td>12.667542</td>\n","      <td>1.574123</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>94 rows × 13 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e3cfcf72-15b1-4047-834f-3e9a7c7ed07c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e3cfcf72-15b1-4047-834f-3e9a7c7ed07c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e3cfcf72-15b1-4047-834f-3e9a7c7ed07c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["indices = df_new_yoshizawa[df_new_yoshizawa['Result'] != df_new_yoshizawa['Predicted']].index.tolist()\n","\n","# 異なる行の数を取得\n","count = len(indices)\n","\n","# 結果を出力\n","print(f\"異なるインデックス: {indices}\")\n","print(f\"異なる行の数: {count}\")\n","print(f\"正答率:{1- count/len(df_new_yoshizawa)}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RQrPvC-57aAH","executionInfo":{"status":"ok","timestamp":1680246700830,"user_tz":-540,"elapsed":173,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"90923780-59c5-4e2d-b9db-3ae48decca42"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["異なるインデックス: [33, 79, 88, 114, 124, 133, 155, 178, 186, 192, 206, 213, 221, 227, 234]\n","異なる行の数: 15\n","正答率:0.8404255319148937\n"]}]},{"cell_type":"code","source":["count_net = df_new_yoshizawa.loc[(df_new_yoshizawa['Result'] == 1) & (df_new_yoshizawa['Predicted'] == 1)]\n","count_out = df_new_yoshizawa.loc[(df_new_yoshizawa['Result'] == 2) & (df_new_yoshizawa['Predicted'] == 2)]\n","print(f\"ネットであると正しく予測したインデックス:{count_net}\")\n","print(f\"アウトであると正しく予測したインデックス:{count_out}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EGWsyeW8N6Bb","executionInfo":{"status":"ok","timestamp":1680246700830,"user_tz":-540,"elapsed":170,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"7d0c58e7-97fe-4975-a0d3-ac85299a0343"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["ネットであると正しく予測したインデックス:     Shot  Type  Stroke  Spin  Speed (KM/H)  Bounce (x)  Bounce (y)   Hit (x)  \\\n","2       2     1       3     2     64.693878   -1.049904    3.974868 -1.525902   \n","4       4     2       3     1     61.960609   -1.390404    3.571020 -2.269601   \n","6       6     0       1     2     59.128944    1.601858   10.498333  2.037655   \n","8       8     0       1     2     66.406624    1.753331    6.068365  1.721740   \n","11      2     1       1     2     67.209190    2.353571    4.850056  2.859036   \n","..    ...   ...     ...   ...           ...         ...         ...       ...   \n","246    12     0       1     1     58.657207    1.787732    8.555748  2.179976   \n","248    14     0       3     0     58.070332   -1.682127   11.398470 -1.108846   \n","251     2     1       1     1     60.927593    3.115330    5.002344  4.292065   \n","254     2     1       1     2     83.150276   -0.594756    5.338618 -0.749193   \n","256     4     2       3     2     76.685638   -0.445047    9.830477 -0.113148   \n","\n","       Hit (y)   Hit (z)  Direction  Result  Predicted  \n","2    12.966954  1.225178          0       1          1  \n","4    10.074612  1.133872          0       1          1  \n","6    12.966954  0.892581          1       1          1  \n","8    12.007624  0.892581          0       1          1  \n","11   12.159912  1.331611          0       1          1  \n","..         ...       ...        ...     ...        ...  \n","246  12.566015  1.554697          0       1          1  \n","248  12.718304  0.795333          0       1          1  \n","251  12.515253  1.523592          1       1          1  \n","254  11.643923  1.562685          3       1          1  \n","256  12.667542  1.574123          1       1          1  \n","\n","[79 rows x 13 columns]\n","アウトであると正しく予測したインデックス:Empty DataFrame\n","Columns: [Shot, Type, Stroke, Spin, Speed (KM/H), Bounce (x), Bounce (y), Hit (x), Hit (y), Hit (z), Direction, Result, Predicted]\n","Index: []\n"]}]},{"cell_type":"code","source":["print(len(df_new_yoshizawa))\n","import matplotlib.pyplot as plt\n","\n","# Resultが1または2の行のインデックスを取得する\n","index_list = df_new_yoshizawa[(df_new_yoshizawa['Result']==2) & (df_new_yoshizawa['Predicted']==2)].index.tolist()\n","print(index_list)\n","\n","# Bounce(x)とBounce(y)の値を取得する\n","bounce_x = df_new_yoshizawa.loc[index_list, 'Bounce (x)']\n","bounce_y = df_new_yoshizawa.loc[index_list, 'Bounce (y)']\n","\n","# 散布図を作成する\n","plt.plot(bounce_x, bounce_y, marker=\"o\",color=\"black\", linewidth=0)\n","plt.hlines(11.885,-5.485,5.485, color=\"black\")  #ベーススライン\n","plt.hlines(6.40,-4.115,4.115, color=\"black\")   #サービスライン\n","plt.vlines(0,0,11.885,color=\"black\")    #センターライン\n","plt.vlines(-5.485,0,11.885,color=\"black\")\n","plt.vlines(5.485,0,11.885,color=\"black\")    #ダブルスサイドライン\n","plt.vlines(-4.115,0,11.885,color=\"black\")\n","plt.vlines(4.115,0,11.885,color=\"black\")     #シングルスサイドライン\n","\n","# 軸ラベルを設定する\n","plt.xlabel('Bounce (x)')\n","plt.ylabel('Bounce (y)')\n","\n","# グラフを表示する\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":485},"id":"jm3_cYHg75hy","executionInfo":{"status":"ok","timestamp":1680246700830,"user_tz":-540,"elapsed":167,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"a0de22c0-6007-47d0-de5d-abdf57158946"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["94\n","[]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"MFCo9mKg9Rs2","executionInfo":{"status":"ok","timestamp":1680246700832,"user_tz":-540,"elapsed":164,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["pd.set_option('display.max_columns', 200)\n","pd.set_option('display.max_rows', None)"],"metadata":{"id":"V_p6_NlJdcv9","executionInfo":{"status":"ok","timestamp":1680246700832,"user_tz":-540,"elapsed":164,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["df_yoshizawa_classifier_confidence = df_yoshizawa_classifier_confidence.reset_index()\n","df_yoshizawa_classifier_confidence.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":288},"id":"1_sKrvhIdcyc","executionInfo":{"status":"ok","timestamp":1680247130079,"user_tz":-540,"elapsed":11,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"e7a5cce6-ad65-402c-95ec-4b8b4393d6a2"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   index  Shot  Type  Stroke  Spin  Speed (KM/H)  Bounce (x)  Bounce (y)  \\\n","0      1     2     2       1     2     67.991951    1.540818    4.327014   \n","1      3     4     3       1     2     74.643082   -1.712300    7.789904   \n","2      5     6     0       1     2     72.283096   -0.719358    7.536090   \n","3      7     9     0       1     2     78.857880    1.486005    6.165491   \n","4     11     2     2       3     2     69.152916   -1.410573    4.388790   \n","\n","    Hit (x)    Hit (y)   Hit (z)  Direction  Result  Classifier Confidence  \n","0  2.866704  12.576038  1.140431          3       1                   0.97  \n","1 -2.544409  12.938649  0.938888          1       1                   0.97  \n","2 -1.248331  13.851430  1.185831          1       1                   0.90  \n","3  1.727386   8.694775  1.127259          3       1                   0.85  \n","4 -1.772645  10.835678  1.343061          4       1                   0.95  "],"text/html":["\n","  <div id=\"df-fb7fde9f-804a-4fa0-8f72-20b7cb517f07\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Shot</th>\n","      <th>Type</th>\n","      <th>Stroke</th>\n","      <th>Spin</th>\n","      <th>Speed (KM/H)</th>\n","      <th>Bounce (x)</th>\n","      <th>Bounce (y)</th>\n","      <th>Hit (x)</th>\n","      <th>Hit (y)</th>\n","      <th>Hit (z)</th>\n","      <th>Direction</th>\n","      <th>Result</th>\n","      <th>Classifier Confidence</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>67.991951</td>\n","      <td>1.540818</td>\n","      <td>4.327014</td>\n","      <td>2.866704</td>\n","      <td>12.576038</td>\n","      <td>1.140431</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.97</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>74.643082</td>\n","      <td>-1.712300</td>\n","      <td>7.789904</td>\n","      <td>-2.544409</td>\n","      <td>12.938649</td>\n","      <td>0.938888</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.97</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>72.283096</td>\n","      <td>-0.719358</td>\n","      <td>7.536090</td>\n","      <td>-1.248331</td>\n","      <td>13.851430</td>\n","      <td>1.185831</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.90</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>7</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>78.857880</td>\n","      <td>1.486005</td>\n","      <td>6.165491</td>\n","      <td>1.727386</td>\n","      <td>8.694775</td>\n","      <td>1.127259</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.85</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>11</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>69.152916</td>\n","      <td>-1.410573</td>\n","      <td>4.388790</td>\n","      <td>-1.772645</td>\n","      <td>10.835678</td>\n","      <td>1.343061</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0.95</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fb7fde9f-804a-4fa0-8f72-20b7cb517f07')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fb7fde9f-804a-4fa0-8f72-20b7cb517f07 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fb7fde9f-804a-4fa0-8f72-20b7cb517f07');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["df_kubo_classifier_confidence = df_kubo_classifier_confidence.reset_index()\n","df_kubo_classifier_confidence.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":288},"id":"fWlLFwUddfBo","executionInfo":{"status":"ok","timestamp":1680247164859,"user_tz":-540,"elapsed":13,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"5eb259d2-5a0b-4081-dd8b-adbd6836dce4"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   index  Shot  Type  Stroke  Spin  Speed (KM/H)  Bounce (x)  Bounce (y)  \\\n","0      2     3     4       3     2     91.792122    0.641170    9.733553   \n","1      4     5     0       3     2     88.915466    1.157406    8.686537   \n","2      6     7     0       3     2     44.372288    0.429961    4.240902   \n","3      8    10     0       1     0     81.016518    1.950220    8.712015   \n","4     12     3     4       1     1     63.699120    2.967690    8.343352   \n","\n","    Hit (x)    Hit (y)   Hit (z)  Direction  Result  Classifier Confidence  \n","0  0.378104  14.079935  1.302506          4       1                   1.00  \n","1  1.816429  14.363003  1.121761          4       1                   0.95  \n","2  1.238550  10.230923  0.944325          3       1                   0.90  \n","3  1.939592  12.365864  0.998229          2       0                   0.33  \n","4  4.322237  12.893879  1.032962          2       0                   0.77  "],"text/html":["\n","  <div id=\"df-db1c7bd5-11c5-4938-be6b-a0eb26759fee\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Shot</th>\n","      <th>Type</th>\n","      <th>Stroke</th>\n","      <th>Spin</th>\n","      <th>Speed (KM/H)</th>\n","      <th>Bounce (x)</th>\n","      <th>Bounce (y)</th>\n","      <th>Hit (x)</th>\n","      <th>Hit (y)</th>\n","      <th>Hit (z)</th>\n","      <th>Direction</th>\n","      <th>Result</th>\n","      <th>Classifier Confidence</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>91.792122</td>\n","      <td>0.641170</td>\n","      <td>9.733553</td>\n","      <td>0.378104</td>\n","      <td>14.079935</td>\n","      <td>1.302506</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>88.915466</td>\n","      <td>1.157406</td>\n","      <td>8.686537</td>\n","      <td>1.816429</td>\n","      <td>14.363003</td>\n","      <td>1.121761</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0.95</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>6</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>44.372288</td>\n","      <td>0.429961</td>\n","      <td>4.240902</td>\n","      <td>1.238550</td>\n","      <td>10.230923</td>\n","      <td>0.944325</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.90</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>81.016518</td>\n","      <td>1.950220</td>\n","      <td>8.712015</td>\n","      <td>1.939592</td>\n","      <td>12.365864</td>\n","      <td>0.998229</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0.33</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>63.699120</td>\n","      <td>2.967690</td>\n","      <td>8.343352</td>\n","      <td>4.322237</td>\n","      <td>12.893879</td>\n","      <td>1.032962</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0.77</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-db1c7bd5-11c5-4938-be6b-a0eb26759fee')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-db1c7bd5-11c5-4938-be6b-a0eb26759fee button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-db1c7bd5-11c5-4938-be6b-a0eb26759fee');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["df_marge = pd.concat([df_yoshizawa_classifier_confidence, df_kubo_classifier_confidence], axis=0).sort_values('index').reset_index(drop=True)"],"metadata":{"id":"hju06Ez-g9QE","executionInfo":{"status":"ok","timestamp":1680247256716,"user_tz":-540,"elapsed":361,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["df_marge.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":288},"id":"aUpMTKWsiU0I","executionInfo":{"status":"ok","timestamp":1680247261476,"user_tz":-540,"elapsed":122,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"aa78a330-99cd-4e5d-f765-39c2b976c422"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   index  Shot  Type  Stroke  Spin  Speed (KM/H)  Bounce (x)  Bounce (y)  \\\n","0      1     2     2       1     2     67.991951    1.540818    4.327014   \n","1      2     3     4       3     2     91.792122    0.641170    9.733553   \n","2      3     4     3       1     2     74.643082   -1.712300    7.789904   \n","3      4     5     0       3     2     88.915466    1.157406    8.686537   \n","4      5     6     0       1     2     72.283096   -0.719358    7.536090   \n","\n","    Hit (x)    Hit (y)   Hit (z)  Direction  Result  Classifier Confidence  \n","0  2.866704  12.576038  1.140431          3       1                   0.97  \n","1  0.378104  14.079935  1.302506          4       1                   1.00  \n","2 -2.544409  12.938649  0.938888          1       1                   0.97  \n","3  1.816429  14.363003  1.121761          4       1                   0.95  \n","4 -1.248331  13.851430  1.185831          1       1                   0.90  "],"text/html":["\n","  <div id=\"df-d4df1b14-d988-482e-abce-7b9070910d5f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Shot</th>\n","      <th>Type</th>\n","      <th>Stroke</th>\n","      <th>Spin</th>\n","      <th>Speed (KM/H)</th>\n","      <th>Bounce (x)</th>\n","      <th>Bounce (y)</th>\n","      <th>Hit (x)</th>\n","      <th>Hit (y)</th>\n","      <th>Hit (z)</th>\n","      <th>Direction</th>\n","      <th>Result</th>\n","      <th>Classifier Confidence</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>67.991951</td>\n","      <td>1.540818</td>\n","      <td>4.327014</td>\n","      <td>2.866704</td>\n","      <td>12.576038</td>\n","      <td>1.140431</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.97</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>91.792122</td>\n","      <td>0.641170</td>\n","      <td>9.733553</td>\n","      <td>0.378104</td>\n","      <td>14.079935</td>\n","      <td>1.302506</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>74.643082</td>\n","      <td>-1.712300</td>\n","      <td>7.789904</td>\n","      <td>-2.544409</td>\n","      <td>12.938649</td>\n","      <td>0.938888</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.97</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>88.915466</td>\n","      <td>1.157406</td>\n","      <td>8.686537</td>\n","      <td>1.816429</td>\n","      <td>14.363003</td>\n","      <td>1.121761</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0.95</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>72.283096</td>\n","      <td>-0.719358</td>\n","      <td>7.536090</td>\n","      <td>-1.248331</td>\n","      <td>13.851430</td>\n","      <td>1.185831</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.90</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d4df1b14-d988-482e-abce-7b9070910d5f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d4df1b14-d988-482e-abce-7b9070910d5f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d4df1b14-d988-482e-abce-7b9070910d5f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["df_marge['rally'] = ((df_marge['Shot'] - 2) == 0).cumsum()"],"metadata":{"id":"oRgfcH7cioYr","executionInfo":{"status":"ok","timestamp":1680247488859,"user_tz":-540,"elapsed":3,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["df_marge.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":288},"id":"NhxXAN1njhMW","executionInfo":{"status":"ok","timestamp":1680247884392,"user_tz":-540,"elapsed":15,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"7dff3042-5233-4a97-dbff-9be5f55f8484"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   index  Shot  Type  Stroke  Spin  Speed (KM/H)  Bounce (x)  Bounce (y)  \\\n","0      1     2     2       1     2     67.991951    1.540818    4.327014   \n","1      2     3     4       3     2     91.792122    0.641170    9.733553   \n","2      3     4     3       1     2     74.643082   -1.712300    7.789904   \n","3      4     5     0       3     2     88.915466    1.157406    8.686537   \n","4      5     6     0       1     2     72.283096   -0.719358    7.536090   \n","\n","    Hit (x)    Hit (y)   Hit (z)  Direction  Result  Classifier Confidence  \\\n","0  2.866704  12.576038  1.140431          3       1                   0.97   \n","1  0.378104  14.079935  1.302506          4       1                   1.00   \n","2 -2.544409  12.938649  0.938888          1       1                   0.97   \n","3  1.816429  14.363003  1.121761          4       1                   0.95   \n","4 -1.248331  13.851430  1.185831          1       1                   0.90   \n","\n","   rally  \n","0      1  \n","1      1  \n","2      1  \n","3      1  \n","4      1  "],"text/html":["\n","  <div id=\"df-ff89a978-840d-4e21-af33-ea43db454ad8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Shot</th>\n","      <th>Type</th>\n","      <th>Stroke</th>\n","      <th>Spin</th>\n","      <th>Speed (KM/H)</th>\n","      <th>Bounce (x)</th>\n","      <th>Bounce (y)</th>\n","      <th>Hit (x)</th>\n","      <th>Hit (y)</th>\n","      <th>Hit (z)</th>\n","      <th>Direction</th>\n","      <th>Result</th>\n","      <th>Classifier Confidence</th>\n","      <th>rally</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>67.991951</td>\n","      <td>1.540818</td>\n","      <td>4.327014</td>\n","      <td>2.866704</td>\n","      <td>12.576038</td>\n","      <td>1.140431</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.97</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>91.792122</td>\n","      <td>0.641170</td>\n","      <td>9.733553</td>\n","      <td>0.378104</td>\n","      <td>14.079935</td>\n","      <td>1.302506</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1.00</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>74.643082</td>\n","      <td>-1.712300</td>\n","      <td>7.789904</td>\n","      <td>-2.544409</td>\n","      <td>12.938649</td>\n","      <td>0.938888</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.97</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>88.915466</td>\n","      <td>1.157406</td>\n","      <td>8.686537</td>\n","      <td>1.816429</td>\n","      <td>14.363003</td>\n","      <td>1.121761</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0.95</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>72.283096</td>\n","      <td>-0.719358</td>\n","      <td>7.536090</td>\n","      <td>-1.248331</td>\n","      <td>13.851430</td>\n","      <td>1.185831</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.90</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff89a978-840d-4e21-af33-ea43db454ad8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ff89a978-840d-4e21-af33-ea43db454ad8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ff89a978-840d-4e21-af33-ea43db454ad8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# ラリーごとにグループ化する\n","grouped = df_marge.groupby(\"rally\")\n","\n","# 各グループのClassifier Confidenceの推移を示すグラフを描画する\n","fig, ax = plt.subplots()\n","for name, group in grouped:\n","    ax.plot(group.index, group[\"Classifier Confidence\"], label=f\"Rally {name}\")\n","ax.legend()\n","plt.show()"],"metadata":{"id":"vj77PG3hjiDK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# ラリー番号を指定\n","rally_num = 1\n","\n","# 指定したラリーに属する行のみを抽出\n","rally_df = df_marge[df_marge[\"rally\"] == rally_num]\n","\n","# Classifier Confidenceの推移をグラフで表示\n","plt.plot(rally_df[\"Classifier Confidence\"])\n","plt.title(f\"Classifier Confidence for Rally {rally_num}\")\n","plt.xlabel(\"Shot\")\n","plt.ylabel(\"Classifier Confidence\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"Tv0ik454kpyN","executionInfo":{"status":"ok","timestamp":1680247889110,"user_tz":-540,"elapsed":20,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"ab7b1a0c-1ad2-43f3-c0be-b4c98ee292a0"},"execution_count":58,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"xdThZfa5kT9j"},"execution_count":null,"outputs":[]}]}