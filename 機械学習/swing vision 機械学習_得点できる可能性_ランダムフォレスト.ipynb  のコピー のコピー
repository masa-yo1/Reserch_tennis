{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"18e1VZR5GqCR0dMpbaVvz79sm2jHWNCmw","timestamp":1682297813307},{"file_id":"1m3dgePVmSX_o3tYJTkVGvON6d_7QdN6j","timestamp":1680678728556},{"file_id":"1P_KKwicon6qVxgVDRct2APbGYWoLe1yc","timestamp":1680247928446},{"file_id":"1ZXTQQQIUpW4sMRqxsA0zKAdBuEgmx79b","timestamp":1680244974810},{"file_id":"1hIojudw6qTm_OyMK3DQucLa0F3cXSGyf","timestamp":1679919114338}],"authorship_tag":"ABX9TyMaMIS/+dCD1y+Qbr90E84V"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","gpuClass":"premium"},"cells":[{"cell_type":"code","execution_count":17,"metadata":{"id":"3i88sonlSskC","executionInfo":{"status":"ok","timestamp":1682298060640,"user_tz":-540,"elapsed":3,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"iVcqz9hYTD8z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682298063542,"user_tz":-540,"elapsed":2439,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"0aa67d6e-6c7b-4b8d-f532-c623d4b3e716"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["cd /content/drive/MyDrive/tennis_data/match_2023_01_10"],"metadata":{"id":"wORIyYqBUTVd","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682298063543,"user_tz":-540,"elapsed":34,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"30c3cbc9-4366-4788-b925-1e98f05b3dbc"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/tennis_data/match_2023_01_10\n"]}]},{"cell_type":"code","source":["df=pd.read_csv('vs_kubo_1.csv')\n","condition = df['Stroke'] == 'Feed'\n","subset = df[condition]\n","df = df.drop(subset.index)\n","len(df)"],"metadata":{"id":"tvdaEkfATPSZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682298063544,"user_tz":-540,"elapsed":29,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"6199c453-0b3d-4846-d983-29449fbbf79e"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["733"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["def in_to_1_outnet_to_0(val):\n","    if val == 'In':\n","        return 1\n","    else:\n","        return 0"],"metadata":{"id":"BR8WikQtaQxR","executionInfo":{"status":"ok","timestamp":1682298063544,"user_tz":-540,"elapsed":26,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["df['Result'] = df['Result'].apply(in_to_1_outnet_to_0)\n","df['Bounce (y)'] = abs(df['Bounce (y)'] -11.885)   #深さをネットからの距離に\n","df['Hit (y)'] = abs(df['Hit (y)'] -11.885)"],"metadata":{"id":"pxyXhtkOB6bc","executionInfo":{"status":"ok","timestamp":1682298063545,"user_tz":-540,"elapsed":26,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["#Shotが1に戻るまでを1ラリーとして、試合を通してのラリー数を書いた列を追加するコードを書いて下さい。\n","#ただし、Typeがsecond_serveの時だけは、ラリー数をそのままにして下さい\n","rally_count = 0\n","prev_shot = 1\n","rally_list = []\n","for index, row in df.iterrows():\n","    if row['Type'] != 'second_serve':\n","        if row['Shot'] == 1:\n","            rally_count += 1\n","        rally_list.append(rally_count)\n","        prev_shot = row['Shot']\n","    else:\n","        rally_list.append(rally_list[-1])\n","\n","df['Rally'] = rally_list"],"metadata":{"id":"S9B4p_8cn14m","executionInfo":{"status":"ok","timestamp":1682298063545,"user_tz":-540,"elapsed":26,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["pd.set_option('display.max_columns', None)\n","pd.set_option('display.max_rows', None)"],"metadata":{"id":"of5HHFMfmKtF","executionInfo":{"status":"ok","timestamp":1682298063545,"user_tz":-540,"elapsed":25,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"id":"vGe5RLF6CJMm","colab":{"base_uri":"https://localhost:8080/","height":374},"executionInfo":{"status":"ok","timestamp":1682298063546,"user_tz":-540,"elapsed":26,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"7ba32069-906f-4ad8-8d6b-ebfab7830617"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                Player  Shot             Type    Stroke     Spin  \\\n","0                龍哉 久保     1      first_serve     Serve     Flat   \n","1  Yoshizawa Masatsugu     2           return  Backhand  Topspin   \n","2                龍哉 久保     3   serve_plus_one  Forehand  Topspin   \n","3  Yoshizawa Masatsugu     4  return_plus_one  Backhand  Topspin   \n","4                龍哉 久保     5          in_play  Forehand  Topspin   \n","\n","   Speed (KM/H)  Point  Game  Set  Bounce Depth Bounce Zone Bounce Side  \\\n","0     98.436745      1     0    0   service_box       deuce        near   \n","1     67.991951      1     0    0  no_mans_land          ad         far   \n","2     91.792122      1     0    0  no_mans_land          ad        near   \n","3     74.643082      1     0    0  no_mans_land          ad         far   \n","4     88.915466      1     0    0  no_mans_land          ad        near   \n","\n","   Bounce (x)  Bounce (y)     Hit Depth Hit Zone Hit Side   Hit (x)  \\\n","0    1.540818    4.327014  no_mans_land    deuce      far -0.784507   \n","1    0.641170    9.733553           out    deuce     near  2.866704   \n","2   -1.712300    7.789904           out       ad      far  0.378104   \n","3    1.157406    8.686537           out       ad     near -2.544409   \n","4   -0.719358    7.536090           out       ad      far  1.816429   \n","\n","     Hit (y)   Hit (z)    Direction  Result  Favorited Start Time  Video Time  \\\n","0  11.792910  2.704495   down the T       1      False   11:46:11       10.20   \n","1  12.576038  1.140431    inside in       1      False   11:46:12       11.40   \n","2  14.079935  1.302506   inside out       1      False   11:46:14       13.13   \n","3  12.938649  0.938888  cross court       1      False   11:46:15       14.51   \n","4  14.363003  1.121761   inside out       1      False   11:46:17       16.15   \n","\n","   Rally  \n","0      1  \n","1      1  \n","2      1  \n","3      1  \n","4      1  "],"text/html":["\n","  <div id=\"df-3cb46708-a326-4969-9033-32213febd71e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Player</th>\n","      <th>Shot</th>\n","      <th>Type</th>\n","      <th>Stroke</th>\n","      <th>Spin</th>\n","      <th>Speed (KM/H)</th>\n","      <th>Point</th>\n","      <th>Game</th>\n","      <th>Set</th>\n","      <th>Bounce Depth</th>\n","      <th>Bounce Zone</th>\n","      <th>Bounce Side</th>\n","      <th>Bounce (x)</th>\n","      <th>Bounce (y)</th>\n","      <th>Hit Depth</th>\n","      <th>Hit Zone</th>\n","      <th>Hit Side</th>\n","      <th>Hit (x)</th>\n","      <th>Hit (y)</th>\n","      <th>Hit (z)</th>\n","      <th>Direction</th>\n","      <th>Result</th>\n","      <th>Favorited</th>\n","      <th>Start Time</th>\n","      <th>Video Time</th>\n","      <th>Rally</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>龍哉 久保</td>\n","      <td>1</td>\n","      <td>first_serve</td>\n","      <td>Serve</td>\n","      <td>Flat</td>\n","      <td>98.436745</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>service_box</td>\n","      <td>deuce</td>\n","      <td>near</td>\n","      <td>1.540818</td>\n","      <td>4.327014</td>\n","      <td>no_mans_land</td>\n","      <td>deuce</td>\n","      <td>far</td>\n","      <td>-0.784507</td>\n","      <td>11.792910</td>\n","      <td>2.704495</td>\n","      <td>down the T</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>11:46:11</td>\n","      <td>10.20</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Yoshizawa Masatsugu</td>\n","      <td>2</td>\n","      <td>return</td>\n","      <td>Backhand</td>\n","      <td>Topspin</td>\n","      <td>67.991951</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>no_mans_land</td>\n","      <td>ad</td>\n","      <td>far</td>\n","      <td>0.641170</td>\n","      <td>9.733553</td>\n","      <td>out</td>\n","      <td>deuce</td>\n","      <td>near</td>\n","      <td>2.866704</td>\n","      <td>12.576038</td>\n","      <td>1.140431</td>\n","      <td>inside in</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>11:46:12</td>\n","      <td>11.40</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>龍哉 久保</td>\n","      <td>3</td>\n","      <td>serve_plus_one</td>\n","      <td>Forehand</td>\n","      <td>Topspin</td>\n","      <td>91.792122</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>no_mans_land</td>\n","      <td>ad</td>\n","      <td>near</td>\n","      <td>-1.712300</td>\n","      <td>7.789904</td>\n","      <td>out</td>\n","      <td>ad</td>\n","      <td>far</td>\n","      <td>0.378104</td>\n","      <td>14.079935</td>\n","      <td>1.302506</td>\n","      <td>inside out</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>11:46:14</td>\n","      <td>13.13</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Yoshizawa Masatsugu</td>\n","      <td>4</td>\n","      <td>return_plus_one</td>\n","      <td>Backhand</td>\n","      <td>Topspin</td>\n","      <td>74.643082</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>no_mans_land</td>\n","      <td>ad</td>\n","      <td>far</td>\n","      <td>1.157406</td>\n","      <td>8.686537</td>\n","      <td>out</td>\n","      <td>ad</td>\n","      <td>near</td>\n","      <td>-2.544409</td>\n","      <td>12.938649</td>\n","      <td>0.938888</td>\n","      <td>cross court</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>11:46:15</td>\n","      <td>14.51</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>龍哉 久保</td>\n","      <td>5</td>\n","      <td>in_play</td>\n","      <td>Forehand</td>\n","      <td>Topspin</td>\n","      <td>88.915466</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>no_mans_land</td>\n","      <td>ad</td>\n","      <td>near</td>\n","      <td>-0.719358</td>\n","      <td>7.536090</td>\n","      <td>out</td>\n","      <td>ad</td>\n","      <td>far</td>\n","      <td>1.816429</td>\n","      <td>14.363003</td>\n","      <td>1.121761</td>\n","      <td>inside out</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>11:46:17</td>\n","      <td>16.15</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3cb46708-a326-4969-9033-32213febd71e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3cb46708-a326-4969-9033-32213febd71e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3cb46708-a326-4969-9033-32213febd71e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["# ラリー番号ごとにループを回す\n","for rally_num in range(1, df['Rally'].max() + 1):\n","    # ラリー番号が一致する行を抽出\n","    rally_df = df[df['Rally'] == rally_num]\n","    \n","    # ラリーの最後の行を抽出\n","    last_shot = rally_df.tail(1)\n","    \n","    # Point acquisitionを1にする条件に合致するかを判定\n","    if last_shot['Player'].values[0] == 'Yoshizawa Masatsugu' and last_shot['Result'].values[0] == 1:\n","        point_acquisition = 1\n","    elif last_shot['Player'].values[0] == '龍哉 久保' and last_shot['Result'].values[0] == 0:\n","        point_acquisition = 1\n","    else:\n","        point_acquisition = 0\n","    \n","    # ラリー全体に値をセット\n","    df.loc[df['Rally'] == rally_num, 'Point acquisition'] = point_acquisition\n"],"metadata":{"id":"NYsFP8ySCkDR","executionInfo":{"status":"ok","timestamp":1682298063546,"user_tz":-540,"elapsed":24,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["#'Bounce (x)' 列と 'Bounce (y)' 一つずらしたdfを作成\n","df['Bounce (x)'] = df['Bounce (x)'].shift()\n","df['Bounce (y)'] = df['Bounce (y)'].shift()\n","#サーブとリターンの行は削除\n","df = df[df[\"Stroke\"] != \"Serve\"]\n","df = df[df[\"Type\"] != \"return\"]\n","df_kubo = df[df['Player'] =='龍哉 久保']\n","df_yoshizawa = df[df['Player'] == 'Yoshizawa Masatsugu']"],"metadata":{"id":"8N-30xVUE3SV","executionInfo":{"status":"ok","timestamp":1682298063547,"user_tz":-540,"elapsed":25,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["df_yoshizawa = df_yoshizawa.drop(['Player','Point','Game', 'Set', 'Hit Depth', 'Favorited', 'Start Time', 'Video Time','Bounce Depth', 'Bounce Zone', 'Bounce Side', 'Hit Zone', 'Hit Side' ,'Result'], axis=1)\n","df_kubo = df_kubo.drop(['Player','Point','Game', 'Set', 'Hit Depth', 'Favorited', 'Start Time', 'Video Time','Bounce Depth', 'Bounce Zone', 'Bounce Side', 'Hit Zone', 'Hit Side' ,'Result'], axis=1)"],"metadata":{"id":"gfifaG4imf0k","executionInfo":{"status":"ok","timestamp":1682298063547,"user_tz":-540,"elapsed":24,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["import warnings\n","# 警告文を非表示\n","warnings.simplefilter('ignore')\n","\n","from sklearn.preprocessing import LabelEncoder\n","\n","# ラベルエンコーディングを行うために、LabelEncoderクラスをインスタンス化（利用するためのおまじないだとお考えください）\n","enc = LabelEncoder() # encはencoderの省略名称である変数です。\n","# fit()によりTypeカラムに対してラベルエンコーディングを行います。\n","label_encoder = enc.fit(df_yoshizawa[[\"Type\"]])\n","\n","# カラムの要素を取得\n","# transform()で数値へ変換\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","#print('Integer classes:',integer_classes)\n","\n","df_yoshizawa[\"Type\"] = label_encoder.transform(df_yoshizawa[[\"Type\"]])\n","\n","#print(df_yoshizawa[[\"Type\"]]) #'first_serve' 'in_play' 'none' 'return' 'return_plus_one' 'second_serve''serve' 'serve_plus_one'] [0 1 2 3 4 5 6 7] に\n","\n","#Stroke\n","\n","label_encoder = enc.fit(df_yoshizawa[[\"Stroke\"]])\n","\n","# カラムの要素を取得\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","\n","df_yoshizawa[\"Stroke\"] = label_encoder.transform(df_yoshizawa[[\"Stroke\"]])\n","\n","#Spin Categorical classes: ['Flat' 'Kick' 'Slice' 'Topspin'] Integer classes: [0 1 2 3]\n","\n","label_encoder = enc.fit(df_yoshizawa[[\"Spin\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_yoshizawa[\"Spin\"] = label_encoder.transform(df_yoshizawa[[\"Spin\"]])\n","\n","#Direction Categorical classes: ['---' 'cross court' 'down the T' 'down the line' 'inside in' 'inside out''out wide']Integer classes: [0 1 2 3 4 5 6]\n","label_encoder = enc.fit(df_yoshizawa[[\"Direction\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_yoshizawa[\"Direction\"] = label_encoder.transform(df_yoshizawa[[\"Direction\"]])"],"metadata":{"id":"9nlkHbewoC4H","executionInfo":{"status":"ok","timestamp":1682298063548,"user_tz":-540,"elapsed":25,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["import warnings\n","# 警告文を非表示\n","warnings.simplefilter('ignore')\n","\n","from sklearn.preprocessing import LabelEncoder\n","\n","# ラベルエンコーディングを行うために、LabelEncoderクラスをインスタンス化（利用するためのおまじないだとお考えください）\n","enc = LabelEncoder() # encはencoderの省略名称である変数です。\n","# fit()によりTypeカラムに対してラベルエンコーディングを行います。\n","label_encoder = enc.fit(df_kubo[[\"Type\"]])\n","\n","# カラムの要素を取得\n","# transform()で数値へ変換\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","#print('Integer classes:',integer_classes)\n","\n","df_kubo[\"Type\"] = label_encoder.transform(df_kubo[[\"Type\"]])\n","\n","#print(df_kubo[[\"Type\"]]) #'first_serve' 'in_play' 'none' 'return' 'return_plus_one' 'second_serve''serve' 'serve_plus_one'] [0 1 2 3 4 5 6 7] に\n","\n","#Stroke\n","\n","label_encoder = enc.fit(df_kubo[[\"Stroke\"]])\n","\n","# カラムの要素を取得\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","\n","df_kubo[\"Stroke\"] = label_encoder.transform(df_kubo[[\"Stroke\"]])\n","\n","#Spin Categorical classes: ['Flat' 'Kick' 'Slice' 'Topspin'] Integer classes: [0 1 2 3]\n","\n","label_encoder = enc.fit(df_kubo[[\"Spin\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_kubo[\"Spin\"] = label_encoder.transform(df_kubo[[\"Spin\"]])\n","\n","#Direction Categorical classes: ['---' 'cross court' 'down the T' 'down the line' 'inside in' 'inside out''out wide']Integer classes: [0 1 2 3 4 5 6]\n","label_encoder = enc.fit(df_kubo[[\"Direction\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_kubo[\"Direction\"] = label_encoder.transform(df_kubo[[\"Direction\"]])"],"metadata":{"id":"zIWvOJjUegOm","executionInfo":{"status":"ok","timestamp":1682298063548,"user_tz":-540,"elapsed":24,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["# 必要なライブラリをインポートする\n","import pandas as pd\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import train_test_split\n","from sklearn.ensemble import RandomForestClassifier\n","\n","\n","data = df_yoshizawa\n","\n","# 特徴量と目的変数を分ける\n","X = data.drop('Point acquisition', axis=1)\n","y = data['Point acquisition']\n","\n","# 訓練用データとテスト用データに分割する\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=12)\n","\n","# モデルを訓練する\n","model = RandomForestClassifier()\n","model.fit(X_train, y_train)\n","\n","\n","# 各特徴量の重みを取得\n","importances = model.feature_importances_\n","# 特徴量の重要度を降順にソートする\n","indices = np.argsort(importances)[::-1]\n","\n","\n","# 特徴量の名前を取得する\n","feature_names = X_train.columns.values\n","\n","# 特徴量の寄与率を出力する\n","for i in range(len(feature_names)):\n","    print(f\"{feature_names[indices[i]]}: {importances[indices[i]]}\")\n","\n","\n","\n","# テスト用データを用いてモデルの精度を評価する\n","y_pred = model.predict(X_test)\n","# モデルの評価\n","score = model.score(X_test, y_test)\n","print('Accuracy:', score)\n"],"metadata":{"id":"3lvuNwHPlRj5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682298085197,"user_tz":-540,"elapsed":6,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"0197706b-0d16-4d5f-ff1b-ae664a89a497"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["Rally: 0.1670285582761061\n","Speed (KM/H): 0.11911052005178446\n","Hit (z): 0.11021500352503563\n","Bounce (y): 0.10759830931259665\n","Bounce (x): 0.10577928119878895\n","Hit (x): 0.10393054143171224\n","Hit (y): 0.0970898310757468\n","Shot: 0.0774995928051425\n","Type: 0.031547720517295826\n","Spin: 0.02898817296199093\n","Stroke: 0.02776379239511712\n","Direction: 0.02344867644868266\n","Accuracy: 0.6046511627906976\n"]}]},{"cell_type":"code","source":["# データのクラスの確率を予測する\n","y_proba = model.predict_proba(X)\n","\n","# データ対する予測確率を出力する\n","for i in range(len(y)):\n","    print(f\"Sample {i}: Class 0: {y_proba[i][0]}, Class 1: {y_proba[i][1]}\")"],"metadata":{"id":"BX5jDVwBZv1m","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682298089201,"user_tz":-540,"elapsed":713,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"d9ca75f1-d278-4774-8cc5-693bcddbe02d"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["Sample 0: Class 0: 0.22, Class 1: 0.78\n","Sample 1: Class 0: 0.21, Class 1: 0.79\n","Sample 2: Class 0: 0.06, Class 1: 0.94\n","Sample 3: Class 0: 0.77, Class 1: 0.23\n","Sample 4: Class 0: 0.77, Class 1: 0.23\n","Sample 5: Class 0: 0.74, Class 1: 0.26\n","Sample 6: Class 0: 0.47, Class 1: 0.53\n","Sample 7: Class 0: 0.58, Class 1: 0.42\n","Sample 8: Class 0: 0.87, Class 1: 0.13\n","Sample 9: Class 0: 0.82, Class 1: 0.18\n","Sample 10: Class 0: 0.23, Class 1: 0.77\n","Sample 11: Class 0: 0.35, Class 1: 0.65\n","Sample 12: Class 0: 0.24, Class 1: 0.76\n","Sample 13: Class 0: 0.18, Class 1: 0.82\n","Sample 14: Class 0: 0.12, Class 1: 0.88\n","Sample 15: Class 0: 0.76, Class 1: 0.24\n","Sample 16: Class 0: 0.44, Class 1: 0.56\n","Sample 17: Class 0: 0.83, Class 1: 0.17\n","Sample 18: Class 0: 0.76, Class 1: 0.24\n","Sample 19: Class 0: 0.18, Class 1: 0.82\n","Sample 20: Class 0: 0.1, Class 1: 0.9\n","Sample 21: Class 0: 0.57, Class 1: 0.43\n","Sample 22: Class 0: 0.19, Class 1: 0.81\n","Sample 23: Class 0: 0.48, Class 1: 0.52\n","Sample 24: Class 0: 0.2, Class 1: 0.8\n","Sample 25: Class 0: 0.21, Class 1: 0.79\n","Sample 26: Class 0: 0.88, Class 1: 0.12\n","Sample 27: Class 0: 0.81, Class 1: 0.19\n","Sample 28: Class 0: 0.9, Class 1: 0.1\n","Sample 29: Class 0: 0.57, Class 1: 0.43\n","Sample 30: Class 0: 0.86, Class 1: 0.14\n","Sample 31: Class 0: 0.67, Class 1: 0.33\n","Sample 32: Class 0: 0.55, Class 1: 0.45\n","Sample 33: Class 0: 0.84, Class 1: 0.16\n","Sample 34: Class 0: 0.78, Class 1: 0.22\n","Sample 35: Class 0: 0.81, Class 1: 0.19\n","Sample 36: Class 0: 0.86, Class 1: 0.14\n","Sample 37: Class 0: 0.8, Class 1: 0.2\n","Sample 38: Class 0: 0.32, Class 1: 0.68\n","Sample 39: Class 0: 0.24, Class 1: 0.76\n","Sample 40: Class 0: 0.11, Class 1: 0.89\n","Sample 41: Class 0: 0.22, Class 1: 0.78\n","Sample 42: Class 0: 0.85, Class 1: 0.15\n","Sample 43: Class 0: 0.86, Class 1: 0.14\n","Sample 44: Class 0: 0.75, Class 1: 0.25\n","Sample 45: Class 0: 0.84, Class 1: 0.16\n","Sample 46: Class 0: 0.22, Class 1: 0.78\n","Sample 47: Class 0: 0.2, Class 1: 0.8\n","Sample 48: Class 0: 0.26, Class 1: 0.74\n","Sample 49: Class 0: 0.14, Class 1: 0.86\n","Sample 50: Class 0: 0.13, Class 1: 0.87\n","Sample 51: Class 0: 0.16, Class 1: 0.84\n","Sample 52: Class 0: 0.8, Class 1: 0.2\n","Sample 53: Class 0: 0.76, Class 1: 0.24\n","Sample 54: Class 0: 0.8, Class 1: 0.2\n","Sample 55: Class 0: 0.45, Class 1: 0.55\n","Sample 56: Class 0: 0.07, Class 1: 0.93\n","Sample 57: Class 0: 0.87, Class 1: 0.13\n","Sample 58: Class 0: 0.84, Class 1: 0.16\n","Sample 59: Class 0: 0.86, Class 1: 0.14\n","Sample 60: Class 0: 0.9, Class 1: 0.1\n","Sample 61: Class 0: 0.31, Class 1: 0.69\n","Sample 62: Class 0: 0.24, Class 1: 0.76\n","Sample 63: Class 0: 0.6, Class 1: 0.4\n","Sample 64: Class 0: 0.86, Class 1: 0.14\n","Sample 65: Class 0: 0.78, Class 1: 0.22\n","Sample 66: Class 0: 0.82, Class 1: 0.18\n","Sample 67: Class 0: 0.84, Class 1: 0.16\n","Sample 68: Class 0: 0.78, Class 1: 0.22\n","Sample 69: Class 0: 0.7, Class 1: 0.3\n","Sample 70: Class 0: 0.87, Class 1: 0.13\n","Sample 71: Class 0: 0.2, Class 1: 0.8\n","Sample 72: Class 0: 0.2, Class 1: 0.8\n","Sample 73: Class 0: 0.8, Class 1: 0.2\n","Sample 74: Class 0: 0.86, Class 1: 0.14\n","Sample 75: Class 0: 0.82, Class 1: 0.18\n","Sample 76: Class 0: 0.85, Class 1: 0.15\n","Sample 77: Class 0: 0.85, Class 1: 0.15\n","Sample 78: Class 0: 0.84, Class 1: 0.16\n","Sample 79: Class 0: 0.26, Class 1: 0.74\n","Sample 80: Class 0: 0.26, Class 1: 0.74\n","Sample 81: Class 0: 0.17, Class 1: 0.83\n","Sample 82: Class 0: 0.7, Class 1: 0.3\n","Sample 83: Class 0: 0.87, Class 1: 0.13\n","Sample 84: Class 0: 0.76, Class 1: 0.24\n","Sample 85: Class 0: 0.43, Class 1: 0.57\n","Sample 86: Class 0: 0.47, Class 1: 0.53\n","Sample 87: Class 0: 0.31, Class 1: 0.69\n","Sample 88: Class 0: 0.1, Class 1: 0.9\n","Sample 89: Class 0: 0.12, Class 1: 0.88\n","Sample 90: Class 0: 0.3, Class 1: 0.7\n","Sample 91: Class 0: 0.15, Class 1: 0.85\n","Sample 92: Class 0: 0.1, Class 1: 0.9\n","Sample 93: Class 0: 0.28, Class 1: 0.72\n","Sample 94: Class 0: 0.05, Class 1: 0.95\n","Sample 95: Class 0: 0.16, Class 1: 0.84\n","Sample 96: Class 0: 0.21, Class 1: 0.79\n","Sample 97: Class 0: 0.15, Class 1: 0.85\n","Sample 98: Class 0: 0.21, Class 1: 0.79\n","Sample 99: Class 0: 0.21, Class 1: 0.79\n","Sample 100: Class 0: 0.12, Class 1: 0.88\n","Sample 101: Class 0: 0.18, Class 1: 0.82\n","Sample 102: Class 0: 0.2, Class 1: 0.8\n","Sample 103: Class 0: 0.67, Class 1: 0.33\n","Sample 104: Class 0: 0.77, Class 1: 0.23\n","Sample 105: Class 0: 0.8, Class 1: 0.2\n","Sample 106: Class 0: 0.1, Class 1: 0.9\n","Sample 107: Class 0: 0.16, Class 1: 0.84\n","Sample 108: Class 0: 0.21, Class 1: 0.79\n","Sample 109: Class 0: 0.08, Class 1: 0.92\n","Sample 110: Class 0: 0.03, Class 1: 0.97\n","Sample 111: Class 0: 0.23, Class 1: 0.77\n","Sample 112: Class 0: 0.11, Class 1: 0.89\n","Sample 113: Class 0: 0.55, Class 1: 0.45\n","Sample 114: Class 0: 0.8, Class 1: 0.2\n","Sample 115: Class 0: 0.76, Class 1: 0.24\n","Sample 116: Class 0: 0.82, Class 1: 0.18\n","Sample 117: Class 0: 0.2, Class 1: 0.8\n","Sample 118: Class 0: 0.11, Class 1: 0.89\n","Sample 119: Class 0: 0.05, Class 1: 0.95\n","Sample 120: Class 0: 0.13, Class 1: 0.87\n","Sample 121: Class 0: 0.16, Class 1: 0.84\n","Sample 122: Class 0: 0.3, Class 1: 0.7\n","Sample 123: Class 0: 0.81, Class 1: 0.19\n","Sample 124: Class 0: 0.3, Class 1: 0.7\n","Sample 125: Class 0: 0.23, Class 1: 0.77\n","Sample 126: Class 0: 0.21, Class 1: 0.79\n","Sample 127: Class 0: 0.59, Class 1: 0.41\n","Sample 128: Class 0: 0.72, Class 1: 0.28\n","Sample 129: Class 0: 0.26, Class 1: 0.74\n","Sample 130: Class 0: 0.28, Class 1: 0.72\n","Sample 131: Class 0: 0.08, Class 1: 0.92\n","Sample 132: Class 0: 0.13, Class 1: 0.87\n","Sample 133: Class 0: 0.19, Class 1: 0.81\n","Sample 134: Class 0: 0.16, Class 1: 0.84\n","Sample 135: Class 0: 0.1, Class 1: 0.9\n","Sample 136: Class 0: 0.43, Class 1: 0.57\n","Sample 137: Class 0: 0.16, Class 1: 0.84\n","Sample 138: Class 0: 0.4, Class 1: 0.6\n","Sample 139: Class 0: 0.33, Class 1: 0.67\n","Sample 140: Class 0: 0.41, Class 1: 0.59\n","Sample 141: Class 0: 0.26, Class 1: 0.74\n","Sample 142: Class 0: 0.39, Class 1: 0.61\n","Sample 143: Class 0: 0.17, Class 1: 0.83\n","Sample 144: Class 0: 0.09, Class 1: 0.91\n","Sample 145: Class 0: 0.07, Class 1: 0.93\n","Sample 146: Class 0: 0.14, Class 1: 0.86\n","Sample 147: Class 0: 0.74, Class 1: 0.26\n","Sample 148: Class 0: 0.82, Class 1: 0.18\n","Sample 149: Class 0: 0.3, Class 1: 0.7\n","Sample 150: Class 0: 0.77, Class 1: 0.23\n","Sample 151: Class 0: 0.87, Class 1: 0.13\n","Sample 152: Class 0: 0.86, Class 1: 0.14\n","Sample 153: Class 0: 0.83, Class 1: 0.17\n","Sample 154: Class 0: 0.85, Class 1: 0.15\n","Sample 155: Class 0: 0.89, Class 1: 0.11\n","Sample 156: Class 0: 0.74, Class 1: 0.26\n","Sample 157: Class 0: 0.62, Class 1: 0.38\n","Sample 158: Class 0: 0.82, Class 1: 0.18\n","Sample 159: Class 0: 0.86, Class 1: 0.14\n","Sample 160: Class 0: 0.77, Class 1: 0.23\n","Sample 161: Class 0: 0.81, Class 1: 0.19\n","Sample 162: Class 0: 0.15, Class 1: 0.85\n","Sample 163: Class 0: 0.16, Class 1: 0.84\n","Sample 164: Class 0: 0.83, Class 1: 0.17\n","Sample 165: Class 0: 0.13, Class 1: 0.87\n","Sample 166: Class 0: 0.31, Class 1: 0.69\n","Sample 167: Class 0: 0.11, Class 1: 0.89\n","Sample 168: Class 0: 0.03, Class 1: 0.97\n","Sample 169: Class 0: 0.05, Class 1: 0.95\n","Sample 170: Class 0: 0.07, Class 1: 0.93\n","Sample 171: Class 0: 0.24, Class 1: 0.76\n","Sample 172: Class 0: 0.22, Class 1: 0.78\n","Sample 173: Class 0: 0.13, Class 1: 0.87\n","Sample 174: Class 0: 0.2, Class 1: 0.8\n","Sample 175: Class 0: 0.4, Class 1: 0.6\n","Sample 176: Class 0: 0.16, Class 1: 0.84\n","Sample 177: Class 0: 0.05, Class 1: 0.95\n","Sample 178: Class 0: 0.11, Class 1: 0.89\n","Sample 179: Class 0: 0.19, Class 1: 0.81\n","Sample 180: Class 0: 0.17, Class 1: 0.83\n","Sample 181: Class 0: 0.09, Class 1: 0.91\n","Sample 182: Class 0: 0.18, Class 1: 0.82\n","Sample 183: Class 0: 0.24, Class 1: 0.76\n","Sample 184: Class 0: 0.21, Class 1: 0.79\n","Sample 185: Class 0: 0.13, Class 1: 0.87\n","Sample 186: Class 0: 0.06, Class 1: 0.94\n","Sample 187: Class 0: 0.73, Class 1: 0.27\n","Sample 188: Class 0: 0.77, Class 1: 0.23\n","Sample 189: Class 0: 0.82, Class 1: 0.18\n","Sample 190: Class 0: 0.81, Class 1: 0.19\n","Sample 191: Class 0: 0.3, Class 1: 0.7\n","Sample 192: Class 0: 0.87, Class 1: 0.13\n","Sample 193: Class 0: 0.8, Class 1: 0.2\n","Sample 194: Class 0: 0.76, Class 1: 0.24\n","Sample 195: Class 0: 0.24, Class 1: 0.76\n","Sample 196: Class 0: 0.58, Class 1: 0.42\n","Sample 197: Class 0: 0.83, Class 1: 0.17\n","Sample 198: Class 0: 0.77, Class 1: 0.23\n","Sample 199: Class 0: 0.87, Class 1: 0.13\n","Sample 200: Class 0: 0.81, Class 1: 0.19\n","Sample 201: Class 0: 0.79, Class 1: 0.21\n","Sample 202: Class 0: 0.22, Class 1: 0.78\n","Sample 203: Class 0: 0.68, Class 1: 0.32\n","Sample 204: Class 0: 0.89, Class 1: 0.11\n","Sample 205: Class 0: 0.17, Class 1: 0.83\n","Sample 206: Class 0: 0.37, Class 1: 0.63\n","Sample 207: Class 0: 0.15, Class 1: 0.85\n","Sample 208: Class 0: 0.24, Class 1: 0.76\n","Sample 209: Class 0: 0.22, Class 1: 0.78\n","Sample 210: Class 0: 0.45, Class 1: 0.55\n"]}]},{"cell_type":"code","source":["df_yoshizawa_classifier_confidence = df_yoshizawa.copy()\n","new_col_name = \"Point acquisition rate\"\n","# テスト用データのクラスの確率を予測する\n","y_proba = model.predict_proba(X)\n","# 新しい列をデータフレームに追加する\n","df_yoshizawa_classifier_confidence[new_col_name] = y_proba[:, 1]\n","df_yoshizawa_classifier_confidence.head()"],"metadata":{"id":"2zWhl0fscrsN","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1682298094315,"user_tz":-540,"elapsed":691,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"6934507f-11b2-47fc-a860-033fd4090b40"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Shot  Type  Stroke  Spin  Speed (KM/H)  Bounce (x)  Bounce (y)   Hit (x)  \\\n","3      4     2       1     2     74.643082   -1.712300    7.789904 -2.544409   \n","5      6     0       1     2     72.283096   -0.719358    7.536090 -1.248331   \n","7      9     0       1     2     78.857880    1.486005    6.165491  1.727386   \n","16     4     2       3     2     77.175896    2.179976    7.434564  3.869647   \n","25     4     2       1     2     60.119453   -1.404929    8.703636 -1.905348   \n","\n","      Hit (y)   Hit (z)  Direction  Rally  Point acquisition  \\\n","3   12.938649  0.938888          1      1                1.0   \n","5   13.851430  1.185831          1      1                1.0   \n","7    8.694775  1.127259          3      1                1.0   \n","16  12.590224  0.866921          2      3                0.0   \n","25  11.803150  1.002467          1      6                0.0   \n","\n","    Point acquisition rate  \n","3                     0.78  \n","5                     0.79  \n","7                     0.94  \n","16                    0.23  \n","25                    0.23  "],"text/html":["\n","  <div id=\"df-38bf4753-30fc-4561-9cf4-8b6a4377c10e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Shot</th>\n","      <th>Type</th>\n","      <th>Stroke</th>\n","      <th>Spin</th>\n","      <th>Speed (KM/H)</th>\n","      <th>Bounce (x)</th>\n","      <th>Bounce (y)</th>\n","      <th>Hit (x)</th>\n","      <th>Hit (y)</th>\n","      <th>Hit (z)</th>\n","      <th>Direction</th>\n","      <th>Rally</th>\n","      <th>Point acquisition</th>\n","      <th>Point acquisition rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>74.643082</td>\n","      <td>-1.712300</td>\n","      <td>7.789904</td>\n","      <td>-2.544409</td>\n","      <td>12.938649</td>\n","      <td>0.938888</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.78</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>72.283096</td>\n","      <td>-0.719358</td>\n","      <td>7.536090</td>\n","      <td>-1.248331</td>\n","      <td>13.851430</td>\n","      <td>1.185831</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.79</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>78.857880</td>\n","      <td>1.486005</td>\n","      <td>6.165491</td>\n","      <td>1.727386</td>\n","      <td>8.694775</td>\n","      <td>1.127259</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.94</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>77.175896</td>\n","      <td>2.179976</td>\n","      <td>7.434564</td>\n","      <td>3.869647</td>\n","      <td>12.590224</td>\n","      <td>0.866921</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>0.0</td>\n","      <td>0.23</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>60.119453</td>\n","      <td>-1.404929</td>\n","      <td>8.703636</td>\n","      <td>-1.905348</td>\n","      <td>11.803150</td>\n","      <td>1.002467</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>0.0</td>\n","      <td>0.23</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-38bf4753-30fc-4561-9cf4-8b6a4377c10e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-38bf4753-30fc-4561-9cf4-8b6a4377c10e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-38bf4753-30fc-4561-9cf4-8b6a4377c10e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","def plot_rally(df, rally):\n","    rally_df = df[df['Rally'] == rally]\n","    x = rally_df['Shot']\n","    y = rally_df['Point acquisition rate']\n","    plt.plot(x, y)\n","    plt.xlabel('Shot')\n","    plt.ylabel('Point acquisition rate')\n","    plt.title('Rally {}'.format(rally))\n","    plt.show()\n"],"metadata":{"id":"kh4TLAY4FtO3","executionInfo":{"status":"ok","timestamp":1682298095861,"user_tz":-540,"elapsed":4,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["plot_rally(df_yoshizawa_classifier_confidence,  1)"],"metadata":{"id":"dlBKMfE3OwgI","colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"status":"ok","timestamp":1682298098069,"user_tz":-540,"elapsed":605,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"5110568f-3de9-4167-8d4b-85f99a61a8ab"},"execution_count":38,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"MA4G_Z9pbM6g","executionInfo":{"status":"aborted","timestamp":1682298064191,"user_tz":-540,"elapsed":31,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#久保の方\n","# 必要なライブラリをインポートする\n","import pandas as pd\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import train_test_split\n","\n","data = df_kubo\n","\n","# 特徴量と目的変数を分ける\n","X = data.drop('Point acquisition', axis=1)\n","y = data['Point acquisition']\n","\n","# 訓練用データとテスト用データに分割する\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=12)\n","\n","# モデルを訓練する\n","model_k = RandomForestClassifier()\n","model_k.fit(X_train, y_train)\n","\n","# 各特徴量の重みを取得\n","importances = model_k.feature_importances_\n","# 特徴量の重要度を降順にソートする\n","indices = np.argsort(importances)[::-1]\n","\n","\n","# 特徴量の名前を取得する\n","feature_names = X_train.columns.values\n","\n","# 特徴量の寄与率を出力する\n","for i in range(len(feature_names)):\n","    print(f\"{feature_names[indices[i]]}: {importances[indices[i]]}\")\n","# モデルの評価\n","score = model.score(X_test, y_test)\n","print('Accuracy:', score)\n","\n","# テスト用データを用いてモデルの精度を評価する\n","y_pred = model_k.predict(X_test)\n"],"metadata":{"id":"IidYTOy_bM-O","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682298117883,"user_tz":-540,"elapsed":39,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"b5383b5b-cb1f-4e7d-cc5d-c2f8cc02e5fd"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["Rally: 0.1424276795164349\n","Speed (KM/H): 0.14225106183734493\n","Hit (y): 0.11166014330952538\n","Bounce (y): 0.10914678445989888\n","Hit (x): 0.0951950134665621\n","Bounce (x): 0.09516577386899229\n","Hit (z): 0.09254825648807775\n","Shot: 0.08247899149813594\n","Type: 0.04205565107618551\n","Direction: 0.04100037460230882\n","Stroke: 0.024428439660639015\n","Spin: 0.021641830215894713\n","Accuracy: 0.4444444444444444\n"]}]},{"cell_type":"code","source":["# テスト用データのクラスの確率を予測する\n","y_proba = model_k.predict_proba(X)\n","\n","# テスト用データの各サンプルに対する予測確率を出力する\n","for i in range(len(y)):\n","    print(f\"Sample {i}: Class 0: {y_proba[i][0]}, Class 1: {y_proba[i][1]}\")"],"metadata":{"id":"FaK7W2FabXMQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682298120106,"user_tz":-540,"elapsed":36,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"0e29df34-6582-412d-f71d-4efcfeec73c2"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["Sample 0: Class 0: 0.23, Class 1: 0.77\n","Sample 1: Class 0: 0.13, Class 1: 0.87\n","Sample 2: Class 0: 0.08, Class 1: 0.92\n","Sample 3: Class 0: 0.13, Class 1: 0.87\n","Sample 4: Class 0: 0.15, Class 1: 0.85\n","Sample 5: Class 0: 0.81, Class 1: 0.19\n","Sample 6: Class 0: 0.31, Class 1: 0.69\n","Sample 7: Class 0: 0.41, Class 1: 0.59\n","Sample 8: Class 0: 0.77, Class 1: 0.23\n","Sample 9: Class 0: 0.79, Class 1: 0.21\n","Sample 10: Class 0: 0.62, Class 1: 0.38\n","Sample 11: Class 0: 0.39, Class 1: 0.61\n","Sample 12: Class 0: 0.37, Class 1: 0.63\n","Sample 13: Class 0: 0.21, Class 1: 0.79\n","Sample 14: Class 0: 0.07, Class 1: 0.93\n","Sample 15: Class 0: 0.75, Class 1: 0.25\n","Sample 16: Class 0: 0.41, Class 1: 0.59\n","Sample 17: Class 0: 0.11, Class 1: 0.89\n","Sample 18: Class 0: 0.12, Class 1: 0.88\n","Sample 19: Class 0: 0.06, Class 1: 0.94\n","Sample 20: Class 0: 0.85, Class 1: 0.15\n","Sample 21: Class 0: 0.1, Class 1: 0.9\n","Sample 22: Class 0: 0.84, Class 1: 0.16\n","Sample 23: Class 0: 0.35, Class 1: 0.65\n","Sample 24: Class 0: 0.34, Class 1: 0.66\n","Sample 25: Class 0: 0.07, Class 1: 0.93\n","Sample 26: Class 0: 0.13, Class 1: 0.87\n","Sample 27: Class 0: 0.08, Class 1: 0.92\n","Sample 28: Class 0: 0.14, Class 1: 0.86\n","Sample 29: Class 0: 0.08, Class 1: 0.92\n","Sample 30: Class 0: 0.07, Class 1: 0.93\n","Sample 31: Class 0: 0.6, Class 1: 0.4\n","Sample 32: Class 0: 0.42, Class 1: 0.58\n","Sample 33: Class 0: 0.78, Class 1: 0.22\n","Sample 34: Class 0: 0.89, Class 1: 0.11\n","Sample 35: Class 0: 0.81, Class 1: 0.19\n","Sample 36: Class 0: 0.35, Class 1: 0.65\n","Sample 37: Class 0: 0.11, Class 1: 0.89\n","Sample 38: Class 0: 0.15, Class 1: 0.85\n","Sample 39: Class 0: 0.73, Class 1: 0.27\n","Sample 40: Class 0: 0.72, Class 1: 0.28\n","Sample 41: Class 0: 0.44, Class 1: 0.56\n","Sample 42: Class 0: 0.19, Class 1: 0.81\n","Sample 43: Class 0: 0.13, Class 1: 0.87\n","Sample 44: Class 0: 0.16, Class 1: 0.84\n","Sample 45: Class 0: 0.12, Class 1: 0.88\n","Sample 46: Class 0: 0.88, Class 1: 0.12\n","Sample 47: Class 0: 0.84, Class 1: 0.16\n","Sample 48: Class 0: 0.58, Class 1: 0.42\n","Sample 49: Class 0: 0.13, Class 1: 0.87\n","Sample 50: Class 0: 0.17, Class 1: 0.83\n","Sample 51: Class 0: 0.21, Class 1: 0.79\n","Sample 52: Class 0: 0.56, Class 1: 0.44\n","Sample 53: Class 0: 0.05, Class 1: 0.95\n","Sample 54: Class 0: 0.14, Class 1: 0.86\n","Sample 55: Class 0: 0.69, Class 1: 0.31\n","Sample 56: Class 0: 0.91, Class 1: 0.09\n","Sample 57: Class 0: 0.8, Class 1: 0.2\n","Sample 58: Class 0: 0.74, Class 1: 0.26\n","Sample 59: Class 0: 0.85, Class 1: 0.15\n","Sample 60: Class 0: 0.15, Class 1: 0.85\n","Sample 61: Class 0: 0.47, Class 1: 0.53\n","Sample 62: Class 0: 0.09, Class 1: 0.91\n","Sample 63: Class 0: 0.59, Class 1: 0.41\n","Sample 64: Class 0: 0.84, Class 1: 0.16\n","Sample 65: Class 0: 0.77, Class 1: 0.23\n","Sample 66: Class 0: 0.74, Class 1: 0.26\n","Sample 67: Class 0: 0.84, Class 1: 0.16\n","Sample 68: Class 0: 0.13, Class 1: 0.87\n","Sample 69: Class 0: 0.1, Class 1: 0.9\n","Sample 70: Class 0: 0.78, Class 1: 0.22\n","Sample 71: Class 0: 0.76, Class 1: 0.24\n","Sample 72: Class 0: 0.86, Class 1: 0.14\n","Sample 73: Class 0: 0.84, Class 1: 0.16\n","Sample 74: Class 0: 0.85, Class 1: 0.15\n","Sample 75: Class 0: 0.74, Class 1: 0.26\n","Sample 76: Class 0: 0.78, Class 1: 0.22\n","Sample 77: Class 0: 0.68, Class 1: 0.32\n","Sample 78: Class 0: 0.27, Class 1: 0.73\n","Sample 79: Class 0: 0.19, Class 1: 0.81\n","Sample 80: Class 0: 0.3, Class 1: 0.7\n","Sample 81: Class 0: 0.1, Class 1: 0.9\n","Sample 82: Class 0: 0.24, Class 1: 0.76\n","Sample 83: Class 0: 0.78, Class 1: 0.22\n","Sample 84: Class 0: 0.71, Class 1: 0.29\n","Sample 85: Class 0: 0.77, Class 1: 0.23\n","Sample 86: Class 0: 0.77, Class 1: 0.23\n","Sample 87: Class 0: 0.27, Class 1: 0.73\n","Sample 88: Class 0: 0.16, Class 1: 0.84\n","Sample 89: Class 0: 0.09, Class 1: 0.91\n","Sample 90: Class 0: 0.78, Class 1: 0.22\n","Sample 91: Class 0: 0.84, Class 1: 0.16\n","Sample 92: Class 0: 0.25, Class 1: 0.75\n","Sample 93: Class 0: 0.13, Class 1: 0.87\n","Sample 94: Class 0: 0.05, Class 1: 0.95\n","Sample 95: Class 0: 0.06, Class 1: 0.94\n","Sample 96: Class 0: 0.06, Class 1: 0.94\n","Sample 97: Class 0: 0.06, Class 1: 0.94\n","Sample 98: Class 0: 0.11, Class 1: 0.89\n","Sample 99: Class 0: 0.17, Class 1: 0.83\n","Sample 100: Class 0: 0.11, Class 1: 0.89\n","Sample 101: Class 0: 0.15, Class 1: 0.85\n","Sample 102: Class 0: 0.09, Class 1: 0.91\n","Sample 103: Class 0: 0.17, Class 1: 0.83\n","Sample 104: Class 0: 0.15, Class 1: 0.85\n","Sample 105: Class 0: 0.2, Class 1: 0.8\n","Sample 106: Class 0: 0.26, Class 1: 0.74\n","Sample 107: Class 0: 0.1, Class 1: 0.9\n","Sample 108: Class 0: 0.21, Class 1: 0.79\n","Sample 109: Class 0: 0.2, Class 1: 0.8\n","Sample 110: Class 0: 0.09, Class 1: 0.91\n","Sample 111: Class 0: 0.4, Class 1: 0.6\n","Sample 112: Class 0: 0.77, Class 1: 0.23\n","Sample 113: Class 0: 0.76, Class 1: 0.24\n","Sample 114: Class 0: 0.83, Class 1: 0.17\n","Sample 115: Class 0: 0.12, Class 1: 0.88\n","Sample 116: Class 0: 0.15, Class 1: 0.85\n","Sample 117: Class 0: 0.12, Class 1: 0.88\n","Sample 118: Class 0: 0.09, Class 1: 0.91\n","Sample 119: Class 0: 0.12, Class 1: 0.88\n","Sample 120: Class 0: 0.11, Class 1: 0.89\n","Sample 121: Class 0: 0.08, Class 1: 0.92\n","Sample 122: Class 0: 0.22, Class 1: 0.78\n","Sample 123: Class 0: 0.27, Class 1: 0.73\n","Sample 124: Class 0: 0.1, Class 1: 0.9\n","Sample 125: Class 0: 0.85, Class 1: 0.15\n","Sample 126: Class 0: 0.71, Class 1: 0.29\n","Sample 127: Class 0: 0.12, Class 1: 0.88\n","Sample 128: Class 0: 0.19, Class 1: 0.81\n","Sample 129: Class 0: 0.24, Class 1: 0.76\n","Sample 130: Class 0: 0.11, Class 1: 0.89\n","Sample 131: Class 0: 0.05, Class 1: 0.95\n","Sample 132: Class 0: 0.18, Class 1: 0.82\n","Sample 133: Class 0: 0.12, Class 1: 0.88\n","Sample 134: Class 0: 0.04, Class 1: 0.96\n","Sample 135: Class 0: 0.16, Class 1: 0.84\n","Sample 136: Class 0: 0.15, Class 1: 0.85\n","Sample 137: Class 0: 0.12, Class 1: 0.88\n","Sample 138: Class 0: 0.05, Class 1: 0.95\n","Sample 139: Class 0: 0.17, Class 1: 0.83\n","Sample 140: Class 0: 0.77, Class 1: 0.23\n","Sample 141: Class 0: 0.79, Class 1: 0.21\n","Sample 142: Class 0: 0.3, Class 1: 0.7\n","Sample 143: Class 0: 0.81, Class 1: 0.19\n","Sample 144: Class 0: 0.12, Class 1: 0.88\n","Sample 145: Class 0: 0.15, Class 1: 0.85\n","Sample 146: Class 0: 0.73, Class 1: 0.27\n","Sample 147: Class 0: 0.3, Class 1: 0.7\n","Sample 148: Class 0: 0.12, Class 1: 0.88\n","Sample 149: Class 0: 0.17, Class 1: 0.83\n","Sample 150: Class 0: 0.15, Class 1: 0.85\n","Sample 151: Class 0: 0.17, Class 1: 0.83\n","Sample 152: Class 0: 0.12, Class 1: 0.88\n","Sample 153: Class 0: 0.04, Class 1: 0.96\n","Sample 154: Class 0: 0.78, Class 1: 0.22\n","Sample 155: Class 0: 0.79, Class 1: 0.21\n","Sample 156: Class 0: 0.14, Class 1: 0.86\n","Sample 157: Class 0: 0.24, Class 1: 0.76\n","Sample 158: Class 0: 0.2, Class 1: 0.8\n","Sample 159: Class 0: 0.77, Class 1: 0.23\n","Sample 160: Class 0: 0.76, Class 1: 0.24\n","Sample 161: Class 0: 0.19, Class 1: 0.81\n","Sample 162: Class 0: 0.23, Class 1: 0.77\n","Sample 163: Class 0: 0.15, Class 1: 0.85\n","Sample 164: Class 0: 0.09, Class 1: 0.91\n","Sample 165: Class 0: 0.19, Class 1: 0.81\n","Sample 166: Class 0: 0.14, Class 1: 0.86\n","Sample 167: Class 0: 0.05, Class 1: 0.95\n","Sample 168: Class 0: 0.06, Class 1: 0.94\n","Sample 169: Class 0: 0.55, Class 1: 0.45\n","Sample 170: Class 0: 0.87, Class 1: 0.13\n","Sample 171: Class 0: 0.8, Class 1: 0.2\n","Sample 172: Class 0: 0.87, Class 1: 0.13\n","Sample 173: Class 0: 0.76, Class 1: 0.24\n","Sample 174: Class 0: 0.85, Class 1: 0.15\n","Sample 175: Class 0: 0.9, Class 1: 0.1\n","Sample 176: Class 0: 0.72, Class 1: 0.28\n","Sample 177: Class 0: 0.3, Class 1: 0.7\n","Sample 178: Class 0: 0.89, Class 1: 0.11\n","Sample 179: Class 0: 0.76, Class 1: 0.24\n","Sample 180: Class 0: 0.83, Class 1: 0.17\n","Sample 181: Class 0: 0.43, Class 1: 0.57\n","Sample 182: Class 0: 0.52, Class 1: 0.48\n","Sample 183: Class 0: 0.7, Class 1: 0.3\n","Sample 184: Class 0: 0.18, Class 1: 0.82\n","Sample 185: Class 0: 0.18, Class 1: 0.82\n","Sample 186: Class 0: 0.16, Class 1: 0.84\n","Sample 187: Class 0: 0.06, Class 1: 0.94\n","Sample 188: Class 0: 0.16, Class 1: 0.84\n","Sample 189: Class 0: 0.06, Class 1: 0.94\n","Sample 190: Class 0: 0.11, Class 1: 0.89\n","Sample 191: Class 0: 0.2, Class 1: 0.8\n","Sample 192: Class 0: 0.22, Class 1: 0.78\n","Sample 193: Class 0: 0.59, Class 1: 0.41\n","Sample 194: Class 0: 0.13, Class 1: 0.87\n","Sample 195: Class 0: 0.11, Class 1: 0.89\n","Sample 196: Class 0: 0.03, Class 1: 0.97\n","Sample 197: Class 0: 0.58, Class 1: 0.42\n","Sample 198: Class 0: 0.12, Class 1: 0.88\n","Sample 199: Class 0: 0.12, Class 1: 0.88\n","Sample 200: Class 0: 0.49, Class 1: 0.51\n","Sample 201: Class 0: 0.18, Class 1: 0.82\n","Sample 202: Class 0: 0.18, Class 1: 0.82\n","Sample 203: Class 0: 0.77, Class 1: 0.23\n","Sample 204: Class 0: 0.75, Class 1: 0.25\n","Sample 205: Class 0: 0.68, Class 1: 0.32\n","Sample 206: Class 0: 0.72, Class 1: 0.28\n","Sample 207: Class 0: 0.86, Class 1: 0.14\n","Sample 208: Class 0: 0.87, Class 1: 0.13\n","Sample 209: Class 0: 0.59, Class 1: 0.41\n","Sample 210: Class 0: 0.58, Class 1: 0.42\n","Sample 211: Class 0: 0.87, Class 1: 0.13\n","Sample 212: Class 0: 0.85, Class 1: 0.15\n","Sample 213: Class 0: 0.8, Class 1: 0.2\n","Sample 214: Class 0: 0.66, Class 1: 0.34\n","Sample 215: Class 0: 0.22, Class 1: 0.78\n","Sample 216: Class 0: 0.37, Class 1: 0.63\n","Sample 217: Class 0: 0.8, Class 1: 0.2\n","Sample 218: Class 0: 0.24, Class 1: 0.76\n","Sample 219: Class 0: 0.49, Class 1: 0.51\n","Sample 220: Class 0: 0.13, Class 1: 0.87\n","Sample 221: Class 0: 0.09, Class 1: 0.91\n","Sample 222: Class 0: 0.27, Class 1: 0.73\n","Sample 223: Class 0: 0.48, Class 1: 0.52\n"]}]},{"cell_type":"code","source":["#久保の方はclass0が得点する確率\n","\n","df_kubo_classifier_confidence = df_kubo.copy()\n","new_col_name = \"Point acquisition rate\"\n","# テスト用データのクラスの確率を予測する\n","y_proba = model_k.predict_proba(X)\n","# 新しい列をデータフレームに追加する\n","df_kubo_classifier_confidence[new_col_name] = y_proba[:, 0]\n","df_kubo_classifier_confidence.head()"],"metadata":{"id":"5nU__KbJQuj6","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1682298120107,"user_tz":-540,"elapsed":29,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"ece0cdd9-b274-41e9-a15e-3ca70124b307"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Shot  Type  Stroke  Spin  Speed (KM/H)  Bounce (x)  Bounce (y)   Hit (x)  \\\n","2      3     3       3     2     91.792122    0.641170    9.733553  0.378104   \n","4      5     0       3     2     88.915466    1.157406    8.686537  1.816429   \n","6      7     0       3     2     44.372288    0.429961    4.240902  1.238550   \n","8     10     0       1     0     81.016518    1.950220    8.712015  1.939592   \n","12     3     3       1     1     63.699120    2.967690    8.343352  4.322237   \n","\n","      Hit (y)   Hit (z)  Direction  Rally  Point acquisition  \\\n","2   14.079935  1.302506          4      1                1.0   \n","4   14.363003  1.121761          4      1                1.0   \n","6   10.230923  0.944325          3      1                1.0   \n","8   12.365864  0.998229          2      1                1.0   \n","12  12.893879  1.032962          2      2                1.0   \n","\n","    Point acquisition rate  \n","2                     0.23  \n","4                     0.13  \n","6                     0.08  \n","8                     0.13  \n","12                    0.15  "],"text/html":["\n","  <div id=\"df-b9338b5f-d6a3-441d-adb0-634a6f9a54ba\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Shot</th>\n","      <th>Type</th>\n","      <th>Stroke</th>\n","      <th>Spin</th>\n","      <th>Speed (KM/H)</th>\n","      <th>Bounce (x)</th>\n","      <th>Bounce (y)</th>\n","      <th>Hit (x)</th>\n","      <th>Hit (y)</th>\n","      <th>Hit (z)</th>\n","      <th>Direction</th>\n","      <th>Rally</th>\n","      <th>Point acquisition</th>\n","      <th>Point acquisition rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>91.792122</td>\n","      <td>0.641170</td>\n","      <td>9.733553</td>\n","      <td>0.378104</td>\n","      <td>14.079935</td>\n","      <td>1.302506</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.23</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>88.915466</td>\n","      <td>1.157406</td>\n","      <td>8.686537</td>\n","      <td>1.816429</td>\n","      <td>14.363003</td>\n","      <td>1.121761</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.13</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>44.372288</td>\n","      <td>0.429961</td>\n","      <td>4.240902</td>\n","      <td>1.238550</td>\n","      <td>10.230923</td>\n","      <td>0.944325</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.08</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>81.016518</td>\n","      <td>1.950220</td>\n","      <td>8.712015</td>\n","      <td>1.939592</td>\n","      <td>12.365864</td>\n","      <td>0.998229</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.13</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>63.699120</td>\n","      <td>2.967690</td>\n","      <td>8.343352</td>\n","      <td>4.322237</td>\n","      <td>12.893879</td>\n","      <td>1.032962</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>0.15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b9338b5f-d6a3-441d-adb0-634a6f9a54ba')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b9338b5f-d6a3-441d-adb0-634a6f9a54ba button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b9338b5f-d6a3-441d-adb0-634a6f9a54ba');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["#df_last_yoshizawa = df[df['Player'] == 'Yoshizawa Masatsugu']\n","#df_last_yoshizawa.head()"],"metadata":{"id":"oG82u7C0RJVv","executionInfo":{"status":"ok","timestamp":1682298120108,"user_tz":-540,"elapsed":28,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":43,"outputs":[]},{"cell_type":"markdown","source":["## 新データで予測"],"metadata":{"id":"fM96iYKWLQhN"}},{"cell_type":"code","source":["df_new = pd.read_csv('match_2023_12_23.csv')\n","condition = df_new['Stroke'] == 'Feed'\n","subset = df_new[condition]\n","df_new = df_new.drop(subset.index)\n","df_new['Result'] = df_new['Result'].apply(in_to_1_outnet_to_0)\n","df_new['Bounce (y)'] = abs(df_new['Bounce (y)'] -11.885)   #深さをネットからの距離に\n","df_new['Hit (y)'] = abs(df_new['Hit (y)'] -11.885)"],"metadata":{"id":"cb8OkSCJWRtY","executionInfo":{"status":"ok","timestamp":1682298121484,"user_tz":-540,"elapsed":1402,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":44,"outputs":[]},{"cell_type":"code","source":["#Shotが1に戻るまでを1ラリーとして、試合を通してのラリー数を書いた列を追加するコードを書いて下さい。\n","#ただし、Typeがsecond_serveの時だけは、ラリー数をそのままにして下さい\n","rally_count = 0\n","prev_shot = 1\n","rally_list = []\n","for index, row in df_new.iterrows():\n","    if row['Type'] != 'second_serve':\n","        if row['Shot'] == 1:\n","            rally_count += 1\n","        rally_list.append(rally_count)\n","        prev_shot = row['Shot']\n","    else:\n","        rally_list.append(rally_list[-1])\n","\n","df_new['Rally'] = rally_list"],"metadata":{"id":"vquLstS5Wefj","executionInfo":{"status":"ok","timestamp":1682298121486,"user_tz":-540,"elapsed":279,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["# ラリー番号ごとにループを回す\n","for rally_num in range(1, df_new['Rally'].max() + 1):\n","    # ラリー番号が一致する行を抽出\n","    rally_df = df_new[df_new['Rally'] == rally_num]\n","    \n","    # ラリーの最後の行を抽出\n","    last_shot = rally_df.tail(1)\n","    \n","    # Point acquisitionを1にする条件に合致するかを判定\n","    if last_shot['Player'].values[0] == 'Yoshizawa Masatsugu' and last_shot['Result'].values[0] == 1:\n","        point_acquisition = 1\n","    elif last_shot['Player'].values[0] == '龍哉 久保' and last_shot['Result'].values[0] == 0:\n","        point_acquisition = 1\n","    else:\n","        point_acquisition = 0\n","    \n","    # ラリー全体に値をセット\n","    df_new.loc[df_new['Rally'] == rally_num, 'Point acquisition'] = point_acquisition\n"],"metadata":{"id":"qO_bmxN-WR3h","executionInfo":{"status":"ok","timestamp":1682298121486,"user_tz":-540,"elapsed":278,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["df_new['Bounce (x)'] = df_new['Bounce (x)'].shift()\n","df_new['Bounce (y)'] = df_new['Bounce (y)'].shift()\n","#サーブとリターンを除外\n","df_new = df_new[df_new[\"Stroke\"] != \"Serve\"]\n","df_new = df_new[df_new[\"Type\"] != \"return\"]\n","df_new['Result'] = df_new['Result'].apply(in_to_1_outnet_to_0)\n","df_new_kubo = df_new[df_new['Player'] =='龍哉 久保']\n","df_new_yoshizawa = df_new[df_new['Player'] == 'Yoshizawa Masatsugu']"],"metadata":{"id":"EVxTGD-rVelM","executionInfo":{"status":"ok","timestamp":1682298121487,"user_tz":-540,"elapsed":278,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":47,"outputs":[]},{"cell_type":"code","source":["df_new_yoshizawa = df_new_yoshizawa.drop(['Player','Point','Game', 'Set', 'Hit Depth', 'Favorited', 'Start Time', 'Video Time','Bounce Depth', 'Bounce Zone', 'Bounce Side', 'Hit Zone', 'Hit Side', 'Result'], axis=1)\n","df_new_kubo = df_new_kubo.drop(['Player','Point','Game', 'Set', 'Hit Depth', 'Favorited', 'Start Time', 'Video Time','Bounce Depth', 'Bounce Zone', 'Bounce Side', 'Hit Zone', 'Hit Side', 'Result'], axis=1)"],"metadata":{"id":"uFv9_Z3hVlIh","executionInfo":{"status":"ok","timestamp":1682298121487,"user_tz":-540,"elapsed":278,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["enc = LabelEncoder() # encはencoderの省略名称である変数です。\n","# fit()によりTypeカラムに対してラベルエンコーディングを行います。\n","label_encoder = enc.fit(df_new_yoshizawa[[\"Type\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_new_yoshizawa[\"Type\"] = label_encoder.transform(df_new_yoshizawa[[\"Type\"]])\n","\n","#Stroke\n","\n","label_encoder = enc.fit(df_new_yoshizawa[[\"Stroke\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_new_yoshizawa[\"Stroke\"] = label_encoder.transform(df_new_yoshizawa[[\"Stroke\"]])\n","\n","#Spin Categorical classes: ['Flat' 'Kick' 'Slice' 'Topspin'] Integer classes: [0 1 2 3]\n","label_encoder = enc.fit(df_new_yoshizawa[[\"Spin\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_new_yoshizawa[\"Spin\"] = label_encoder.transform(df_new_yoshizawa[[\"Spin\"]])\n","\n","#Direction Categorical classes: ['---' 'cross court' 'down the T' 'down the line' 'inside in' 'inside out''out wide']Integer classes: [0 1 2 3 4 5 6]\n","label_encoder = enc.fit(df_new_yoshizawa[[\"Direction\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_new_yoshizawa[\"Direction\"] = label_encoder.transform(df_new_yoshizawa[[\"Direction\"]])\n"],"metadata":{"id":"8nl97QH9VmGV","executionInfo":{"status":"ok","timestamp":1682298121487,"user_tz":-540,"elapsed":278,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":49,"outputs":[]},{"cell_type":"code","source":["enc = LabelEncoder() # encはencoderの省略名称である変数です。\n","# fit()によりTypeカラムに対してラベルエンコーディングを行います。\n","label_encoder = enc.fit(df_new_kubo[[\"Type\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_new_kubo[\"Type\"] = label_encoder.transform(df_new_kubo[[\"Type\"]])\n","\n","#Stroke\n","\n","label_encoder = enc.fit(df_new_kubo[[\"Stroke\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_new_kubo[\"Stroke\"] = label_encoder.transform(df_new_kubo[[\"Stroke\"]])\n","\n","#Spin Categorical classes: ['Flat' 'Kick' 'Slice' 'Topspin'] Integer classes: [0 1 2 3]\n","label_encoder = enc.fit(df_new_kubo[[\"Spin\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_new_kubo[\"Spin\"] = label_encoder.transform(df_new_kubo[[\"Spin\"]])\n","\n","#Direction Categorical classes: ['---' 'cross court' 'down the T' 'down the line' 'inside in' 'inside out''out wide']Integer classes: [0 1 2 3 4 5 6]\n","label_encoder = enc.fit(df_new_kubo[[\"Direction\"]])\n","integer_classes = label_encoder.transform(label_encoder.classes_)\n","df_new_kubo[\"Direction\"] = label_encoder.transform(df_new_kubo[[\"Direction\"]])"],"metadata":{"id":"wglGSHo8b02C","executionInfo":{"status":"ok","timestamp":1682298121488,"user_tz":-540,"elapsed":278,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["df_new_yoshizawa_1 = df_new_yoshizawa.drop(['Point acquisition'], axis =1)\n","df_new_kubo_1 = df_new_kubo.drop(['Point acquisition'], axis =1)\n","df_new_yoshizawa_1.head()"],"metadata":{"id":"up0vh7b8YsQF","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1682298121492,"user_tz":-540,"elapsed":282,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"45bc4e8e-2cf4-42af-b4bc-299b5e23f0d6"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Shot  Type  Stroke  Spin  Speed (KM/H)  Bounce (x)  Bounce (y)   Hit (x)  \\\n","4      4     1       3     1     61.960609   -1.390404    3.571020 -2.269601   \n","6      6     0       1     2     59.128944    1.601858   10.498333  2.037655   \n","8      8     0       1     2     66.406624    1.753331    6.068365  1.721740   \n","17     4     1       1     2     75.368713    2.511528   10.078634  2.922219   \n","22     4     1       1     2     85.846512    1.141296    6.935366  2.466373   \n","\n","      Hit (y)   Hit (z)  Direction  Rally  \n","4   10.074612  1.133872          0      1  \n","6   12.966954  0.892581          1      1  \n","8   12.007624  0.892581          0      1  \n","17  12.261439  0.892581          0      3  \n","22  11.565958  1.391710          0      4  "],"text/html":["\n","  <div id=\"df-0550f182-7f05-4589-b0e0-973e3ff56252\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Shot</th>\n","      <th>Type</th>\n","      <th>Stroke</th>\n","      <th>Spin</th>\n","      <th>Speed (KM/H)</th>\n","      <th>Bounce (x)</th>\n","      <th>Bounce (y)</th>\n","      <th>Hit (x)</th>\n","      <th>Hit (y)</th>\n","      <th>Hit (z)</th>\n","      <th>Direction</th>\n","      <th>Rally</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>61.960609</td>\n","      <td>-1.390404</td>\n","      <td>3.571020</td>\n","      <td>-2.269601</td>\n","      <td>10.074612</td>\n","      <td>1.133872</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>59.128944</td>\n","      <td>1.601858</td>\n","      <td>10.498333</td>\n","      <td>2.037655</td>\n","      <td>12.966954</td>\n","      <td>0.892581</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>66.406624</td>\n","      <td>1.753331</td>\n","      <td>6.068365</td>\n","      <td>1.721740</td>\n","      <td>12.007624</td>\n","      <td>0.892581</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>75.368713</td>\n","      <td>2.511528</td>\n","      <td>10.078634</td>\n","      <td>2.922219</td>\n","      <td>12.261439</td>\n","      <td>0.892581</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>85.846512</td>\n","      <td>1.141296</td>\n","      <td>6.935366</td>\n","      <td>2.466373</td>\n","      <td>11.565958</td>\n","      <td>1.391710</td>\n","      <td>0</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0550f182-7f05-4589-b0e0-973e3ff56252')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0550f182-7f05-4589-b0e0-973e3ff56252 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0550f182-7f05-4589-b0e0-973e3ff56252');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["# テスト用データのクラスの確率を予測する\n","y_proba = model.predict_proba(df_new_yoshizawa_1)\n","y = df_new_yoshizawa['Point acquisition']\n","\n","# テスト用データの各サンプルに対する予測確率を出力する\n","for i in range(len(y)):\n","    print(f\"Sample {i}: Class 0: {y_proba[i][0]}, Class 1: {y_proba[i][1]}\")"],"metadata":{"id":"eSTNaMpaY15i","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682298121494,"user_tz":-540,"elapsed":282,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"11718fc5-6297-46b7-df7b-333db9e83fec"},"execution_count":52,"outputs":[{"output_type":"stream","name":"stdout","text":["Sample 0: Class 0: 0.6, Class 1: 0.4\n","Sample 1: Class 0: 0.62, Class 1: 0.38\n","Sample 2: Class 0: 0.47, Class 1: 0.53\n","Sample 3: Class 0: 0.43, Class 1: 0.57\n","Sample 4: Class 0: 0.53, Class 1: 0.47\n","Sample 5: Class 0: 0.49, Class 1: 0.51\n","Sample 6: Class 0: 0.62, Class 1: 0.38\n","Sample 7: Class 0: 0.68, Class 1: 0.32\n","Sample 8: Class 0: 0.66, Class 1: 0.34\n","Sample 9: Class 0: 0.41, Class 1: 0.59\n","Sample 10: Class 0: 0.67, Class 1: 0.33\n","Sample 11: Class 0: 0.54, Class 1: 0.46\n","Sample 12: Class 0: 0.53, Class 1: 0.47\n","Sample 13: Class 0: 0.51, Class 1: 0.49\n","Sample 14: Class 0: 0.52, Class 1: 0.48\n","Sample 15: Class 0: 0.66, Class 1: 0.34\n","Sample 16: Class 0: 0.31, Class 1: 0.69\n","Sample 17: Class 0: 0.55, Class 1: 0.45\n","Sample 18: Class 0: 0.6, Class 1: 0.4\n","Sample 19: Class 0: 0.62, Class 1: 0.38\n","Sample 20: Class 0: 0.46, Class 1: 0.54\n","Sample 21: Class 0: 0.7, Class 1: 0.3\n","Sample 22: Class 0: 0.45, Class 1: 0.55\n","Sample 23: Class 0: 0.54, Class 1: 0.46\n","Sample 24: Class 0: 0.71, Class 1: 0.29\n","Sample 25: Class 0: 0.75, Class 1: 0.25\n","Sample 26: Class 0: 0.64, Class 1: 0.36\n","Sample 27: Class 0: 0.59, Class 1: 0.41\n","Sample 28: Class 0: 0.52, Class 1: 0.48\n","Sample 29: Class 0: 0.59, Class 1: 0.41\n","Sample 30: Class 0: 0.55, Class 1: 0.45\n","Sample 31: Class 0: 0.52, Class 1: 0.48\n","Sample 32: Class 0: 0.62, Class 1: 0.38\n","Sample 33: Class 0: 0.66, Class 1: 0.34\n","Sample 34: Class 0: 0.58, Class 1: 0.42\n","Sample 35: Class 0: 0.53, Class 1: 0.47\n","Sample 36: Class 0: 0.25, Class 1: 0.75\n","Sample 37: Class 0: 0.36, Class 1: 0.64\n","Sample 38: Class 0: 0.61, Class 1: 0.39\n","Sample 39: Class 0: 0.74, Class 1: 0.26\n","Sample 40: Class 0: 0.7, Class 1: 0.3\n","Sample 41: Class 0: 0.46, Class 1: 0.54\n","Sample 42: Class 0: 0.65, Class 1: 0.35\n","Sample 43: Class 0: 0.64, Class 1: 0.36\n","Sample 44: Class 0: 0.49, Class 1: 0.51\n","Sample 45: Class 0: 0.61, Class 1: 0.39\n","Sample 46: Class 0: 0.39, Class 1: 0.61\n","Sample 47: Class 0: 0.45, Class 1: 0.55\n","Sample 48: Class 0: 0.69, Class 1: 0.31\n","Sample 49: Class 0: 0.47, Class 1: 0.53\n","Sample 50: Class 0: 0.68, Class 1: 0.32\n","Sample 51: Class 0: 0.57, Class 1: 0.43\n","Sample 52: Class 0: 0.64, Class 1: 0.36\n","Sample 53: Class 0: 0.62, Class 1: 0.38\n","Sample 54: Class 0: 0.45, Class 1: 0.55\n","Sample 55: Class 0: 0.63, Class 1: 0.37\n","Sample 56: Class 0: 0.5, Class 1: 0.5\n","Sample 57: Class 0: 0.48, Class 1: 0.52\n","Sample 58: Class 0: 0.46, Class 1: 0.54\n","Sample 59: Class 0: 0.72, Class 1: 0.28\n","Sample 60: Class 0: 0.64, Class 1: 0.36\n","Sample 61: Class 0: 0.51, Class 1: 0.49\n","Sample 62: Class 0: 0.57, Class 1: 0.43\n","Sample 63: Class 0: 0.66, Class 1: 0.34\n","Sample 64: Class 0: 0.64, Class 1: 0.36\n","Sample 65: Class 0: 0.42, Class 1: 0.58\n","Sample 66: Class 0: 0.3, Class 1: 0.7\n","Sample 67: Class 0: 0.37, Class 1: 0.63\n","Sample 68: Class 0: 0.46, Class 1: 0.54\n","Sample 69: Class 0: 0.64, Class 1: 0.36\n"]}]},{"cell_type":"code","source":["df_new_yoshizawa_classifier_confidence = df_new_yoshizawa.copy()\n","new_col_name = \"Point acquisition rate\"\n","# テスト用データのクラスの確率を予測する\n","y_proba = model.predict_proba(df_new_yoshizawa_1)\n","# 新しい列をデータフレームに追加する\n","df_new_yoshizawa_classifier_confidence[new_col_name] = y_proba[:, 1]"],"metadata":{"id":"qHzA1aO7WDV3","executionInfo":{"status":"ok","timestamp":1682298121494,"user_tz":-540,"elapsed":277,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":53,"outputs":[]},{"cell_type":"code","source":["# テスト用データのクラスの確率を予測する\n","y_proba = model_k.predict_proba(df_new_kubo_1)\n","y = df_new_kubo['Point acquisition']\n","\n","# テスト用データの各サンプルに対する予測確率を出力する\n","for i in range(len(y)):\n","    print(f\"Sample {i}: Class 0: {y_proba[i][0]}, Class 1: {y_proba[i][1]}\")"],"metadata":{"id":"7SlBre9FcKtH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682298121494,"user_tz":-540,"elapsed":276,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"2c5ef692-61db-43bd-854a-fe8c9556c8a1"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["Sample 0: Class 0: 0.24, Class 1: 0.76\n","Sample 1: Class 0: 0.11, Class 1: 0.89\n","Sample 2: Class 0: 0.42, Class 1: 0.58\n","Sample 3: Class 0: 0.18, Class 1: 0.82\n","Sample 4: Class 0: 0.62, Class 1: 0.38\n","Sample 5: Class 0: 0.3, Class 1: 0.7\n","Sample 6: Class 0: 0.24, Class 1: 0.76\n","Sample 7: Class 0: 0.4, Class 1: 0.6\n","Sample 8: Class 0: 0.32, Class 1: 0.68\n","Sample 9: Class 0: 0.57, Class 1: 0.43\n","Sample 10: Class 0: 0.32, Class 1: 0.68\n","Sample 11: Class 0: 0.4, Class 1: 0.6\n","Sample 12: Class 0: 0.41, Class 1: 0.59\n","Sample 13: Class 0: 0.17, Class 1: 0.83\n","Sample 14: Class 0: 0.31, Class 1: 0.69\n","Sample 15: Class 0: 0.2, Class 1: 0.8\n","Sample 16: Class 0: 0.47, Class 1: 0.53\n","Sample 17: Class 0: 0.37, Class 1: 0.63\n","Sample 18: Class 0: 0.3, Class 1: 0.7\n","Sample 19: Class 0: 0.14, Class 1: 0.86\n","Sample 20: Class 0: 0.56, Class 1: 0.44\n","Sample 21: Class 0: 0.23, Class 1: 0.77\n","Sample 22: Class 0: 0.68, Class 1: 0.32\n","Sample 23: Class 0: 0.19, Class 1: 0.81\n","Sample 24: Class 0: 0.21, Class 1: 0.79\n","Sample 25: Class 0: 0.61, Class 1: 0.39\n","Sample 26: Class 0: 0.33, Class 1: 0.67\n","Sample 27: Class 0: 0.58, Class 1: 0.42\n","Sample 28: Class 0: 0.25, Class 1: 0.75\n","Sample 29: Class 0: 0.66, Class 1: 0.34\n","Sample 30: Class 0: 0.47, Class 1: 0.53\n","Sample 31: Class 0: 0.36, Class 1: 0.64\n","Sample 32: Class 0: 0.28, Class 1: 0.72\n","Sample 33: Class 0: 0.23, Class 1: 0.77\n","Sample 34: Class 0: 0.33, Class 1: 0.67\n","Sample 35: Class 0: 0.33, Class 1: 0.67\n","Sample 36: Class 0: 0.45, Class 1: 0.55\n","Sample 37: Class 0: 0.45, Class 1: 0.55\n","Sample 38: Class 0: 0.2, Class 1: 0.8\n","Sample 39: Class 0: 0.46, Class 1: 0.54\n","Sample 40: Class 0: 0.25, Class 1: 0.75\n","Sample 41: Class 0: 0.42, Class 1: 0.58\n","Sample 42: Class 0: 0.36, Class 1: 0.64\n","Sample 43: Class 0: 0.16, Class 1: 0.84\n","Sample 44: Class 0: 0.48, Class 1: 0.52\n","Sample 45: Class 0: 0.2, Class 1: 0.8\n","Sample 46: Class 0: 0.17, Class 1: 0.83\n","Sample 47: Class 0: 0.26, Class 1: 0.74\n","Sample 48: Class 0: 0.21, Class 1: 0.79\n","Sample 49: Class 0: 0.34, Class 1: 0.66\n","Sample 50: Class 0: 0.42, Class 1: 0.58\n","Sample 51: Class 0: 0.41, Class 1: 0.59\n","Sample 52: Class 0: 0.42, Class 1: 0.58\n","Sample 53: Class 0: 0.58, Class 1: 0.42\n","Sample 54: Class 0: 0.2, Class 1: 0.8\n","Sample 55: Class 0: 0.64, Class 1: 0.36\n","Sample 56: Class 0: 0.7, Class 1: 0.3\n","Sample 57: Class 0: 0.25, Class 1: 0.75\n","Sample 58: Class 0: 0.39, Class 1: 0.61\n","Sample 59: Class 0: 0.25, Class 1: 0.75\n","Sample 60: Class 0: 0.62, Class 1: 0.38\n","Sample 61: Class 0: 0.35, Class 1: 0.65\n","Sample 62: Class 0: 0.57, Class 1: 0.43\n","Sample 63: Class 0: 0.26, Class 1: 0.74\n","Sample 64: Class 0: 0.5, Class 1: 0.5\n","Sample 65: Class 0: 0.57, Class 1: 0.43\n","Sample 66: Class 0: 0.38, Class 1: 0.62\n","Sample 67: Class 0: 0.26, Class 1: 0.74\n","Sample 68: Class 0: 0.35, Class 1: 0.65\n","Sample 69: Class 0: 0.39, Class 1: 0.61\n","Sample 70: Class 0: 0.14, Class 1: 0.86\n","Sample 71: Class 0: 0.36, Class 1: 0.64\n","Sample 72: Class 0: 0.33, Class 1: 0.67\n","Sample 73: Class 0: 0.39, Class 1: 0.61\n","Sample 74: Class 0: 0.34, Class 1: 0.66\n","Sample 75: Class 0: 0.4, Class 1: 0.6\n","Sample 76: Class 0: 0.24, Class 1: 0.76\n"]}]},{"cell_type":"code","source":["#久保の方はclass0が得点確率\n","df_new_kubo_classifier_confidence = df_new_kubo.copy()\n","new_col_name = \"Point acquisition rate\"\n","# テスト用データのクラスの確率を予測する\n","y_proba = model_k.predict_proba(df_new_kubo_1)\n","# 新しい列をデータフレームに追加する\n","df_new_kubo_classifier_confidence[new_col_name] = y_proba[:, 0]"],"metadata":{"id":"opgpLpNacN2I","executionInfo":{"status":"ok","timestamp":1682298121495,"user_tz":-540,"elapsed":273,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":55,"outputs":[]},{"cell_type":"code","source":["df_new_yoshizawa_classifier_confidence.head(15)"],"metadata":{"id":"yfxg1PUKZuQd","colab":{"base_uri":"https://localhost:8080/","height":564},"executionInfo":{"status":"ok","timestamp":1682298121495,"user_tz":-540,"elapsed":270,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"d267b8a4-0827-4328-bb29-00fa5a27eda0"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Shot  Type  Stroke  Spin  Speed (KM/H)  Bounce (x)  Bounce (y)   Hit (x)  \\\n","4      4     1       3     1     61.960609   -1.390404    3.571020 -2.269601   \n","6      6     0       1     2     59.128944    1.601858   10.498333  2.037655   \n","8      8     0       1     2     66.406624    1.753331    6.068365  1.721740   \n","17     4     1       1     2     75.368713    2.511528   10.078634  2.922219   \n","22     4     1       1     2     85.846512    1.141296    6.935366  2.466373   \n","27     3     2       1     2     76.694168   -0.646455    9.871183 -0.749613   \n","31     3     2       2     0     65.255112    0.320366    2.815140  0.320366   \n","33     5     0       2     0     22.972282    2.035769    1.642393  2.035769   \n","35     7     0       0     0     69.458229   -1.673740    2.881861 -2.132430   \n","44     3     2       1     0     74.415573   -1.553732    5.810151 -1.489427   \n","48     4     1       3     2     63.302292   -0.567070    7.422040  0.363303   \n","53     4     1       3     0     82.597549    1.974472    8.703636  2.479937   \n","55     6     0       3     2     99.315041    1.252149    7.118126  1.784923   \n","57     8     0       1     1     53.745724   -2.795853    7.282275 -3.427684   \n","62     4     1       1     2     77.431099   -0.535565    6.622358  1.063587   \n","\n","      Hit (y)   Hit (z)  Direction  Rally  Point acquisition  \\\n","4   10.074612  1.133872          0      1                1.0   \n","6   12.966954  0.892581          1      1                1.0   \n","8   12.007624  0.892581          0      1                1.0   \n","17  12.261439  0.892581          0      3                1.0   \n","22  11.565958  1.391710          0      4                1.0   \n","27  12.978408  0.882649          1      5                1.0   \n","31   1.888284  1.218461          0      6                1.0   \n","33   2.167640  0.625607          1      6                1.0   \n","35   0.987676  1.068722          1      6                1.0   \n","44   9.921945  1.034313          0      9                1.0   \n","48   9.769657  1.033564          0     10                1.0   \n","53  12.612379  0.405949          0     11                1.0   \n","55  13.356610  0.896208          0     11                1.0   \n","57  11.191018  0.710259          0     11                1.0   \n","62  12.215397  1.252308          2     12                1.0   \n","\n","    Point acquisition rate  \n","4                     0.40  \n","6                     0.38  \n","8                     0.53  \n","17                    0.57  \n","22                    0.47  \n","27                    0.51  \n","31                    0.38  \n","33                    0.32  \n","35                    0.34  \n","44                    0.59  \n","48                    0.33  \n","53                    0.46  \n","55                    0.47  \n","57                    0.49  \n","62                    0.48  "],"text/html":["\n","  <div id=\"df-dd723f49-c740-4dca-8ced-fa5d98a46f6e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Shot</th>\n","      <th>Type</th>\n","      <th>Stroke</th>\n","      <th>Spin</th>\n","      <th>Speed (KM/H)</th>\n","      <th>Bounce (x)</th>\n","      <th>Bounce (y)</th>\n","      <th>Hit (x)</th>\n","      <th>Hit (y)</th>\n","      <th>Hit (z)</th>\n","      <th>Direction</th>\n","      <th>Rally</th>\n","      <th>Point acquisition</th>\n","      <th>Point acquisition rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>61.960609</td>\n","      <td>-1.390404</td>\n","      <td>3.571020</td>\n","      <td>-2.269601</td>\n","      <td>10.074612</td>\n","      <td>1.133872</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.40</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>59.128944</td>\n","      <td>1.601858</td>\n","      <td>10.498333</td>\n","      <td>2.037655</td>\n","      <td>12.966954</td>\n","      <td>0.892581</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.38</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>66.406624</td>\n","      <td>1.753331</td>\n","      <td>6.068365</td>\n","      <td>1.721740</td>\n","      <td>12.007624</td>\n","      <td>0.892581</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.53</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>75.368713</td>\n","      <td>2.511528</td>\n","      <td>10.078634</td>\n","      <td>2.922219</td>\n","      <td>12.261439</td>\n","      <td>0.892581</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1.0</td>\n","      <td>0.57</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>85.846512</td>\n","      <td>1.141296</td>\n","      <td>6.935366</td>\n","      <td>2.466373</td>\n","      <td>11.565958</td>\n","      <td>1.391710</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>0.47</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>76.694168</td>\n","      <td>-0.646455</td>\n","      <td>9.871183</td>\n","      <td>-0.749613</td>\n","      <td>12.978408</td>\n","      <td>0.882649</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1.0</td>\n","      <td>0.51</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>65.255112</td>\n","      <td>0.320366</td>\n","      <td>2.815140</td>\n","      <td>0.320366</td>\n","      <td>1.888284</td>\n","      <td>1.218461</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>1.0</td>\n","      <td>0.38</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>22.972282</td>\n","      <td>2.035769</td>\n","      <td>1.642393</td>\n","      <td>2.035769</td>\n","      <td>2.167640</td>\n","      <td>0.625607</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>1.0</td>\n","      <td>0.32</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>69.458229</td>\n","      <td>-1.673740</td>\n","      <td>2.881861</td>\n","      <td>-2.132430</td>\n","      <td>0.987676</td>\n","      <td>1.068722</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>1.0</td>\n","      <td>0.34</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>74.415573</td>\n","      <td>-1.553732</td>\n","      <td>5.810151</td>\n","      <td>-1.489427</td>\n","      <td>9.921945</td>\n","      <td>1.034313</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>1.0</td>\n","      <td>0.59</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>63.302292</td>\n","      <td>-0.567070</td>\n","      <td>7.422040</td>\n","      <td>0.363303</td>\n","      <td>9.769657</td>\n","      <td>1.033564</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>1.0</td>\n","      <td>0.33</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>82.597549</td>\n","      <td>1.974472</td>\n","      <td>8.703636</td>\n","      <td>2.479937</td>\n","      <td>12.612379</td>\n","      <td>0.405949</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>1.0</td>\n","      <td>0.46</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>99.315041</td>\n","      <td>1.252149</td>\n","      <td>7.118126</td>\n","      <td>1.784923</td>\n","      <td>13.356610</td>\n","      <td>0.896208</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>1.0</td>\n","      <td>0.47</td>\n","    </tr>\n","    <tr>\n","      <th>57</th>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>53.745724</td>\n","      <td>-2.795853</td>\n","      <td>7.282275</td>\n","      <td>-3.427684</td>\n","      <td>11.191018</td>\n","      <td>0.710259</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>1.0</td>\n","      <td>0.49</td>\n","    </tr>\n","    <tr>\n","      <th>62</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>77.431099</td>\n","      <td>-0.535565</td>\n","      <td>6.622358</td>\n","      <td>1.063587</td>\n","      <td>12.215397</td>\n","      <td>1.252308</td>\n","      <td>2</td>\n","      <td>12</td>\n","      <td>1.0</td>\n","      <td>0.48</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd723f49-c740-4dca-8ced-fa5d98a46f6e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dd723f49-c740-4dca-8ced-fa5d98a46f6e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dd723f49-c740-4dca-8ced-fa5d98a46f6e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["df_new_kubo_classifier_confidence.tail()"],"metadata":{"id":"QoU7HshhcU2o","colab":{"base_uri":"https://localhost:8080/","height":250},"executionInfo":{"status":"ok","timestamp":1682298121495,"user_tz":-540,"elapsed":268,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"da4bfca9-e1c1-45e7-97cb-bd38e2dcd5c6"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Shot  Type  Stroke  Spin  Speed (KM/H)  Bounce (x)  Bounce (y)   Hit (x)  \\\n","247    13     0       3     2     91.384712   -1.048501    9.729427 -1.651955   \n","249    15     0       3     2     91.843597    0.822206    6.013203  1.848077   \n","252     3     2       3     2     64.095451   -2.134717    9.871183 -2.677826   \n","255     3     2       3     2     55.308556    0.399788    7.854863  0.824710   \n","257     5     0       1     1     59.599545   -2.436444    7.028461 -3.100243   \n","\n","       Hit (y)   Hit (z)  Direction  Rally  Point acquisition  \\\n","247  12.985543  1.190656          2     51                1.0   \n","249  10.531100  1.065693          1     51                1.0   \n","252  13.426672  1.062944          3     52                1.0   \n","255  13.404860  0.908042          0     53                1.0   \n","257  11.800173  1.138919          0     53                1.0   \n","\n","     Point acquisition rate  \n","247                    0.33  \n","249                    0.39  \n","252                    0.34  \n","255                    0.40  \n","257                    0.24  "],"text/html":["\n","  <div id=\"df-61a918f3-6d16-47be-a135-0da7aba2d04d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Shot</th>\n","      <th>Type</th>\n","      <th>Stroke</th>\n","      <th>Spin</th>\n","      <th>Speed (KM/H)</th>\n","      <th>Bounce (x)</th>\n","      <th>Bounce (y)</th>\n","      <th>Hit (x)</th>\n","      <th>Hit (y)</th>\n","      <th>Hit (z)</th>\n","      <th>Direction</th>\n","      <th>Rally</th>\n","      <th>Point acquisition</th>\n","      <th>Point acquisition rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>247</th>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>91.384712</td>\n","      <td>-1.048501</td>\n","      <td>9.729427</td>\n","      <td>-1.651955</td>\n","      <td>12.985543</td>\n","      <td>1.190656</td>\n","      <td>2</td>\n","      <td>51</td>\n","      <td>1.0</td>\n","      <td>0.33</td>\n","    </tr>\n","    <tr>\n","      <th>249</th>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>91.843597</td>\n","      <td>0.822206</td>\n","      <td>6.013203</td>\n","      <td>1.848077</td>\n","      <td>10.531100</td>\n","      <td>1.065693</td>\n","      <td>1</td>\n","      <td>51</td>\n","      <td>1.0</td>\n","      <td>0.39</td>\n","    </tr>\n","    <tr>\n","      <th>252</th>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>64.095451</td>\n","      <td>-2.134717</td>\n","      <td>9.871183</td>\n","      <td>-2.677826</td>\n","      <td>13.426672</td>\n","      <td>1.062944</td>\n","      <td>3</td>\n","      <td>52</td>\n","      <td>1.0</td>\n","      <td>0.34</td>\n","    </tr>\n","    <tr>\n","      <th>255</th>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>55.308556</td>\n","      <td>0.399788</td>\n","      <td>7.854863</td>\n","      <td>0.824710</td>\n","      <td>13.404860</td>\n","      <td>0.908042</td>\n","      <td>0</td>\n","      <td>53</td>\n","      <td>1.0</td>\n","      <td>0.40</td>\n","    </tr>\n","    <tr>\n","      <th>257</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>59.599545</td>\n","      <td>-2.436444</td>\n","      <td>7.028461</td>\n","      <td>-3.100243</td>\n","      <td>11.800173</td>\n","      <td>1.138919</td>\n","      <td>0</td>\n","      <td>53</td>\n","      <td>1.0</td>\n","      <td>0.24</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-61a918f3-6d16-47be-a135-0da7aba2d04d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-61a918f3-6d16-47be-a135-0da7aba2d04d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-61a918f3-6d16-47be-a135-0da7aba2d04d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["plot_rally(df_new_yoshizawa_classifier_confidence,  1)"],"metadata":{"id":"guxQNKtmZo34","colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"status":"ok","timestamp":1682298122539,"user_tz":-540,"elapsed":1310,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"ca389f3d-5b9c-4dc1-b57d-318d7a959a1b"},"execution_count":58,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plot_rally(df_new_kubo_classifier_confidence,  1)"],"metadata":{"id":"XRzceiwScZBe","colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"status":"ok","timestamp":1682298122539,"user_tz":-540,"elapsed":108,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"e3f1c9b4-03ec-4ed8-b723-57df07c8768a"},"execution_count":59,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","def plot_rally_1(df_yoshizawa, df_kubo, rally_num):\n","    # Yoshizawaのデータを抽出\n","    yoshizawa_df = df_yoshizawa[df_yoshizawa['Rally'] == rally_num]\n","    \n","    # Kuboのデータを抽出\n","    kubo_df = df_kubo[df_kubo['Rally'] == rally_num]\n","    \n","    # 折れ線グラフを描画\n","    plt.plot(yoshizawa_df['Shot'], yoshizawa_df['Point acquisition rate'], label='Yoshizawa')\n","    plt.plot(kubo_df['Shot'], kubo_df['Point acquisition rate'], label='Kubo')\n","    \n","    # グラフの設定\n","    plt.title(f'Rally {rally_num}')\n","    plt.xlabel('Shot')\n","    plt.ylabel('Point acquisition rate')\n","    plt.legend()\n","    plt.show()\n"],"metadata":{"id":"hRNzgGCldpHJ","executionInfo":{"status":"ok","timestamp":1682298122545,"user_tz":-540,"elapsed":112,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":60,"outputs":[]},{"cell_type":"code","source":["plot_rally_1(df_new_yoshizawa_classifier_confidence, df_new_kubo_classifier_confidence, 15)  #1,6,11,12,15,16,19,21,23,29,30,31,39,40,41,42,43,51\n"],"metadata":{"id":"EjTgNz7ueYwH","colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"status":"ok","timestamp":1682298157984,"user_tz":-540,"elapsed":1577,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"1c840f6d-b11b-4b8a-fb9e-4d64cc89fdc4"},"execution_count":70,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["a = df_new_yoshizawa_classifier_confidence[df_new_yoshizawa_classifier_confidence['Rally'] == 12]\n","b = df_new_kubo_classifier_confidence[df_new_kubo_classifier_confidence['Rally'] == 12]\n","print(a)"],"metadata":{"id":"-cl-NM1AeZgx","executionInfo":{"status":"ok","timestamp":1682298122546,"user_tz":-540,"elapsed":110,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"6b0d6ee8-fb32-4765-e7fd-9f5a33780f6b"},"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["    Shot  Type  Stroke  Spin  Speed (KM/H)  Bounce (x)  Bounce (y)   Hit (x)  \\\n","62     4     1       1     2     77.431099   -0.535565    6.622358  1.063587   \n","64     6     0       1     1     62.553978    0.399788    5.759388 -1.198761   \n","66     8     0       3     2     78.341812    0.889567    6.673097  2.089458   \n","\n","      Hit (y)   Hit (z)  Direction  Rally  Point acquisition  \\\n","62  12.215397  1.252308          2     12                1.0   \n","64  11.908233  0.599404          1     12                1.0   \n","66  12.606034  1.007612          1     12                1.0   \n","\n","    Point acquisition rate  \n","62                    0.48  \n","64                    0.34  \n","66                    0.69  \n"]}]},{"cell_type":"code","source":["print(b)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r7ul5UPOYNpp","executionInfo":{"status":"ok","timestamp":1682298122547,"user_tz":-540,"elapsed":107,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"56e16264-4669-4637-e97e-8d273a8955ae"},"execution_count":63,"outputs":[{"output_type":"stream","name":"stdout","text":["    Shot  Type  Stroke  Spin  Speed (KM/H)  Bounce (x)  Bounce (y)   Hit (x)  \\\n","61     3     2       3     0     73.978661   -2.041934    7.405314 -2.696697   \n","63     5     0       1     2     64.759766    0.890977    4.886990  0.946499   \n","65     7     0       3     2     82.733635   -1.148826    8.871588 -0.753287   \n","67     9     0       1     2     53.318947    2.723085   10.890841  3.054984   \n","\n","      Hit (y)   Hit (z)  Direction  Rally  Point acquisition  \\\n","61  12.139794  0.965605          1     12                1.0   \n","63  12.315922  1.165961          1     12                1.0   \n","65  11.355561  1.236130          0     12                1.0   \n","67  12.819830  0.661858          0     12                1.0   \n","\n","    Point acquisition rate  \n","61                    0.30  \n","63                    0.14  \n","65                    0.56  \n","67                    0.23  \n"]}]},{"cell_type":"code","source":["1-0.082971"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hJrk49kcSPP_","executionInfo":{"status":"ok","timestamp":1682298122547,"user_tz":-540,"elapsed":103,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"6a6061e3-2cd4-469f-bce9-6877177c2f3e"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.917029"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["a = [[3, 0.530478], [4,0.444821], [5,0.621083],[6,0.546673 ],[7,0.747101],[8,0.645704],[9,0.917029]]\n","b= [[3, 0.469521], [4, 0.555179], [5,0.378917],[6,0.453327],[7,0.252899],[8,0.354296],[9,0.082971]]"],"metadata":{"id":"Pl14_Jm3QdYC","executionInfo":{"status":"ok","timestamp":1682298122547,"user_tz":-540,"elapsed":100,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","a_x = [i[0] for i in a]\n","a_y = [i[1] for i in a]\n","\n","b_x = [i[0] for i in b]\n","b_y = [i[1] for i in b]\n","\n","plt.plot(a_x, a_y, label='a')\n","plt.plot(b_x, b_y, label='b')\n","\n","plt.xlabel('Shot')\n","plt.ylabel('Point acquisition rate')\n","plt.xticks([2, 3, 4, 5, 6])\n","plt.yticks([0.1, 0.5, 0.9])\n","plt.legend()\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"nBcXkkZbSHQN","executionInfo":{"status":"ok","timestamp":1682298122548,"user_tz":-540,"elapsed":100,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}},"outputId":"a65dbc40-1036-4613-e888-d566f79bdb50"},"execution_count":66,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"Mlz7eCVpS_vR","executionInfo":{"status":"ok","timestamp":1682298122548,"user_tz":-540,"elapsed":99,"user":{"displayName":"吉澤将嗣_竹下研究室","userId":"07951734636376519957"}}},"execution_count":66,"outputs":[]}]}